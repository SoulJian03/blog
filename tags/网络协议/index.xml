<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>网络协议 on SoulJian小站</title><link>https://souljian.cn/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</link><description>Recent content in 网络协议 on SoulJian小站</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 May 2025 16:23:08 +0800</lastBuildDate><atom:link href="https://souljian.cn/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/index.xml" rel="self" type="application/rss+xml"/><item><title>IP数据报文字段详解</title><link>https://souljian.cn/p/746087788/</link><pubDate>Thu, 01 May 2025 16:23:08 +0800</pubDate><guid>https://souljian.cn/p/746087788/</guid><description>&lt;h2 id="ip数据报文概述"&gt;IP数据报文概述
&lt;/h2&gt;&lt;p&gt;IP（Internet Protocol）数据报文是互联网协议中最基础的数据传输单元。每个IP数据报都包含了确保数据能够正确传输所需的各种信息。本文将详细介绍IP数据报文的各个字段及其作用。&lt;/p&gt;
&lt;h2 id="ip数据报文结构"&gt;IP数据报文结构
&lt;/h2&gt;&lt;p&gt;IP数据报文主要由首部和数据两部分组成。其中首部包含了控制信息，而数据部分包含了上层协议的数据。&lt;/p&gt;
&lt;h3 id="首部字段详解"&gt;首部字段详解
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;版本（Version）- 4位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于标识IP协议的版本&lt;/li&gt;
&lt;li&gt;IPv4的值为4，IPv6的值为6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;首部长度（IHL，Internet Header Length）- 4位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标识IP首部的长度&lt;/li&gt;
&lt;li&gt;以32位（4字节）为单位&lt;/li&gt;
&lt;li&gt;最小值为5（表示20字节），最大值为15（表示60字节）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;服务类型（Type of Service）- 8位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于指定服务质量&lt;/li&gt;
&lt;li&gt;包含优先级和服务类型信息&lt;/li&gt;
&lt;li&gt;现代网络中常用于区分服务（DiffServ）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;总长度（Total Length）- 16位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标识整个IP数据报的长度&lt;/li&gt;
&lt;li&gt;包括首部和数据部分&lt;/li&gt;
&lt;li&gt;最大值为65535字节&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;标识（Identification）- 16位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于分片重组&lt;/li&gt;
&lt;li&gt;同一数据报的所有分片具有相同的标识值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;标志（Flags）- 3位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制数据报分片&lt;/li&gt;
&lt;li&gt;包括：
&lt;ul&gt;
&lt;li&gt;DF（Don&amp;rsquo;t Fragment）：禁止分片&lt;/li&gt;
&lt;li&gt;MF（More Fragments）：后面还有分片&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;片偏移（Fragment Offset）- 13位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指示分片在原始数据报中的位置&lt;/li&gt;
&lt;li&gt;以8字节为单位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;生存时间（TTL，Time To Live）- 8位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;防止数据报无限循环&lt;/li&gt;
&lt;li&gt;每经过一个路由器减1&lt;/li&gt;
&lt;li&gt;当值为0时，数据报被丢弃&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;协议（Protocol）- 8位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指示上层协议类型&lt;/li&gt;
&lt;li&gt;常见值：
&lt;ul&gt;
&lt;li&gt;1 = ICMP&lt;/li&gt;
&lt;li&gt;6 = TCP&lt;/li&gt;
&lt;li&gt;17 = UDP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;首部校验和（Header Checksum）- 16位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于检验首部的完整性&lt;/li&gt;
&lt;li&gt;不包括数据部分的校验&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;源IP地址（Source Address）- 32位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发送方的IP地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;目的IP地址（Destination Address）- 32位&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接收方的IP地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;选项（Options）- 可变长度&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可选字段&lt;/li&gt;
&lt;li&gt;包含特殊处理信息&lt;/li&gt;
&lt;li&gt;很少使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="ip数据报文分片"&gt;IP数据报文分片
&lt;/h2&gt;&lt;p&gt;当IP数据报文大小超过网络的MTU（最大传输单元）时，需要进行分片处理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分片规则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个分片都必须是8字节的整数倍&lt;/li&gt;
&lt;li&gt;除最后一个分片外，其他分片的大小应该相等&lt;/li&gt;
&lt;li&gt;所有分片都保持相同的标识字段值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分片重组&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目的主机负责重组&lt;/li&gt;
&lt;li&gt;根据标识字段和片偏移进行重组&lt;/li&gt;
&lt;li&gt;MF标志位用于判断是否为最后一个分片&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="实际应用举例"&gt;实际应用举例
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;MTU发现&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ping -D -s &lt;span class="m"&gt;1472&lt;/span&gt; 8.8.8.8 &lt;span class="c1"&gt;# 测试最大MTU&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start="2"&gt;
&lt;li&gt;&lt;strong&gt;查看IP报文结构&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tcpdump -xx -i eth0 &lt;span class="c1"&gt;# 抓取并显示完整的IP报文&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="ip数据报文结构图"&gt;IP数据报文结构图
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;比特 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 0 |版本号(4) |首部长度(4) | 服务类型(8) | 总长度(16) |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 32 | 标识(16) |标志(3)| 片偏移(13) |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 64 | 生存时间(8) | 协议(8) | 首部校验和(16) |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 96 | 源IP地址(32) |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 128 | 目的IP地址(32) |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 160 | 选项 + 填充(可变长度) |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; | 数据部分(可变长度) |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="服务类型tos字段详细结构"&gt;服务类型(ToS)字段详细结构
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 0 1 2 3 4 5 6 7
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;| 优先级 | D | T | R | C |未用|
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+---+---+---+---+---+---+---+---+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 其中：
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; - 优先级(0-2位)：指定数据包的优先级
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; - D(3位)：延迟，0=普通，1=低延迟
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; - T(4位)：吞吐量，0=普通，1=高吞吐量
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; - R(5位)：可靠性，0=普通，1=高可靠性
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; - C(6位)：成本，0=普通，1=最小成本
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; - 未用(7位)：保留位
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="首部结构说明"&gt;首部结构说明
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;固定部分&lt;/strong&gt;（20字节）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;版本号到首部校验和的部分&lt;/li&gt;
&lt;li&gt;每个IP数据报必须包含的内容&lt;/li&gt;
&lt;li&gt;长度固定不变&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;可变部分&lt;/strong&gt;（最多40字节）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选项字段&lt;/li&gt;
&lt;li&gt;填充字段&lt;/li&gt;
&lt;li&gt;长度可变，必须是32位的整数倍&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据部分&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可变长度&lt;/li&gt;
&lt;li&gt;承载上层协议的数据&lt;/li&gt;
&lt;li&gt;受MTU限制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="ip首部结构表"&gt;IP首部结构表
&lt;/h2&gt;&lt;h3 id="基本结构按字节分布"&gt;基本结构（按字节分布）
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字节位置&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0-3&lt;/td&gt;
&lt;td&gt;版本(4位)+首部长度(4位)&lt;/td&gt;
&lt;td&gt;服务类型(8位)&lt;/td&gt;
&lt;td&gt;总长度(16位)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4-7&lt;/td&gt;
&lt;td&gt;标识符(16位)&lt;/td&gt;
&lt;td&gt;标志(3位)+片偏移(13位)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8-11&lt;/td&gt;
&lt;td&gt;生存时间(8位)&lt;/td&gt;
&lt;td&gt;协议(8位)&lt;/td&gt;
&lt;td&gt;首部校验和(16位)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12-15&lt;/td&gt;
&lt;td&gt;源IP地址(32位)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16-19&lt;/td&gt;
&lt;td&gt;目的IP地址(32位)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20+&lt;/td&gt;
&lt;td&gt;选项+填充(如果有，0-40字节)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="按位分布详解"&gt;按位分布详解
&lt;/h3&gt;&lt;p&gt;第0行（0-3字节）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 0 1 2 3
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;|版本| 首部长度 | 服务类型 | 总长度 |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第1行（4-7字节）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 0 1 2 3
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;| 标识符 |标志| 片偏移 |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第2行（8-11字节）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 0 1 2 3
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;| 生存时间 | 协议 | 首部校验和 |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第3-4行（12-19字节）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;| 源IP地址 |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;| 目的IP地址 |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第5行及以后（20+字节，如果有）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;| 选项 + 填充（如果有） |
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="字段说明"&gt;字段说明
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第0-3字节字段&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;版本&lt;/strong&gt;：4位，IPv4为4，IPv6为6&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;首部长度&lt;/strong&gt;：4位，以4字节为单位（最小值5，最大值15）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务类型&lt;/strong&gt;：8位，指定服务质量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;总长度&lt;/strong&gt;：16位，首部+数据的总字节数（最大值65535）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第4-7字节字段&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;标识符&lt;/strong&gt;：16位，用于分片重组&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标志&lt;/strong&gt;：3位（保留位、DF位、MF位）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;片偏移&lt;/strong&gt;：13位，以8字节为单位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第8-11字节字段&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;生存时间&lt;/strong&gt;：8位，经过路由器减1，为0时丢弃&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议&lt;/strong&gt;：8位，上层协议类型&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;首部校验和&lt;/strong&gt;：16位，只检验首部&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第12-19字节字段&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;源IP地址&lt;/strong&gt;：32位&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目的IP地址&lt;/strong&gt;：32位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第20+字节字段（如果有）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;选项&lt;/strong&gt;：可变长度，0-40字节&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;填充&lt;/strong&gt;：确保首部是4字节的整数倍&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="协议字段值对照表"&gt;协议字段值对照表
&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;协议值&lt;/th&gt;
&lt;th&gt;协议名称&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;ICMP&lt;/td&gt;
&lt;td&gt;Internet控制报文协议，用于发送错误消息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;IGMP&lt;/td&gt;
&lt;td&gt;Internet组管理协议，用于多播&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;传输控制协议，面向连接的可靠传输&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;UDP&lt;/td&gt;
&lt;td&gt;用户数据报协议，无连接的不可靠传输&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;GRE&lt;/td&gt;
&lt;td&gt;通用路由封装，用于VPN&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;ESP&lt;/td&gt;
&lt;td&gt;IPSec加密安全载荷，提供加密和认证&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;AH&lt;/td&gt;
&lt;td&gt;IPSec认证头，提供数据完整性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;td&gt;OSPF&lt;/td&gt;
&lt;td&gt;开放最短路径优先，内部网关路由协议&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="服务类型tos字段详解"&gt;服务类型(ToS)字段详解
&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;位置&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0-2&lt;/td&gt;
&lt;td&gt;优先级&lt;/td&gt;
&lt;td&gt;000&lt;/td&gt;
&lt;td&gt;常规&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;001&lt;/td&gt;
&lt;td&gt;优先&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;010&lt;/td&gt;
&lt;td&gt;立即&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;011&lt;/td&gt;
&lt;td&gt;闪电&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;覆盖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;关键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;网间控制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;网络控制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;延迟&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;正常延迟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;低延迟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;吞吐量&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;正常吞吐量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;高吞吐量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;可靠性&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;正常可靠性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;高可靠性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;成本&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;正常成本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;最小成本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;保留&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;保留未用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="标志字段说明表"&gt;标志字段说明表
&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;位&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;保留&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;必须为0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;DF&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;允许分片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;不允许分片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;MF&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;最后的分片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;还有分片&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="总结"&gt;总结
&lt;/h2&gt;&lt;p&gt;IP数据报文的字段设计非常精巧，每个字段都有其特定的用途，共同保证了网络通信的可靠性和效率。理解这些字段的含义对于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络故障排查&lt;/li&gt;
&lt;li&gt;性能优化&lt;/li&gt;
&lt;li&gt;安全防护&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;都有重要意义。&lt;/p&gt;</description></item><item><title>HTTP请求报文字段和响应字段报文</title><link>https://souljian.cn/p/746087716/</link><pubDate>Thu, 01 May 2025 16:21:56 +0800</pubDate><guid>https://souljian.cn/p/746087716/</guid><description>&lt;h2 id="http请求报文结构"&gt;HTTP请求报文结构
&lt;/h2&gt;&lt;p&gt;HTTP请求报文由三部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;请求行（Request Line）&lt;/li&gt;
&lt;li&gt;请求头（Request Header）&lt;/li&gt;
&lt;li&gt;请求体（Request Body）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="1-请求行"&gt;1. 请求行
&lt;/h3&gt;&lt;p&gt;请求行包含三个重要信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求方法（GET、POST、PUT等）&lt;/li&gt;
&lt;li&gt;请求URL&lt;/li&gt;
&lt;li&gt;HTTP协议版本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/index.html&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个请求行表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用GET方法获取资源&lt;/li&gt;
&lt;li&gt;请求的资源路径是/index.html&lt;/li&gt;
&lt;li&gt;使用的是HTTP/1.1版本协议&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="2-常见请求头字段"&gt;2. 常见请求头字段
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Host&lt;/td&gt;
&lt;td&gt;请求的服务器域名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User-Agent&lt;/td&gt;
&lt;td&gt;客户端信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Accept&lt;/td&gt;
&lt;td&gt;客户端可接受的响应内容类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Accept-Language&lt;/td&gt;
&lt;td&gt;客户端可接受的语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Accept-Encoding&lt;/td&gt;
&lt;td&gt;客户端可接受的内容编码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Connection&lt;/td&gt;
&lt;td&gt;连接管理，如keep-alive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cookie&lt;/td&gt;
&lt;td&gt;客户端存储的Cookie信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Type&lt;/td&gt;
&lt;td&gt;请求体的MIME类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Length&lt;/td&gt;
&lt;td&gt;请求体的长度&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="3-请求体"&gt;3. 请求体
&lt;/h3&gt;&lt;p&gt;请求体包含发送给服务器的数据，常见于POST请求。数据格式可以是：&lt;/p&gt;
&lt;h4 id="1-applicationx-www-form-urlencoded"&gt;1) application/x-www-form-urlencoded
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;最常见的POST提交数据方式&lt;/li&gt;
&lt;li&gt;格式：&lt;code&gt;key1=value1&amp;amp;key2=value2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;特点：
&lt;ul&gt;
&lt;li&gt;数据会被URL编码（空格转换为+，特殊字符转换为ASCII HEX值）&lt;/li&gt;
&lt;li&gt;适合简单的文本数据提交&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;username=张三&amp;amp;password=123456&amp;amp;age=25
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个示例表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提交了三个字段：username、password和age&lt;/li&gt;
&lt;li&gt;数据以键值对形式传输&lt;/li&gt;
&lt;li&gt;使用&amp;amp;符号分隔不同的字段&lt;/li&gt;
&lt;li&gt;所有数据都经过URL编码&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="2-applicationjson"&gt;2) application/json
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;现代API中最流行的数据格式&lt;/li&gt;
&lt;li&gt;数据以JSON格式传输&lt;/li&gt;
&lt;li&gt;特点：
&lt;ul&gt;
&lt;li&gt;支持复杂的数据结构（嵌套对象、数组等）&lt;/li&gt;
&lt;li&gt;可读性好&lt;/li&gt;
&lt;li&gt;数据类型丰富&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;span class="lnt"&gt;8
&lt;/span&gt;&lt;span class="lnt"&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-json" data-lang="json"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;age&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;hobbies&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;读书&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;运动&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;address&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;city&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;北京&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;street&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;朝阳区&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个示例展示了JSON格式的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以表示嵌套的数据结构（address是一个对象）&lt;/li&gt;
&lt;li&gt;支持数组类型（hobbies是一个数组）&lt;/li&gt;
&lt;li&gt;支持多种数据类型（字符串、数字）&lt;/li&gt;
&lt;li&gt;层次结构清晰，易于阅读和解析&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="3-multipartform-data"&gt;3) multipart/form-data
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;主要用于文件上传场景&lt;/li&gt;
&lt;li&gt;特点：
&lt;ul&gt;
&lt;li&gt;可以同时上传文件和文本数据&lt;/li&gt;
&lt;li&gt;每个表单项都有独立的边界字符串分隔&lt;/li&gt;
&lt;li&gt;支持二进制文件传输&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;------WebKitFormBoundary7MA4YWxkTrZu0gW
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Disposition: form-data; name=&amp;#34;username&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;张三
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;------WebKitFormBoundary7MA4YWxkTrZu0gW
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Disposition: form-data; name=&amp;#34;photo&amp;#34;; filename=&amp;#34;profile.jpg&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Type: image/jpeg
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;[二进制文件内容]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;------WebKitFormBoundary7MA4YWxkTrZu0gW--
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个示例说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用特定的边界字符串分隔不同的表单项&lt;/li&gt;
&lt;li&gt;可以同时上传文本（username）和文件（photo）&lt;/li&gt;
&lt;li&gt;每个部分都有自己的Content-Disposition说明&lt;/li&gt;
&lt;li&gt;文件上传部分包含文件名和文件类型信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="http响应报文结构"&gt;HTTP响应报文结构
&lt;/h2&gt;&lt;p&gt;HTTP响应报文也由三部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;状态行（Status Line）&lt;/li&gt;
&lt;li&gt;响应头（Response Header）&lt;/li&gt;
&lt;li&gt;响应体（Response Body）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="1-状态行"&gt;1. 状态行
&lt;/h3&gt;&lt;p&gt;状态行包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP协议版本&lt;/li&gt;
&lt;li&gt;状态码&lt;/li&gt;
&lt;li&gt;状态描述&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个状态行表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用HTTP/1.1版本协议&lt;/li&gt;
&lt;li&gt;状态码是200，表示请求成功&lt;/li&gt;
&lt;li&gt;OK是对状态码的文字描述&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="2-常见状态码"&gt;2. 常见状态码
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;状态码&lt;/th&gt;
&lt;th&gt;类别&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1xx&lt;/td&gt;
&lt;td&gt;信息性状态码&lt;/td&gt;
&lt;td&gt;请求已接收，继续处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2xx&lt;/td&gt;
&lt;td&gt;成功状态码&lt;/td&gt;
&lt;td&gt;请求已成功接收、理解、接受&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3xx&lt;/td&gt;
&lt;td&gt;重定向状态码&lt;/td&gt;
&lt;td&gt;需要进一步操作以完成请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4xx&lt;/td&gt;
&lt;td&gt;客户端错误状态码&lt;/td&gt;
&lt;td&gt;请求包含语法错误或无法完成请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5xx&lt;/td&gt;
&lt;td&gt;服务器错误状态码&lt;/td&gt;
&lt;td&gt;服务器在处理请求时发生错误&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;常见状态码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;200 OK：请求成功&lt;/li&gt;
&lt;li&gt;301 Moved Permanently：永久重定向&lt;/li&gt;
&lt;li&gt;302 Found：临时重定向&lt;/li&gt;
&lt;li&gt;400 Bad Request：客户端请求语法错误&lt;/li&gt;
&lt;li&gt;401 Unauthorized：请求需要用户认证&lt;/li&gt;
&lt;li&gt;403 Forbidden：服务器拒绝请求&lt;/li&gt;
&lt;li&gt;404 Not Found：请求的资源不存在&lt;/li&gt;
&lt;li&gt;500 Internal Server Error：服务器内部错误&lt;/li&gt;
&lt;li&gt;503 Service Unavailable：服务器暂时无法处理请求&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="3-常见响应头字段"&gt;3. 常见响应头字段
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Server&lt;/td&gt;
&lt;td&gt;服务器软件信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Type&lt;/td&gt;
&lt;td&gt;响应体的MIME类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Length&lt;/td&gt;
&lt;td&gt;响应体的长度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Encoding&lt;/td&gt;
&lt;td&gt;响应体的编码方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cache-Control&lt;/td&gt;
&lt;td&gt;缓存控制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Set-Cookie&lt;/td&gt;
&lt;td&gt;设置Cookie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Location&lt;/td&gt;
&lt;td&gt;重定向的目标URL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Access-Control-Allow-Origin&lt;/td&gt;
&lt;td&gt;CORS跨域允许的来源&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="完整示例"&gt;完整示例
&lt;/h2&gt;&lt;h3 id="get请求示例"&gt;GET请求示例
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/api/users&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;api.example.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Mozilla/5.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Accept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个GET请求示例说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用GET方法请求/api/users接口&lt;/li&gt;
&lt;li&gt;请求发送到api.example.com服务器&lt;/li&gt;
&lt;li&gt;使用Mozilla/5.0浏览器发送请求&lt;/li&gt;
&lt;li&gt;期望接收JSON格式的响应&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="post请求示例"&gt;POST请求示例
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;span class="lnt"&gt;8
&lt;/span&gt;&lt;span class="lnt"&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/api/users&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;api.example.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;57&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;john_doe&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;email&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;john@example.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个POST请求示例说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用POST方法向/api/users接口提交数据&lt;/li&gt;
&lt;li&gt;发送JSON格式的数据&lt;/li&gt;
&lt;li&gt;请求体包含用户名和邮箱信息&lt;/li&gt;
&lt;li&gt;Content-Length指明了请求体的长度&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="响应示例"&gt;响应示例
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="ne"&gt;OK&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Content-Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;application/json&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Content-Length&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;234&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;success&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;john_doe&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;email&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;john@example.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个响应示例说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求处理成功（状态码200）&lt;/li&gt;
&lt;li&gt;返回JSON格式的数据&lt;/li&gt;
&lt;li&gt;响应体包含状态信息和用户数据&lt;/li&gt;
&lt;li&gt;服务器成功创建了用户并返回了用户ID&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="multipartform-data示例文件上传"&gt;multipart/form-data示例（文件上传）
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;------WebKitFormBoundary7MA4YWxkTrZu0gW # 分隔边界线，用于分隔不同的表单项
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Disposition: form-data; name=&amp;#34;username&amp;#34; # 第一个表单项：普通文本字段
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;张三 # 字段值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;------WebKitFormBoundary7MA4YWxkTrZu0gW # 分隔边界线
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Disposition: form-data; name=&amp;#34;photo&amp;#34;; filename=&amp;#34;profile.jpg&amp;#34; # 第二个表单项：文件上传
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Type: image/jpeg # 上传文件的MIME类型
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;[二进制文件内容] # 实际的文件内容
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;------WebKitFormBoundary7MA4YWxkTrZu0gW-- # 结束边界线（注意末尾有--）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="applicationx-www-form-urlencoded示例"&gt;application/x-www-form-urlencoded示例
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;POST /login HTTP/1.1 # 请求行：POST方法，用于登录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Host: example.com # 请求的目标主机名
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Type: application/x-www-form-urlencoded # 内容类型为表单数据
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Length: 38 # 请求体长度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;username=张三&amp;amp;password=123456&amp;amp;remember=true # 请求体：键值对格式，使用&amp;amp;分隔
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="带cookie的请求示例"&gt;带Cookie的请求示例
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;GET /api/profile HTTP/1.1 # 请求行：GET方法，获取用户资料
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Host: api.example.com # 请求的目标主机名
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Cookie: sessionId=abc123; userId=789 # Cookie信息，包含会话ID和用户ID
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Accept: application/json # 期望接收JSON格式的响应
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="重定向响应示例"&gt;重定向响应示例
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt; &lt;span class="m"&gt;302&lt;/span&gt; &lt;span class="ne"&gt;Found # 状态行：302表示临时重定向&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;https://new.example.com/page # 重定向的目标URL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Cache-Control&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;no-cache # 缓存控制：不使用缓存&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Set-Cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;session=def456; Path=/ # 设置新的Cookie&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>ARP协议</title><link>https://souljian.cn/p/745333266/</link><pubDate>Tue, 22 Apr 2025 22:47:46 +0800</pubDate><guid>https://souljian.cn/p/745333266/</guid><description>&lt;h2 id="一arp协议简介"&gt;一、ARP协议简介
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARP（Address Resolution Protocol，地址解析协议）是一种网络协议，用于将网络层的IP地址解析为链路层的MAC地址。&lt;/li&gt;
&lt;li&gt;它是网络通信的基础协议之一，确保数据能够在同一网络内部正确传输。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;工作原理&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ARP请求&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当主机A需要向主机B发送数据时，它会先检查自己的ARP缓存，看是否已经存储了主机B的IP地址与MAC地址的映射关系。&lt;/li&gt;
&lt;li&gt;如果没有找到，主机A会在本地网络中广播一个ARP请求报文，询问&amp;quot;谁拥有IP地址X？请告诉我你的MAC地址。&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ARP响应&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主机B收到ARP请求后，会发送一个ARP响应报文，告诉主机A自己的MAC地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;更新ARP缓存&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主机A收到响应后，将主机B的IP地址和MAC地址的映射关系存储在自己的ARP缓存中，以便后续通信。&lt;/li&gt;
&lt;li&gt;ARP缓存中的条目有一定的生存时间（TTL），过期后会被删除，以避免缓存中的信息过时。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="二arp协议的作用"&gt;二、ARP协议的作用
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IP地址与MAC地址的转换&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP地址是网络层的逻辑地址，用于在不同网络之间进行路由。&lt;/li&gt;
&lt;li&gt;MAC地址是链路层的物理地址，用于在同一网络内部进行数据传输。&lt;/li&gt;
&lt;li&gt;ARP协议通过将IP地址解析为MAC地址，确保数据能够在同一网络内部正确传输。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;支持网络通信&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARP协议是网络通信的基础协议之一，它与IP协议、TCP协议等协同工作，确保数据能够在网络中正确传输。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="三arp协议的限制"&gt;三、ARP协议的限制
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;仅限于同一网络&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARP协议仅适用于同一局域网内部的通信，无法跨网络工作。&lt;/li&gt;
&lt;li&gt;跨网络的通信需要通过路由器进行IP地址的路由。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全性问题&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARP协议本身没有加密或认证机制，容易受到ARP攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="四例子解释说明"&gt;四、例子解释说明
&lt;/h2&gt;&lt;p&gt;假设在一个局域网中有两台主机：主机A（IP地址为192.168.1.100，MAC地址为00:11:22:33:44:55）和主机B（IP地址为192.168.1.101，MAC地址为AA:BB:CC:DD:EE:FF）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主机A需要向主机B发送数据&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主机A检查自己的ARP缓存，发现没有主机B的IP地址与MAC地址的映射关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主机A发送ARP请求&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主机A在局域网中广播一个ARP请求报文：&amp;ldquo;谁拥有IP地址192.168.1.101？请告诉我你的MAC地址。&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主机B响应ARP请求&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主机B收到ARP请求后，发送一个ARP响应报文：&amp;ldquo;我是192.168.1.101，我的MAC地址是AA:BB:CC:DD:EE:FF。&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主机A更新ARP缓存&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主机A收到ARP响应后，将主机B的IP地址和MAC地址的映射关系存储在自己的ARP缓存中。&lt;/li&gt;
&lt;li&gt;之后，主机A就可以直接使用主机B的MAC地址发送数据了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>DHCP协议及IP自动获取</title><link>https://souljian.cn/p/745333232/</link><pubDate>Tue, 22 Apr 2025 22:47:12 +0800</pubDate><guid>https://souljian.cn/p/745333232/</guid><description>&lt;h1 id=""&gt;
&lt;/h1&gt;&lt;h2 id="一dhcp协议简介"&gt;一、DHCP协议简介
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;采用UDP协议，67/68端口&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DHCP（Dynamic Host Configuration Protocol，动态主机配置协议）是一种网络协议，用于自动分配IP地址和其他网络配置参数（如子网掩码、默认网关、DNS服务器地址等）。它简化了网络设备的配置过程，尤其是对于频繁接入和离开网络的设备（如笔记本电脑、手机等）。&lt;/p&gt;
&lt;h2 id="二dhcp工作原理"&gt;二、DHCP工作原理
&lt;/h2&gt;&lt;p&gt;DHCP协议的工作过程主要分为以下几个阶段：&lt;/p&gt;
&lt;h3 id="1-发现阶段discovery"&gt;1. 发现阶段（Discovery）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;当设备（如电脑）接入网络时，它会广播一个 &lt;strong&gt;DHCP Discover 数据包&lt;/strong&gt;，询问网络中是否有可用的DHCP服务器。&lt;/li&gt;
&lt;li&gt;由于设备还不知道自己属于哪个网络，因此它会使用广播地址（如 &lt;code&gt;255.255.255.255&lt;/code&gt;）发送数据包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="2-提供阶段offer"&gt;2. 提供阶段（Offer）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;网络中的DHCP服务器收到 &lt;strong&gt;DHCP Discover 数据包&lt;/strong&gt; 后，会从其可用的IP地址池中选择一个未分配的IP地址，并向客户端发送一个 &lt;strong&gt;DHCP Offer 数据包&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DHCP Offer 数据包&lt;/strong&gt; 中包含分配给客户端的IP地址、子网掩码、租期（IP地址的有效时间，有线默认8天，无线默认8小时）以及其他网络配置参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="3-请求阶段request"&gt;3. 请求阶段（Request）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;客户端收到 &lt;strong&gt;DHCP Offer 数据包&lt;/strong&gt; 后，会发送一个 &lt;strong&gt;DHCP Request 数据包&lt;/strong&gt;，正式请求接受这个IP地址。&lt;/li&gt;
&lt;li&gt;如果客户端收到多个DHCP服务器的Offer（在多台DHCP服务器的环境中），它会选择一个Offer，并向所有DHCP服务器发送 &lt;strong&gt;DHCP Request 数据包&lt;/strong&gt;，通知其他服务器它已经选择了某个IP地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="4-确认阶段acknowledge"&gt;4. 确认阶段（Acknowledge）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;DHCP服务器收到 &lt;strong&gt;DHCP Request 数据包&lt;/strong&gt; 后，会检查所分配的IP地址是否仍然可用。&lt;/li&gt;
&lt;li&gt;如果IP地址可用，服务器会发送一个 &lt;strong&gt;DHCP Ack 数据包&lt;/strong&gt;，正式确认分配的IP地址，并通知客户端可以使用该IP地址。&lt;/li&gt;
&lt;li&gt;如果IP地址已经被占用或其他问题导致无法分配，服务器会发送一个 &lt;strong&gt;DHCP Nak 数据包&lt;/strong&gt;，拒绝分配，并提示客户端重新请求（从第一阶段重来）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="三dhcp的优势"&gt;三、DHCP的优势
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自动化配置&lt;/strong&gt;：设备接入网络后自动获取IP地址，无需手动配置，大大简化了网络管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免冲突&lt;/strong&gt;：DHCP服务器会检查IP地址是否已被占用，从而避免IP地址冲突。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集中管理&lt;/strong&gt;：网络管理员可以通过DHCP服务器集中管理IP地址分配，方便调整网络配置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活性&lt;/strong&gt;：可以根据需要动态调整IP地址池和租期，适应不同的网络需求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="四dhcp的局限性"&gt;四、DHCP的局限性
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;依赖服务器&lt;/strong&gt;：如果DHCP服务器故障，新设备将无法获取IP地址。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性问题&lt;/strong&gt;：未经授权的设备可能会接入网络并获取IP地址，存在安全隐患。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置复杂性&lt;/strong&gt;：在大型网络中，配置和管理DHCP服务器可能较为复杂。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="五dhcp的生动例子"&gt;五、DHCP的生动例子
&lt;/h2&gt;&lt;p&gt;假设你去参加一个大型聚会，但你不知道自己的座位在哪里。于是你开始了一段寻找座位的旅程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;发现阶段（Discovery）&lt;/strong&gt;
你进入聚会场地后，大声喊：&amp;ldquo;有人能告诉我我的座位在哪里吗？&amp;quot;（广播 &lt;strong&gt;DHCP Discover 数据包&lt;/strong&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提供阶段（Offer）&lt;/strong&gt;
聚会的主持人（DHCP服务器）听到你的喊声后，查看座位安排表（IP地址池），找到一个空座位，并对你说：&amp;ldquo;你可以坐那边的座位。&amp;quot;（发送 &lt;strong&gt;DHCP Offer 数据包&lt;/strong&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;请求阶段（Request）&lt;/strong&gt;
你听到主持人的话后，回应说：&amp;ldquo;好的，我接受这个座位。&amp;quot;（发送 &lt;strong&gt;DHCP Request 数据包&lt;/strong&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;确认阶段（Acknowledge）&lt;/strong&gt;
主持人确认你接受了座位后，正式对你说：&amp;ldquo;欢迎你坐下，这个座位是你的了。&amp;quot;（发送 &lt;strong&gt;DHCP Ack 数据包&lt;/strong&gt;）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这个过程，你成功找到了自己的座位。DHCP协议的工作原理也是如此，帮助设备在复杂的网络环境中自动找到属于自己的IP地址。&lt;/p&gt;</description></item><item><title>DNS协议与域名解析</title><link>https://souljian.cn/p/745333135/</link><pubDate>Tue, 22 Apr 2025 22:45:35 +0800</pubDate><guid>https://souljian.cn/p/745333135/</guid><description>&lt;h1 id=""&gt;
&lt;/h1&gt;&lt;h2 id="一dns协议简介"&gt;一、DNS协议简介
&lt;/h2&gt;&lt;p&gt;DNS（Domain Name System）即域名系统，是互联网中用于将域名转换为IP地址的协议。它解决了用户记忆IP地址的困难，使得用户可以通过易于记忆的域名来访问网络资源。&lt;/p&gt;
&lt;h2 id="二域名解析过程"&gt;二、域名解析过程
&lt;/h2&gt;&lt;h3 id="1-本地缓存查询"&gt;1. 本地缓存查询
&lt;/h3&gt;&lt;p&gt;当用户输入一个域名时，计算机首先会在本地缓存中查找是否有该域名对应的IP地址。如果找到，直接返回IP地址，无需进一步查询。&lt;/p&gt;
&lt;h3 id="2-本地dns服务器查询"&gt;2. 本地DNS服务器查询
&lt;/h3&gt;&lt;p&gt;如果本地缓存中没有找到，计算机将向本地DNS服务器（通常是ISP（互联网服务提供商）提供的DNS服务器）发送查询请求。本地DNS服务器会检查自己的缓存，如果找到对应的IP地址，返回给用户；如果没有，进入下一步。&lt;/p&gt;
&lt;h3 id="3-递归查询与迭代查询"&gt;3. 递归查询与迭代查询
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;递归查询&lt;/strong&gt;：本地DNS服务器向其他DNS服务器查询，直到找到目标IP地址并返回给用户。用户只需等待最终结果，无需关心查询过程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迭代查询&lt;/strong&gt;：本地DNS服务器向其他DNS服务器发送查询请求后，返回一个指向其他DNS服务器的地址，由用户自己继续查询，直到找到目标IP地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="4-根域名服务器查询"&gt;4. 根域名服务器查询
&lt;/h3&gt;&lt;p&gt;如果本地DNS服务器无法找到目标IP地址，会向根域名服务器（如&lt;code&gt;.com&lt;/code&gt;、&lt;code&gt;.org&lt;/code&gt;等顶级域名服务器）查询。根域名服务器会返回一个指向权威DNS服务器的地址。&lt;/p&gt;
&lt;h3 id="5-权威dns服务器查询"&gt;5. 权威DNS服务器查询
&lt;/h3&gt;&lt;p&gt;最终，查询请求会到达权威DNS服务器，它会返回域名对应的IP地址。&lt;/p&gt;
&lt;h3 id="6-缓存更新"&gt;6. 缓存更新
&lt;/h3&gt;&lt;p&gt;查询结果会被本地DNS服务器和用户的计算机缓存起来，以便下次快速查询。&lt;/p&gt;
&lt;h2 id="三dns协议的重要性"&gt;三、DNS协议的重要性
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;方便用户访问&lt;/strong&gt;：用户无需记忆复杂的IP地址，只需输入域名即可访问网站。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;负载均衡&lt;/strong&gt;：通过DNS可以将流量分配到多个服务器，提高网站的可用性和性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;故障转移&lt;/strong&gt;：当某个服务器出现故障时，DNS可以将流量重定向到备用服务器，确保服务的连续性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="四dns攻击"&gt;四、DNS攻击
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DNS劫持&lt;/strong&gt;：攻击者篡改DNS解析结果，将用户引导到恶意网站。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNS缓存污染&lt;/strong&gt;：攻击者向DNS缓存中注入错误的IP地址，导致用户访问错误的网站。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DDoS攻击&lt;/strong&gt;：攻击者通过大量虚假DNS查询请求，使DNS服务器瘫痪。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="五dns解析的生动例子"&gt;五、DNS解析的生动例子
&lt;/h2&gt;&lt;p&gt;假设你正在寻找一家名为&amp;quot;快乐汉堡&amp;quot;的餐厅。你只知道餐厅的名字，但不知道它的具体地址。于是你开始了一段寻找之旅：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;本地缓存查询&lt;/strong&gt;
你先问自己的朋友（&lt;strong&gt;本地缓存&lt;/strong&gt;）：&amp;ldquo;你知道快乐汉堡在哪里吗？&amp;ldquo;如果朋友知道，直接告诉你地址，你就直接去了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;本地DNS服务器查询&lt;/strong&gt;
如果朋友不知道，你会去问本地的导航站（&lt;strong&gt;本地DNS服务器&lt;/strong&gt;）：&amp;ldquo;你知道快乐汉堡在哪里吗？&amp;ldquo;导航站会查自己的地图（缓存），如果找到了，告诉你地址；如果没有，进入下一步。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;递归查询与迭代查询&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;递归查询&lt;/strong&gt;：导航站会帮你去问其他导航站，直到找到地址，然后告诉你。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迭代查询&lt;/strong&gt;：导航站会告诉你去下一个导航站，你自己继续问，直到找到地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;根域名服务器查询&lt;/strong&gt;
如果本地导航站也不知道，它会带你去城市的中心导航站（&lt;strong&gt;根域名服务器&lt;/strong&gt;），那里会告诉你去哪个区域的导航站（&lt;strong&gt;权威DNS服务器&lt;/strong&gt;）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;权威DNS服务器查询&lt;/strong&gt;
最后，你到了区域导航站（&lt;strong&gt;权威DNS服务器&lt;/strong&gt;），它会告诉你&amp;quot;快乐汉堡&amp;quot;的具体地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;缓存更新&lt;/strong&gt;
导航站会把&amp;quot;快乐汉堡&amp;quot;的地址记录下来，下次别人问的时候，可以直接告诉他们。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>TCP三次握手和四次挥手</title><link>https://souljian.cn/p/745243663/</link><pubDate>Mon, 21 Apr 2025 21:54:23 +0800</pubDate><guid>https://souljian.cn/p/745243663/</guid><description>&lt;h2 id="目录"&gt;目录
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a class="link" href="#tcp%e5%8d%8f%e8%ae%ae%e7%ae%80%e4%bb%8b" &gt;TCP协议简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="#%e4%b8%89%e6%ac%a1%e6%8f%a1%e6%89%8b%e8%bf%87%e7%a8%8b" &gt;三次握手过程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="#%e5%9b%9b%e6%ac%a1%e6%8c%a5%e6%89%8b%e8%bf%87%e7%a8%8b" &gt;四次挥手过程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="#%e6%8a%80%e6%9c%af%e7%bb%86%e8%8a%82%e8%a7%a3%e6%9e%90" &gt;技术细节解析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="#%e5%ae%9e%e9%99%85%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af" &gt;实际应用场景&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="#%e5%ae%89%e5%85%a8%e6%80%a7%e8%80%83%e8%99%91" &gt;安全性考虑&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="tcp协议简介"&gt;TCP协议简介
&lt;/h2&gt;&lt;p&gt;TCP（传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议。它具有以下特点：&lt;/p&gt;
&lt;p&gt;• &lt;strong&gt;面向连接&lt;/strong&gt;：通信前需要建立连接（三次握手），通信结束后需要断开连接（四次挥手）
• &lt;strong&gt;可靠传输&lt;/strong&gt;：使用确认机制和重传机制确保数据不丢失
• &lt;strong&gt;流量控制&lt;/strong&gt;：通过滑动窗口机制控制发送速率
• &lt;strong&gt;拥塞控制&lt;/strong&gt;：避免网络拥塞，动态调整传输速率&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-三次握手过程例子快递员确认收货地址"&gt;📦 &lt;strong&gt;三次握手过程——例子：快递员确认收货地址&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;假设你的浏览器（Chrome）是寄件人，服务器（Apache）是收件人，TCP协议（运输层）是快递公司，三次握手就像快递员上门确认地址的过程：&lt;/p&gt;
&lt;h4 id="1-第一次握手浏览器服务器"&gt;&lt;strong&gt;1. 第一次握手（浏览器→服务器）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 浏览器发送一个&lt;code&gt;SYN=1&lt;/code&gt;的包裹（SYN是同步序列号请求），并生成随机序号&lt;code&gt;seq=1000&lt;/code&gt;
• 快递员（TCP）说：&amp;ldquo;您好，我是快递员，Chrome想给Apache寄包裹，您能收吗？&amp;rdquo;
• &lt;strong&gt;状态变化&lt;/strong&gt;：
• 客户端状态：CLOSED → SYN_SENT
• 服务端状态：LISTEN&lt;/p&gt;
&lt;h4 id="2-第二次握手服务器浏览器"&gt;&lt;strong&gt;2. 第二次握手（服务器→浏览器）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 服务器收到&lt;code&gt;SYN&lt;/code&gt;后，回复&lt;code&gt;SYN=1 + ACK=1&lt;/code&gt;，序号&lt;code&gt;seq=2000&lt;/code&gt;，确认号&lt;code&gt;ack=1001&lt;/code&gt;
• 快递员反馈：&amp;ldquo;Apache确认能收件，请把包裹按编号1001开始发给我！&amp;rdquo;
• &lt;strong&gt;状态变化&lt;/strong&gt;：
• 服务端状态：LISTEN → SYN_RECEIVED
• &lt;strong&gt;技术点&lt;/strong&gt;：
• &lt;code&gt;ACK=1&lt;/code&gt;表示确认收到第一次握手
• &lt;code&gt;ack=1001&lt;/code&gt;表示&amp;quot;我期待收到下一个编号是1001的数据&amp;quot;
• 确认号计算规则：收到的序号+1&lt;/p&gt;
&lt;h4 id="3-第三次握手浏览器服务器"&gt;&lt;strong&gt;3. 第三次握手（浏览器→服务器）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 浏览器发送&lt;code&gt;ACK=1&lt;/code&gt;，序号&lt;code&gt;seq=1001&lt;/code&gt;，确认号&lt;code&gt;ack=2001&lt;/code&gt;
• 快递员说：&amp;ldquo;好的，我会按您的要求开始寄送！&amp;rdquo;
• &lt;strong&gt;状态变化&lt;/strong&gt;：
• 客户端状态：SYN_SENT → ESTABLISHED
• 服务端状态：SYN_RECEIVED → ESTABLISHED&lt;/p&gt;
&lt;h4 id="-为什么必须三次"&gt;💡 &lt;strong&gt;为什么必须三次？&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;防止历史连接干扰&lt;/strong&gt;：如果第一次握手的包裹卡在路由器（N1/N2）后又重复发送，服务器能通过第三次握手判断是否为过期请求
• &lt;strong&gt;确保双方同步&lt;/strong&gt;：通过三次握手，双方都能确认对方的发送和接收能力
• &lt;strong&gt;避免资源浪费&lt;/strong&gt;：防止已失效的连接请求报文突然又传送到服务端，造成错误&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-四次挥手过程例子快递员确认包裹已全部送达"&gt;✋ &lt;strong&gt;四次挥手过程——例子：快递员确认包裹已全部送达&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;当数据传输完毕，TCP需要安全断开连接，就像快递员要确认双方都没有包裹需要寄送了：&lt;/p&gt;
&lt;h4 id="1-第一次挥手浏览器服务器"&gt;&lt;strong&gt;1. 第一次挥手（浏览器→服务器）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 浏览器发送&lt;code&gt;FIN=1&lt;/code&gt;（FIN是结束标志），序号&lt;code&gt;seq=5000&lt;/code&gt;
• 快递员说：&amp;ldquo;Chrome的包裹都寄完了，准备收工啦！&amp;rdquo;
• &lt;strong&gt;状态变化&lt;/strong&gt;：
• 客户端状态：ESTABLISHED → FIN_WAIT_1&lt;/p&gt;
&lt;h4 id="2-第二次挥手服务器浏览器"&gt;&lt;strong&gt;2. 第二次挥手（服务器→浏览器）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 服务器回复&lt;code&gt;ACK=1&lt;/code&gt;，确认号&lt;code&gt;ack=5001&lt;/code&gt;
• 快递员反馈：&amp;ldquo;好的，我收到你的收工通知了，但等我确认Apache还有没有包裹要寄给你&amp;rdquo;
• &lt;strong&gt;状态变化&lt;/strong&gt;：
• 服务端状态：ESTABLISHED → CLOSE_WAIT
• 客户端状态：FIN_WAIT_1 → FIN_WAIT_2&lt;/p&gt;
&lt;h4 id="3-第三次挥手服务器浏览器"&gt;&lt;strong&gt;3. 第三次挥手（服务器→浏览器）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 服务器发送&lt;code&gt;FIN=1&lt;/code&gt;，序号&lt;code&gt;seq=8000&lt;/code&gt;
• 快递员说：&amp;ldquo;Apache这边也没有包裹要寄了，可以收工！&amp;rdquo;
• &lt;strong&gt;状态变化&lt;/strong&gt;：
• 服务端状态：CLOSE_WAIT → LAST_ACK&lt;/p&gt;
&lt;h4 id="4-第四次挥手浏览器服务器"&gt;&lt;strong&gt;4. 第四次挥手（浏览器→服务器）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 浏览器回复&lt;code&gt;ACK=1&lt;/code&gt;，确认号&lt;code&gt;ack=8001&lt;/code&gt;
• 快递员确认：&amp;ldquo;双方都确认完毕，连接正式关闭！&amp;rdquo;
• &lt;strong&gt;状态变化&lt;/strong&gt;：
• 客户端状态：FIN_WAIT_2 → TIME_WAIT → CLOSED
• 服务端状态：LAST_ACK → CLOSED&lt;/p&gt;
&lt;h4 id="-为什么挥手要四次"&gt;💡 &lt;strong&gt;为什么挥手要四次？&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;双向关闭原则&lt;/strong&gt;：TCP是全双工通信，每个方向都需要单独关闭
• 第一次挥手：客户端关闭发送通道
• 第二次挥手：服务端确认客户端的关闭请求
• 第三次挥手：服务端关闭发送通道
• 第四次挥手：客户端确认服务端的关闭请求
• &lt;strong&gt;数据完整性保证&lt;/strong&gt;：确保双方的数据都能完整传输，不会因为一方提前关闭而丢失数据&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-技术细节解析"&gt;🔧 &lt;strong&gt;技术细节解析&lt;/strong&gt;
&lt;/h3&gt;&lt;h4 id="tcp标志位说明"&gt;&lt;strong&gt;TCP标志位说明&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;SYN（同步序列号）&lt;/strong&gt;：用于建立连接时同步序列号
• &lt;strong&gt;ACK（确认标志）&lt;/strong&gt;：表示确认号字段有效
• &lt;strong&gt;FIN（结束标志）&lt;/strong&gt;：用于释放连接
• &lt;strong&gt;RST（重置连接）&lt;/strong&gt;：用于异常终止连接
• &lt;strong&gt;PSH（推送标志）&lt;/strong&gt;：接收方应尽快将这个报文段交给应用层
• &lt;strong&gt;URG（紧急标志）&lt;/strong&gt;：表示紧急指针字段有效&lt;/p&gt;
&lt;h4 id="序列号与确认号"&gt;&lt;strong&gt;序列号与确认号&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;序列号（seq）&lt;/strong&gt;：
• 用于标识从TCP源端向目的端发送的字节流
• 初始序列号（ISN）是随机生成的
• &lt;strong&gt;确认号（ack）&lt;/strong&gt;：
• 期望收到对方下一个报文段的第一个数据字节的序号
• 计算方式：收到的序列号 + 1&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-实际应用场景"&gt;🌐 &lt;strong&gt;实际应用场景&lt;/strong&gt;
&lt;/h3&gt;&lt;h4 id="1-网页浏览"&gt;&lt;strong&gt;1. 网页浏览&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;场景描述&lt;/strong&gt;：
• 打开网页时自动完成三次握手
• 数据传输过程中保持连接
• 关闭标签页时触发四次挥手
• &lt;strong&gt;注意事项&lt;/strong&gt;：
• 现代浏览器通常使用HTTP长连接（Keep-Alive）
• 一个TCP连接可以复用于多个HTTP请求&lt;/p&gt;
&lt;h4 id="2-文件下载"&gt;&lt;strong&gt;2. 文件下载&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;特点&lt;/strong&gt;：
• 建立连接后持续传输大量数据
• 支持断点续传（基于序列号机制）
• &lt;strong&gt;优化建议&lt;/strong&gt;：
• 适当增大TCP窗口大小
• 启用TCP快速重传机制&lt;/p&gt;
&lt;h4 id="3-实时通信"&gt;&lt;strong&gt;3. 实时通信&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;应用场景&lt;/strong&gt;：
• 即时通讯
• 在线游戏
• 视频会议
• &lt;strong&gt;性能考虑&lt;/strong&gt;：
• 需要低延迟
• 可能需要配置TCP_NODELAY选项&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-安全性考虑"&gt;🛡️ &lt;strong&gt;安全性考虑&lt;/strong&gt;
&lt;/h3&gt;&lt;h4 id="1-syn洪泛攻击"&gt;&lt;strong&gt;1. SYN洪泛攻击&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;攻击原理&lt;/strong&gt;：
• 攻击者发送大量SYN请求但不完成三次握手
• 服务器为每个请求分配资源，最终耗尽资源
• &lt;strong&gt;防护措施&lt;/strong&gt;：
• 启用SYN Cookie
• 增大半连接队列
• 设置合理的超时时间&lt;/p&gt;
&lt;h4 id="2-tcp重置攻击"&gt;&lt;strong&gt;2. TCP重置攻击&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;攻击原理&lt;/strong&gt;：
• 攻击者伪造RST包中断正常连接
• &lt;strong&gt;防护措施&lt;/strong&gt;：
• 启用TCP MD5认证
• 使用IPSec保护TCP连接&lt;/p&gt;
&lt;h4 id="3-连接耗尽攻击"&gt;&lt;strong&gt;3. 连接耗尽攻击&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;攻击原理&lt;/strong&gt;：
• 建立大量TCP连接但不释放
• &lt;strong&gt;防护措施&lt;/strong&gt;：
• 限制单IP的最大连接数
• 启用连接超时机制&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-常见问题与解决方案"&gt;🔍 &lt;strong&gt;常见问题与解决方案&lt;/strong&gt;
&lt;/h3&gt;&lt;h4 id="1-连接建立失败"&gt;&lt;strong&gt;1. 连接建立失败&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;可能原因&lt;/strong&gt;：
• 网络不通
• 服务端端口未开放
• 防火墙拦截
• &lt;strong&gt;解决方案&lt;/strong&gt;：
• 检查网络连通性
• 确认服务状态
• 检查防火墙规则&lt;/p&gt;
&lt;h4 id="2-连接无法释放"&gt;&lt;strong&gt;2. 连接无法释放&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;可能原因&lt;/strong&gt;：
• TIME_WAIT状态积累
• 程序未正确关闭连接
• &lt;strong&gt;解决方案&lt;/strong&gt;：
• 调整TCP参数（tcp_tw_reuse）
• 优化程序代码，确保正确关闭连接&lt;/p&gt;
&lt;h4 id="3-性能问题"&gt;&lt;strong&gt;3. 性能问题&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;表现&lt;/strong&gt;：
• 连接建立慢
• 数据传输延迟大
• &lt;strong&gt;优化方案&lt;/strong&gt;：
• 使用TCP Fast Open
• 调整TCP缓冲区大小
• 优化网络路由&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-延伸阅读"&gt;📚 &lt;strong&gt;延伸阅读&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;TCP状态转换&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TCP流量控制&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TCP拥塞控制&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TCP keepalive机制&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TCP安全加固最佳实践&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;</description></item><item><title>数据包解包过程</title><link>https://souljian.cn/p/745243566/</link><pubDate>Mon, 21 Apr 2025 21:52:46 +0800</pubDate><guid>https://souljian.cn/p/745243566/</guid><description>&lt;p&gt;好的！我们结合原图用 &lt;strong&gt;「拆快递」&lt;/strong&gt; 的比喻来解释&lt;strong&gt;解包过程&lt;/strong&gt;，帮你把封包/解包的全流程对应到图中的每一层结构：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-解包过程详解对照原图的五层结构"&gt;📦 &lt;strong&gt;解包过程详解（对照原图的五层结构）&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;假设服务器收到你从Chrome发来的数据包（封包过程见前文），现在需要&lt;strong&gt;从物理层到应用层逐层解包&lt;/strong&gt;：&lt;/p&gt;
&lt;h4 id="1-物理层--数据链路层撕外层包装"&gt;&lt;strong&gt;1. 物理层 → 数据链路层（撕外层包装）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 服务器网卡收到光信号/电信号
• 将信号转换为二进制数据流（&lt;code&gt;011010...&lt;/code&gt;）
• &lt;strong&gt;对应&lt;/strong&gt;：
•物理层接收信号，传递给右侧数据链路层&lt;/p&gt;
&lt;h4 id="2-数据链路层拆卡车运输箱"&gt;&lt;strong&gt;2. 数据链路层（拆卡车运输箱）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 检查数据帧的&lt;strong&gt;MAC地址&lt;/strong&gt;（类似核对卡车车牌号）
• 剥离MAC头部，发现目的地是当前服务器
• 如果MAC地址匹配，把数据包交给 网络层 ；不匹配则丢弃
• &lt;strong&gt;对应&lt;/strong&gt;：
• 据链路层剥离封装 → 网络层 开始工作&lt;/p&gt;
&lt;h4 id="3-网络层拆地址分拣标签"&gt;&lt;strong&gt;3. 网络层（拆地址分拣标签）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 检查IP头部，确认目的IP是&lt;code&gt;10.20.1.100&lt;/code&gt;（服务器自身IP）
• 剥离IP头部，查看传输层协议类型（如TCP/UDP）
• 如果IP不匹配且服务器是路由器，会重新转发（类似快递中转站）
• &lt;strong&gt;对应&lt;/strong&gt;：
•网络层剥离IP封装 → 运输层处理&lt;/p&gt;
&lt;h4 id="4-运输层拆快递小包裹"&gt;&lt;strong&gt;4. 运输层（拆快递小包裹）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• TCP协议检查&lt;strong&gt;端口号&lt;/strong&gt;（比如目的端口&lt;code&gt;80&lt;/code&gt;对应Apache服务）
• 检查数据包顺序号和校验和，若丢包则要求重发（类似快递员打电话让你补发丢失的箱子）
• 重组被拆分的多个小包裹，恢复完整数据流
• &lt;strong&gt;对应&lt;/strong&gt;：
• 右侧运输层重组数据 → 应用层准备接收&lt;/p&gt;
&lt;h4 id="5-应用层拆最终包裹"&gt;&lt;strong&gt;5. 应用层（拆最终包裹）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• Apache服务器解析HTTP请求内容（比如&amp;quot;请给我首页HTML&amp;quot;）
• 生成响应数据（网页内容），开始反向封包过程（把包裹寄回浏览器）
• &lt;strong&gt;对应图示&lt;/strong&gt;：
• 右侧应用层的Apache进程处理请求，完成解包&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-封包-vs-解包关键对比"&gt;🔄 &lt;strong&gt;封包 vs 解包关键对比&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;方向&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;典型动作&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;图示对应关系&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;封包&lt;/td&gt;
&lt;td&gt;从应用层→物理层&lt;/td&gt;
&lt;td&gt;逐层&lt;strong&gt;添加头部&lt;/strong&gt;（如IP头、TCP头）&lt;/td&gt;
&lt;td&gt;左側Chrome各层向下封装&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;解包&lt;/td&gt;
&lt;td&gt;从物理层→应用层&lt;/td&gt;
&lt;td&gt;逐层&lt;strong&gt;剥离头部&lt;/strong&gt;并校验&lt;/td&gt;
&lt;td&gt;右側Apache各层向上解封装&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id="-解包过程中的核心技术"&gt;💡 &lt;strong&gt;解包过程中的核心技术&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;MAC地址过滤&lt;/strong&gt;（数据链路层）：
• 类似快递驿站只接收本小区快递，服务器会丢弃MAC地址不匹配的数据包&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IP地址验证&lt;/strong&gt;（网络层）：
• 服务器确认数据包是&amp;quot;寄给自己&amp;quot;的，否则执行转发或丢弃&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口号映射&lt;/strong&gt;（运输层）：
• 通过目的端口&lt;code&gt;80&lt;/code&gt;，将数据交给Apache进程（类似快递员按门牌号送货）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据重组&lt;/strong&gt;（运输层）：
• 如果收到顺序错乱的包裹（如先收到编号3/3，再收到1/3），TCP会重新排序&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用协议解析&lt;/strong&gt;（应用层）：
• Apache根据HTTP协议解析请求内容，理解用户想要什么网页&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-结合原图的完整流程"&gt;🌐 &lt;strong&gt;结合原图的完整流程&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;封包（Chrome→N1→N2→Apache）&lt;/strong&gt; ：
• 左側橙色（应用层）→蓝色→绿色→青色→深绿色，经N1/N2路由器传递&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解包（Apache←N2←N1←Chrome）&lt;/strong&gt; ：
• 右側深绿色（物理层）←青色←绿色←蓝色←橙色，逆向剥离每层封装&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-为什么分层解包重要"&gt;🛠️ &lt;strong&gt;为什么分层解包重要？&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;• &lt;strong&gt;错误隔离&lt;/strong&gt;：如果物理层信号干扰（深绿色层），只需重传这一层数据，不影响上层
• &lt;strong&gt;高效处理&lt;/strong&gt;：网络层（绿色）快速判断IP地址，无需解析全部数据
• &lt;strong&gt;灵活扩展&lt;/strong&gt;：新增加密协议只需修改应用层（橙色），其他层保持不变&lt;/p&gt;
&lt;p&gt;下次看到网络分层图时，可以想象数据包像&lt;strong&gt;俄罗斯套娃&lt;/strong&gt;，每一层都包裹着更核心的数据！ 🪆&lt;/p&gt;</description></item><item><title>数据包封装过程</title><link>https://souljian.cn/p/745243535/</link><pubDate>Mon, 21 Apr 2025 21:52:15 +0800</pubDate><guid>https://souljian.cn/p/745243535/</guid><description>&lt;p&gt;我们以 &lt;strong&gt;10网段私有IP地址&lt;/strong&gt; 为例（比如你家/公司内网），重新还原整个过程，重点标注源IP和目的IP：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-快递运输过程10网段ip版"&gt;📦 &lt;strong&gt;快递运输过程（10网段IP版）&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;假设你的电脑IP是 &lt;code&gt;10.0.0.2&lt;/code&gt;，要访问公司内网的服务器IP &lt;code&gt;10.20.1.100&lt;/code&gt;，流程如下：&lt;/p&gt;
&lt;h4 id="1-应用层对话"&gt;&lt;strong&gt;1. 应用层（对话）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;你的浏览器（Chrome）&lt;/strong&gt;
• 源IP：&lt;code&gt;10.0.0.2&lt;/code&gt;（你的电脑）
• 目的IP：&lt;code&gt;10.20.1.100&lt;/code&gt;（公司服务器）
• 请求内容：&amp;ldquo;请给我首页HTML文件&amp;rdquo;（写在快递单上的文字）&lt;/p&gt;
&lt;h4 id="2-运输层拆包贴标签"&gt;&lt;strong&gt;2. 运输层（拆包+贴标签）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;TCP协议处理&lt;/strong&gt;
• 源端口：随机生成（比如&lt;code&gt;54321&lt;/code&gt;，你的浏览器门牌号）
• 目的端口：&lt;code&gt;80&lt;/code&gt;（默认HTTP服务的门牌号）
• 动作：把&amp;quot;首页请求&amp;quot;拆成多个小包裹，每个包裹标注顺序号（类似快递箱编号1/3、2/3、3/3）&lt;/p&gt;
&lt;h4 id="3-网络层找路"&gt;&lt;strong&gt;3. 网络层（找路）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;路由器N1（你的网关）&lt;/strong&gt;
• 源IP：&lt;code&gt;10.0.0.2&lt;/code&gt;
• 目的IP：&lt;code&gt;10.20.1.100&lt;/code&gt;
• 查路由表：&amp;ldquo;去往&lt;code&gt;10.20.0.0/16&lt;/code&gt;网段，下一跳是路由器N2（IP &lt;code&gt;10.0.0.1&lt;/code&gt;）&amp;rdquo;
• 类似快递分拣员：&amp;ldquo;这个包裹是10.20网段的，走3号通道到N2！&amp;rdquo;&lt;/p&gt;
&lt;h4 id="4-数据链路层卡车运输"&gt;&lt;strong&gt;4. 数据链路层（卡车运输）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;从电脑到路由器N1&lt;/strong&gt;
• 源MAC地址：&lt;code&gt;AA:BB:CC:DD:EE:01&lt;/code&gt;（你的电脑网卡）
• 目的MAC地址：&lt;code&gt;AA:BB:CC:DD:EE:02&lt;/code&gt;（路由器N1的接口）
• 动作：通过网线/WiFi传输（卡车运输）&lt;/p&gt;
&lt;h4 id="5-物理层信号传输"&gt;&lt;strong&gt;5. 物理层（信号传输）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• 网线中的电信号或WiFi的无线电波，把二进制数据流（&lt;code&gt;01101000...&lt;/code&gt;）从电脑传到路由器N1。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-完整路径含ip"&gt;🌐 &lt;strong&gt;完整路径（含IP）&lt;/strong&gt;
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;你的电脑 (10.0.0.2) → 路由器N1 → 路由器N2 → 公司服务器 (10.20.1.100)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;应用层&lt;/strong&gt;：浏览器发起请求 → 服务器返回网页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运输层&lt;/strong&gt;：TCP通过端口（源端口）&lt;code&gt;54321→80&lt;/code&gt;（目标端口）保证数据顺序&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络层&lt;/strong&gt;：IP地址（源IP）&lt;code&gt;10.0.0.2→10.20.1.100&lt;/code&gt;（目标IP）指引方向&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据链路层&lt;/strong&gt;：MAC地址逐段接力传输（每经过一个路由器，源/目的MAC都会改变）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;物理层&lt;/strong&gt;：网线/WiFi承载光/电信号&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-关键点"&gt;💡 &lt;strong&gt;关键点&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;IP地址的作用&lt;/strong&gt;：
• 类似快递收件地址，网络层靠IP地址决定包裹往哪送
• &lt;code&gt;10.x.x.x&lt;/code&gt;是私有IP（类似公司内部房间号），仅在局域网内使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MAC地址的作用&lt;/strong&gt;：
• 类似卡车车牌号，数据链路层靠MAC地址完成&amp;quot;最后一公里&amp;quot;配送
• 每经过一个路由器（N1→N2），MAC地址都会更新，但IP地址始终不变&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;为什么用10网段？&lt;/strong&gt;
• 私有IP地址（10.0.0.0~10.255.255.255）专用于内网
• 避免和公网IP冲突，适合企业/家庭内部通信&lt;/li&gt;
&lt;/ol&gt;</description></item></channel></rss>