<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>四次挥手 on SoulJian小站</title><link>https://souljian.cn/tags/%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/</link><description>Recent content in 四次挥手 on SoulJian小站</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Apr 2025 21:54:23 +0800</lastBuildDate><atom:link href="https://souljian.cn/tags/%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>TCP三次握手和四次挥手</title><link>https://souljian.cn/p/745243663/</link><pubDate>Mon, 21 Apr 2025 21:54:23 +0800</pubDate><guid>https://souljian.cn/p/745243663/</guid><description>&lt;h3 id="-三次握手建立连接例子快递员确认收货地址">📦 &lt;strong>三次握手（建立连接）——例子：快递员确认收货地址&lt;/strong>
&lt;/h3>&lt;p>假设你的浏览器（Chrome）是寄件人，服务器（Apache）是收件人，TCP协议（运输层）是快递公司，三次握手就像快递员上门确认地址的过程：&lt;/p>
&lt;h4 id="1-第一次握手浏览器服务器">&lt;strong>1. 第一次握手（浏览器→服务器）&lt;/strong>
&lt;/h4>&lt;p>• &lt;strong>动作&lt;/strong>：
• 浏览器发送一个&lt;code>SYN=1&lt;/code>的包裹（SYN是同步序列号请求），并生成随机序号&lt;code>seq=1000&lt;/code>
• 快递员（TCP）说：&amp;ldquo;您好，我是快递员，Chrome想给Apache寄包裹，您能收吗？&amp;rdquo;
• &lt;strong>对应原图&lt;/strong>：
• 左側运输层（蓝色）→网络层→链路层→物理层，通过N1/N2路由器传递到右侧服务器&lt;/p>
&lt;h4 id="2-第二次握手服务器浏览器">&lt;strong>2. 第二次握手（服务器→浏览器）&lt;/strong>
&lt;/h4>&lt;p>• &lt;strong>动作&lt;/strong>：
• 服务器收到&lt;code>SYN&lt;/code>后，回复&lt;code>SYN=1 + ACK=1&lt;/code>，序号&lt;code>seq=2000&lt;/code>，确认号&lt;code>ack=1001&lt;/code>
• 快递员反馈：&amp;ldquo;Apache确认能收件，请把包裹按编号1001开始发给我！&amp;rdquo;
• &lt;strong>技术点&lt;/strong>：
• &lt;code>ACK=1&lt;/code>表示确认收到第一次握手
• &lt;code>ack=1001&lt;/code>表示&amp;quot;我期待收到下一个编号是1001的数据&amp;quot;&lt;/p>
&lt;h4 id="3-第三次握手浏览器服务器">&lt;strong>3. 第三次握手（浏览器→服务器）&lt;/strong>
&lt;/h4>&lt;p>• &lt;strong>动作&lt;/strong>：
• 浏览器发送&lt;code>ACK=1&lt;/code>，序号&lt;code>seq=1001&lt;/code>，确认号&lt;code>ack=2001&lt;/code>
• 快递员说：&amp;ldquo;好的，我会按您的要求开始寄送！&amp;rdquo;
• &lt;strong>对应原图&lt;/strong>：
• 运输层（蓝色）完成三次握手，应用层（橙色）正式开始传输网页数据&lt;/p>
&lt;h4 id="-为什么必须三次">💡 &lt;strong>为什么必须三次？&lt;/strong>
&lt;/h4>&lt;p>• 防止历史连接干扰：如果第一次握手的包裹卡在路由器（N1/N2）后又重复发送，服务器能通过第三次握手判断是否为过期请求
• 类似快递员必须和双方确认地址，避免寄错地方&lt;/p>
&lt;hr>
&lt;h3 id="-四次挥手断开连接例子快递员确认包裹已全部送达">✋ &lt;strong>四次挥手（断开连接）——例子：快递员确认包裹已全部送达&lt;/strong>
&lt;/h3>&lt;p>当数据传输完毕，TCP需要安全断开连接，就像快递员要确认双方都没有包裹需要寄送了：&lt;/p>
&lt;h4 id="1-第一次挥手浏览器服务器">&lt;strong>1. 第一次挥手（浏览器→服务器）&lt;/strong>
&lt;/h4>&lt;p>• &lt;strong>动作&lt;/strong>：
• 浏览器发送&lt;code>FIN=1&lt;/code>（FIN是结束标志），序号&lt;code>seq=5000&lt;/code>
• 快递员说：&amp;ldquo;Chrome的包裹都寄完了，准备收工啦！&amp;rdquo;&lt;/p>
&lt;h4 id="2-第二次挥手服务器浏览器">&lt;strong>2. 第二次挥手（服务器→浏览器）&lt;/strong>
&lt;/h4>&lt;p>• &lt;strong>动作&lt;/strong>：
• 服务器回复&lt;code>ACK=1&lt;/code>，确认号&lt;code>ack=5001&lt;/code>
• 快递员反馈：&amp;ldquo;好的，我收到你的收工通知了，但等我确认Apache还有没有包裹要寄给你&amp;rdquo;&lt;/p>
&lt;h4 id="3-第三次挥手服务器浏览器">&lt;strong>3. 第三次挥手（服务器→浏览器）&lt;/strong>
&lt;/h4>&lt;p>• &lt;strong>动作&lt;/strong>：
• 服务器发送&lt;code>FIN=1&lt;/code>，序号&lt;code>seq=8000&lt;/code>
• 快递员说：&amp;ldquo;Apache这边也没有包裹要寄了，可以收工！&amp;rdquo;&lt;/p>
&lt;h4 id="4-第四次挥手浏览器服务器">&lt;strong>4. 第四次挥手（浏览器→服务器）&lt;/strong>
&lt;/h4>&lt;p>• &lt;strong>动作&lt;/strong>：
• 浏览器回复&lt;code>ACK=1&lt;/code>，确认号&lt;code>ack=8001&lt;/code>
• 快递员确认：&amp;ldquo;双方都确认完毕，连接正式关闭！&amp;rdquo;&lt;/p>
&lt;h4 id="-为什么挥手要四次">💡 &lt;strong>为什么挥手要四次？&lt;/strong>
&lt;/h4>&lt;p>• 双向确认原则：浏览器和服务器各自独立关闭发送通道
• 第一次挥手：浏览器关闭发送 → 第二次挥手：服务器确认
• 第三次挥手：服务器关闭发送 → 第四次挥手：浏览器确认
• 类似快递员要分别确认寄件人和收件人都没有包裹了&lt;/p>
&lt;hr>
&lt;h3 id="-结合原图的分层与流程">🌐 &lt;strong>结合原图的分层与流程&lt;/strong>
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>运输层专属&lt;/strong>：三次握手和四次挥手都发生在运输层（蓝色部分），应用层（橙色）无感知&lt;/li>
&lt;li>&lt;strong>路由器N1/N2的作用&lt;/strong>：在网络层（绿色）传递握手/挥手的IP包，但不参与TCP逻辑&lt;/li>
&lt;li>&lt;strong>可靠性保障&lt;/strong>：通过序号（seq）和确认号（ack），确保数据像快递包裹一样不丢失、不重复&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="-现实场景对照">🛠️ &lt;strong>现实场景对照&lt;/strong>
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>访问网站时&lt;/strong>：
• 打开网页瞬间完成三次握手 → 传输数据 → 关闭标签页时触发四次挥手&lt;/li>
&lt;li>&lt;strong>下载大文件时&lt;/strong>：
• 握手后持续传输数据包 → 下载完成自动挥手断开&lt;/li>
&lt;li>&lt;strong>网络卡顿时&lt;/strong>：
• 握手失败会显示&amp;quot;连接超时&amp;quot;，挥手异常会导致端口长时间占用&lt;/li>
&lt;/ol>
&lt;hr></description></item></channel></rss>