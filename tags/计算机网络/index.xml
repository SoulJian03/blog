<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>计算机网络 on SoulJian小站</title><link>https://souljian.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link><description>Recent content in 计算机网络 on SoulJian小站</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Apr 2025 21:52:46 +0800</lastBuildDate><atom:link href="https://souljian.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>数据包解包过程</title><link>https://souljian.cn/p/745243566/</link><pubDate>Mon, 21 Apr 2025 21:52:46 +0800</pubDate><guid>https://souljian.cn/p/745243566/</guid><description>&lt;p&gt;好的！我们结合原图用 &lt;strong&gt;「拆快递」&lt;/strong&gt; 的比喻来解释&lt;strong&gt;解包过程&lt;/strong&gt;，帮你把封包/解包的全流程对应到图中的每一层结构：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-解包过程详解对照原图的五层结构"&gt;📦 &lt;strong&gt;解包过程详解（对照原图的五层结构）&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;假设服务器收到你从Chrome发来的数据包（封包过程见前文），现在需要&lt;strong&gt;从物理层到应用层逐层解包&lt;/strong&gt;：&lt;/p&gt;
&lt;h4 id="1-物理层--数据链路层撕外层包装"&gt;&lt;strong&gt;1. 物理层 → 数据链路层（撕外层包装）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 服务器网卡收到光信号/电信号
• 将信号转换为二进制数据流（&lt;code&gt;011010...&lt;/code&gt;）
• &lt;strong&gt;对应&lt;/strong&gt;：
•物理层接收信号，传递给右侧数据链路层&lt;/p&gt;
&lt;h4 id="2-数据链路层拆卡车运输箱"&gt;&lt;strong&gt;2. 数据链路层（拆卡车运输箱）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 检查数据帧的&lt;strong&gt;MAC地址&lt;/strong&gt;（类似核对卡车车牌号）
• 剥离MAC头部，发现目的地是当前服务器
• 如果MAC地址匹配，把数据包交给 网络层 ；不匹配则丢弃
• &lt;strong&gt;对应&lt;/strong&gt;：
• 据链路层剥离封装 → 网络层 开始工作&lt;/p&gt;
&lt;h4 id="3-网络层拆地址分拣标签"&gt;&lt;strong&gt;3. 网络层（拆地址分拣标签）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• 检查IP头部，确认目的IP是&lt;code&gt;10.20.1.100&lt;/code&gt;（服务器自身IP）
• 剥离IP头部，查看传输层协议类型（如TCP/UDP）
• 如果IP不匹配且服务器是路由器，会重新转发（类似快递中转站）
• &lt;strong&gt;对应&lt;/strong&gt;：
•网络层剥离IP封装 → 运输层处理&lt;/p&gt;
&lt;h4 id="4-运输层拆快递小包裹"&gt;&lt;strong&gt;4. 运输层（拆快递小包裹）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• TCP协议检查&lt;strong&gt;端口号&lt;/strong&gt;（比如目的端口&lt;code&gt;80&lt;/code&gt;对应Apache服务）
• 检查数据包顺序号和校验和，若丢包则要求重发（类似快递员打电话让你补发丢失的箱子）
• 重组被拆分的多个小包裹，恢复完整数据流
• &lt;strong&gt;对应&lt;/strong&gt;：
• 右侧运输层重组数据 → 应用层准备接收&lt;/p&gt;
&lt;h4 id="5-应用层拆最终包裹"&gt;&lt;strong&gt;5. 应用层（拆最终包裹）&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;• &lt;strong&gt;动作&lt;/strong&gt;：
• Apache服务器解析HTTP请求内容（比如&amp;quot;请给我首页HTML&amp;quot;）
• 生成响应数据（网页内容），开始反向封包过程（把包裹寄回浏览器）
• &lt;strong&gt;对应图示&lt;/strong&gt;：
• 右侧应用层的Apache进程处理请求，完成解包&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="-封包-vs-解包关键对比"&gt;🔄 &lt;strong&gt;封包 vs 解包关键对比&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;方向&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;典型动作&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;图示对应关系&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;封包&lt;/td&gt;
&lt;td&gt;从应用层→物理层&lt;/td&gt;
&lt;td&gt;逐层&lt;strong&gt;添加头部&lt;/strong&gt;（如IP头、TCP头）&lt;/td&gt;
&lt;td&gt;左側Chrome各层向下封装&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;解包&lt;/td&gt;
&lt;td&gt;从物理层→应用层&lt;/td&gt;
&lt;td&gt;逐层&lt;strong&gt;剥离头部&lt;/strong&gt;并校验&lt;/td&gt;
&lt;td&gt;右側Apache各层向上解封装&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id="-解包过程中的核心技术"&gt;💡 &lt;strong&gt;解包过程中的核心技术&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;MAC地址过滤&lt;/strong&gt;（数据链路层）：
• 类似快递驿站只接收本小区快递，服务器会丢弃MAC地址不匹配的数据包&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IP地址验证&lt;/strong&gt;（网络层）：
• 服务器确认数据包是&amp;quot;寄给自己&amp;quot;的，否则执行转发或丢弃&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口号映射&lt;/strong&gt;（运输层）：
• 通过目的端口&lt;code&gt;80&lt;/code&gt;，将数据交给Apache进程（类似快递员按门牌号送货）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据重组&lt;/strong&gt;（运输层）：
• 如果收到顺序错乱的包裹（如先收到编号3/3，再收到1/3），TCP会重新排序&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用协议解析&lt;/strong&gt;（应用层）：
• Apache根据HTTP协议解析请求内容，理解用户想要什么网页&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-结合原图的完整流程"&gt;🌐 &lt;strong&gt;结合原图的完整流程&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;封包（Chrome→N1→N2→Apache）&lt;/strong&gt; ：
• 左側橙色（应用层）→蓝色→绿色→青色→深绿色，经N1/N2路由器传递&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解包（Apache←N2←N1←Chrome）&lt;/strong&gt; ：
• 右側深绿色（物理层）←青色←绿色←蓝色←橙色，逆向剥离每层封装&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id="-为什么分层解包重要"&gt;🛠️ &lt;strong&gt;为什么分层解包重要？&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;• &lt;strong&gt;错误隔离&lt;/strong&gt;：如果物理层信号干扰（深绿色层），只需重传这一层数据，不影响上层
• &lt;strong&gt;高效处理&lt;/strong&gt;：网络层（绿色）快速判断IP地址，无需解析全部数据
• &lt;strong&gt;灵活扩展&lt;/strong&gt;：新增加密协议只需修改应用层（橙色），其他层保持不变&lt;/p&gt;
&lt;p&gt;下次看到网络分层图时，可以想象数据包像&lt;strong&gt;俄罗斯套娃&lt;/strong&gt;，每一层都包裹着更核心的数据！ 🪆&lt;/p&gt;</description></item></channel></rss>